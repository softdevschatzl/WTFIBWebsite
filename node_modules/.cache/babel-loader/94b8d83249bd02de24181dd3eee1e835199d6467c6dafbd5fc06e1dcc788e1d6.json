{"ast":null,"code":"/*!\n * wavesurfer.js 6.6.4 (2023-06-10)\n * https://wavesurfer-js.org\n * @license BSD-3-Clause\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"WaveSurfer\", [], factory);else if (typeof exports === 'object') exports[\"WaveSurfer\"] = factory();else root[\"WaveSurfer\"] = factory();\n})(self, function () {\n  return (/******/function () {\n      // webpackBootstrap\n      /******/\n      var __webpack_modules__ = {\n        /***/\"./src/drawer.canvasentry.js\":\n        /*!***********************************!*\\\n          !*** ./src/drawer.canvasentry.js ***!\n          \\***********************************/\n        /***/\n        function srcDrawerCanvasentryJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = void 0;\n          var _style = _interopRequireDefault(__webpack_require__( /*! ./util/style */\"./src/util/style.js\"));\n          var _getId = _interopRequireDefault(__webpack_require__( /*! ./util/get-id */\"./src/util/get-id.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n              return typeof obj;\n            } : function (obj) {\n              return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            }, _typeof(obj);\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            Object.defineProperty(Constructor, \"prototype\", {\n              writable: false\n            });\n            return Constructor;\n          }\n          function _toPropertyKey(arg) {\n            var key = _toPrimitive(arg, \"string\");\n            return _typeof(key) === \"symbol\" ? key : String(key);\n          }\n          function _toPrimitive(input, hint) {\n            if (_typeof(input) !== \"object\" || input === null) return input;\n            var prim = input[Symbol.toPrimitive];\n            if (prim !== undefined) {\n              var res = prim.call(input, hint || \"default\");\n              if (_typeof(res) !== \"object\") return res;\n              throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return (hint === \"string\" ? String : Number)(input);\n          }\n          /**\n           * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n           * and an (optional) progress wave `canvas`.\n           *\n           * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n           * render a waveform, depending on the zoom level.\n           */\n          var CanvasEntry = /*#__PURE__*/function () {\n            function CanvasEntry() {\n              _classCallCheck(this, CanvasEntry);\n              /**\n               * The wave node\n               *\n               * @type {HTMLCanvasElement}\n               */\n              this.wave = null;\n              /**\n               * The wave canvas rendering context\n               *\n               * @type {CanvasRenderingContext2D}\n               */\n              this.waveCtx = null;\n              /**\n               * The (optional) progress wave node\n               *\n               * @type {HTMLCanvasElement}\n               */\n              this.progress = null;\n              /**\n               * The (optional) progress wave canvas rendering context\n               *\n               * @type {CanvasRenderingContext2D}\n               */\n              this.progressCtx = null;\n              /**\n               * Start of the area the canvas should render, between 0 and 1\n               *\n               * @type {number}\n               */\n              this.start = 0;\n              /**\n               * End of the area the canvas should render, between 0 and 1\n               *\n               * @type {number}\n               */\n              this.end = 1;\n              /**\n               * Unique identifier for this entry\n               *\n               * @type {string}\n               */\n              this.id = (0, _getId.default)(typeof this.constructor.name !== 'undefined' ? this.constructor.name.toLowerCase() + '_' : 'canvasentry_');\n              /**\n               * Canvas 2d context attributes\n               *\n               * @type {object}\n               */\n              this.canvasContextAttributes = {};\n            }\n\n            /**\n             * Store the wave canvas element and create the 2D rendering context\n             *\n             * @param {HTMLCanvasElement} element The wave `canvas` element.\n             */\n            _createClass(CanvasEntry, [{\n              key: \"initWave\",\n              value: function initWave(element) {\n                this.wave = element;\n                this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n              }\n\n              /**\n               * Store the progress wave canvas element and create the 2D rendering\n               * context\n               *\n               * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n               */\n            }, {\n              key: \"initProgress\",\n              value: function initProgress(element) {\n                this.progress = element;\n                this.progressCtx = this.progress.getContext('2d', this.canvasContextAttributes);\n              }\n\n              /**\n               * Update the dimensions\n               *\n               * @param {number} elementWidth Width of the entry\n               * @param {number} totalWidth Total width of the multi canvas renderer\n               * @param {number} width The new width of the element\n               * @param {number} height The new height of the element\n               */\n            }, {\n              key: \"updateDimensions\",\n              value: function updateDimensions(elementWidth, totalWidth, width, height) {\n                // where the canvas starts and ends in the waveform, represented as a\n                // decimal between 0 and 1\n                this.start = this.wave.offsetLeft / totalWidth || 0;\n                this.end = this.start + elementWidth / totalWidth;\n\n                // set wave canvas dimensions\n                this.wave.width = width;\n                this.wave.height = height;\n                var elementSize = {\n                  width: elementWidth + 'px'\n                };\n                (0, _style.default)(this.wave, elementSize);\n                if (this.hasProgressCanvas) {\n                  // set progress canvas dimensions\n                  this.progress.width = width;\n                  this.progress.height = height;\n                  (0, _style.default)(this.progress, elementSize);\n                }\n              }\n\n              /**\n               * Clear the wave and progress rendering contexts\n               */\n            }, {\n              key: \"clearWave\",\n              value: function clearWave() {\n                // wave\n                this.waveCtx.clearRect(0, 0, this.waveCtx.canvas.width, this.waveCtx.canvas.height);\n\n                // progress\n                if (this.hasProgressCanvas) {\n                  this.progressCtx.clearRect(0, 0, this.progressCtx.canvas.width, this.progressCtx.canvas.height);\n                }\n              }\n\n              /**\n               * Set the fill styles for wave and progress\n               * @param {string|string[]} waveColor Fill color for the wave canvas,\n               * or an array of colors to apply as a gradient\n               * @param {?string|string[]} progressColor Fill color for the progress canvas,\n               * or an array of colors to apply as a gradient\n               */\n            }, {\n              key: \"setFillStyles\",\n              value: function setFillStyles(waveColor, progressColor) {\n                this.waveCtx.fillStyle = this.getFillStyle(this.waveCtx, waveColor);\n                if (this.hasProgressCanvas) {\n                  this.progressCtx.fillStyle = this.getFillStyle(this.progressCtx, progressColor);\n                }\n              }\n\n              /**\n               * Utility function to handle wave color arguments\n               *\n               * When the color argument type is a string or CanvasGradient instance,\n               * it will be returned as is. Otherwise, it will be treated as an array,\n               * and a new CanvasGradient will be returned\n               *\n               * @since 6.0.0\n               * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n               * @param {string|string[]|CanvasGradient} color Either a single fill color\n               *     for the wave canvas, an existing CanvasGradient instance, or an array\n               *     of colors to apply as a gradient\n               * @returns {string|CanvasGradient} Returns a string fillstyle value, or a\n               *     canvas gradient\n               */\n            }, {\n              key: \"getFillStyle\",\n              value: function getFillStyle(ctx, color) {\n                if (typeof color == 'string' || color instanceof CanvasGradient) {\n                  return color;\n                }\n                var waveGradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\n                color.forEach(function (value, index) {\n                  return waveGradient.addColorStop(index / color.length, value);\n                });\n                return waveGradient;\n              }\n\n              /**\n               * Set the canvas transforms for wave and progress\n               *\n               * @param {boolean} vertical Whether to render vertically\n               */\n            }, {\n              key: \"applyCanvasTransforms\",\n              value: function applyCanvasTransforms(vertical) {\n                if (vertical) {\n                  // Reflect the waveform across the line y = -x\n                  this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n                  if (this.hasProgressCanvas) {\n                    this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n                  }\n                }\n              }\n\n              /**\n               * Draw a rectangle for wave and progress\n               *\n               * @param {number} x X start position\n               * @param {number} y Y start position\n               * @param {number} width Width of the rectangle\n               * @param {number} height Height of the rectangle\n               * @param {number} radius Radius of the rectangle\n               */\n            }, {\n              key: \"fillRects\",\n              value: function fillRects(x, y, width, height, radius) {\n                this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n                if (this.hasProgressCanvas) {\n                  this.fillRectToContext(this.progressCtx, x, y, width, height, radius);\n                }\n              }\n\n              /**\n               * Draw the actual rectangle on a `canvas` element\n               *\n               * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n               * @param {number} x X start position\n               * @param {number} y Y start position\n               * @param {number} width Width of the rectangle\n               * @param {number} height Height of the rectangle\n               * @param {number} radius Radius of the rectangle\n               */\n            }, {\n              key: \"fillRectToContext\",\n              value: function fillRectToContext(ctx, x, y, width, height, radius) {\n                if (!ctx) {\n                  return;\n                }\n                if (radius) {\n                  this.drawRoundedRect(ctx, x, y, width, height, radius);\n                } else {\n                  ctx.fillRect(x, y, width, height);\n                }\n              }\n\n              /**\n               * Draw a rounded rectangle on Canvas\n               *\n               * @param {CanvasRenderingContext2D} ctx Canvas context\n               * @param {number} x X-position of the rectangle\n               * @param {number} y Y-position of the rectangle\n               * @param {number} width Width of the rectangle\n               * @param {number} height Height of the rectangle\n               * @param {number} radius Radius of the rectangle\n               *\n               * @return {void}\n               * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n               */\n            }, {\n              key: \"drawRoundedRect\",\n              value: function drawRoundedRect(ctx, x, y, width, height, radius) {\n                if (height === 0) {\n                  return;\n                }\n                // peaks are float values from -1 to 1. Use absolute height values in\n                // order to correctly calculate rounded rectangle coordinates\n                if (height < 0) {\n                  height *= -1;\n                  y -= height;\n                }\n                ctx.beginPath();\n                ctx.moveTo(x + radius, y);\n                ctx.lineTo(x + width - radius, y);\n                ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n                ctx.lineTo(x + width, y + height - radius);\n                ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n                ctx.lineTo(x + radius, y + height);\n                ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n                ctx.lineTo(x, y + radius);\n                ctx.quadraticCurveTo(x, y, x + radius, y);\n                ctx.closePath();\n                ctx.fill();\n              }\n\n              /**\n               * Render the actual wave and progress lines\n               *\n               * @param {number[]} peaks Array with peaks data\n               * @param {number} absmax Maximum peak value (absolute)\n               * @param {number} halfH Half the height of the waveform\n               * @param {number} offsetY Offset to the top\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that\n               * should be rendered\n               */\n            }, {\n              key: \"drawLines\",\n              value: function drawLines(peaks, absmax, halfH, offsetY, start, end) {\n                this.drawLineToContext(this.waveCtx, peaks, absmax, halfH, offsetY, start, end);\n                if (this.hasProgressCanvas) {\n                  this.drawLineToContext(this.progressCtx, peaks, absmax, halfH, offsetY, start, end);\n                }\n              }\n\n              /**\n               * Render the actual waveform line on a `canvas` element\n               *\n               * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n               * @param {number[]} peaks Array with peaks data\n               * @param {number} absmax Maximum peak value (absolute)\n               * @param {number} halfH Half the height of the waveform\n               * @param {number} offsetY Offset to the top\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that\n               * should be rendered\n               */\n            }, {\n              key: \"drawLineToContext\",\n              value: function drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n                if (!ctx) {\n                  return;\n                }\n                var length = peaks.length / 2;\n                var first = Math.round(length * this.start);\n\n                // use one more peak value to make sure we join peaks at ends -- unless,\n                // of course, this is the last canvas\n                var last = Math.round(length * this.end) + 1;\n                var canvasStart = first;\n                var canvasEnd = last;\n                var scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n                // optimization\n                var halfOffset = halfH + offsetY;\n                var absmaxHalf = absmax / halfH;\n                ctx.beginPath();\n                ctx.moveTo((canvasStart - first) * scale, halfOffset);\n                ctx.lineTo((canvasStart - first) * scale, halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf));\n                var i, peak, h;\n                for (i = canvasStart; i < canvasEnd; i++) {\n                  peak = peaks[2 * i] || 0;\n                  h = Math.round(peak / absmaxHalf);\n                  ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n                }\n\n                // draw the bottom edge going backwards, to make a single\n                // closed hull to fill\n                var j = canvasEnd - 1;\n                for (j; j >= canvasStart; j--) {\n                  peak = peaks[2 * j + 1] || 0;\n                  h = Math.round(peak / absmaxHalf);\n                  ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n                }\n                ctx.lineTo((canvasStart - first) * scale, halfOffset - Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf));\n                ctx.closePath();\n                ctx.fill();\n              }\n\n              /**\n               * Destroys this entry\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                this.waveCtx = null;\n                this.wave = null;\n                this.progressCtx = null;\n                this.progress = null;\n              }\n\n              /**\n               * Return image data of the wave `canvas` element\n               *\n               * When using a `type` of `'blob'`, this will return a `Promise` that\n               * resolves with a `Blob` instance.\n               *\n               * @param {string} format='image/png' An optional value of a format type.\n               * @param {number} quality=0.92 An optional value between 0 and 1.\n               * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n               * @return {string|Promise} When using the default `'dataURL'` `type` this\n               * returns a data URL. When using the `'blob'` `type` this returns a\n               * `Promise` that resolves with a `Blob` instance.\n               */\n            }, {\n              key: \"getImage\",\n              value: function getImage(format, quality, type) {\n                var _this = this;\n                if (type === 'blob') {\n                  return new Promise(function (resolve) {\n                    _this.wave.toBlob(resolve, format, quality);\n                  });\n                } else if (type === 'dataURL') {\n                  return this.wave.toDataURL(format, quality);\n                }\n              }\n            }]);\n            return CanvasEntry;\n          }();\n          exports[\"default\"] = CanvasEntry;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/drawer.js\":\n        /*!***********************!*\\\n          !*** ./src/drawer.js ***!\n          \\***********************/\n        /***/\n        function srcDrawerJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n              return typeof obj;\n            } : function (obj) {\n              return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            }, _typeof(obj);\n          }\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = void 0;\n          var util = _interopRequireWildcard(__webpack_require__( /*! ./util */\"./src/util/index.js\"));\n          function _getRequireWildcardCache(nodeInterop) {\n            if (typeof WeakMap !== \"function\") return null;\n            var cacheBabelInterop = new WeakMap();\n            var cacheNodeInterop = new WeakMap();\n            return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n              return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n            })(nodeInterop);\n          }\n          function _interopRequireWildcard(obj, nodeInterop) {\n            if (!nodeInterop && obj && obj.__esModule) {\n              return obj;\n            }\n            if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n              return {\n                default: obj\n              };\n            }\n            var cache = _getRequireWildcardCache(nodeInterop);\n            if (cache && cache.has(obj)) {\n              return cache.get(obj);\n            }\n            var newObj = {};\n            var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n            for (var key in obj) {\n              if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                if (desc && (desc.get || desc.set)) {\n                  Object.defineProperty(newObj, key, desc);\n                } else {\n                  newObj[key] = obj[key];\n                }\n              }\n            }\n            newObj.default = obj;\n            if (cache) {\n              cache.set(obj, newObj);\n            }\n            return newObj;\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            Object.defineProperty(Constructor, \"prototype\", {\n              writable: false\n            });\n            return Constructor;\n          }\n          function _toPropertyKey(arg) {\n            var key = _toPrimitive(arg, \"string\");\n            return _typeof(key) === \"symbol\" ? key : String(key);\n          }\n          function _toPrimitive(input, hint) {\n            if (_typeof(input) !== \"object\" || input === null) return input;\n            var prim = input[Symbol.toPrimitive];\n            if (prim !== undefined) {\n              var res = prim.call(input, hint || \"default\");\n              if (_typeof(res) !== \"object\") return res;\n              throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return (hint === \"string\" ? String : Number)(input);\n          }\n          function _inherits(subClass, superClass) {\n            if (typeof superClass !== \"function\" && superClass !== null) {\n              throw new TypeError(\"Super expression must either be null or a function\");\n            }\n            subClass.prototype = Object.create(superClass && superClass.prototype, {\n              constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n              }\n            });\n            Object.defineProperty(subClass, \"prototype\", {\n              writable: false\n            });\n            if (superClass) _setPrototypeOf(subClass, superClass);\n          }\n          function _setPrototypeOf(o, p) {\n            _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n              o.__proto__ = p;\n              return o;\n            };\n            return _setPrototypeOf(o, p);\n          }\n          function _createSuper(Derived) {\n            var hasNativeReflectConstruct = _isNativeReflectConstruct();\n            return function _createSuperInternal() {\n              var Super = _getPrototypeOf(Derived),\n                result;\n              if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n                result = Reflect.construct(Super, arguments, NewTarget);\n              } else {\n                result = Super.apply(this, arguments);\n              }\n              return _possibleConstructorReturn(this, result);\n            };\n          }\n          function _possibleConstructorReturn(self, call) {\n            if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n              return call;\n            } else if (call !== void 0) {\n              throw new TypeError(\"Derived constructors may only return object or undefined\");\n            }\n            return _assertThisInitialized(self);\n          }\n          function _assertThisInitialized(self) {\n            if (self === void 0) {\n              throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            }\n            return self;\n          }\n          function _isNativeReflectConstruct() {\n            if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n            if (Reflect.construct.sham) return false;\n            if (typeof Proxy === \"function\") return true;\n            try {\n              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }\n          function _getPrototypeOf(o) {\n            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n              return o.__proto__ || Object.getPrototypeOf(o);\n            };\n            return _getPrototypeOf(o);\n          }\n          /**\n           * Parent class for renderers\n           *\n           * @extends {Observer}\n           */\n          var Drawer = /*#__PURE__*/function (_util$Observer) {\n            _inherits(Drawer, _util$Observer);\n            var _super = _createSuper(Drawer);\n            /**\n             * @param {HTMLElement} container The container node of the wavesurfer instance\n             * @param {WavesurferParams} params The wavesurfer initialisation options\n             */\n            function Drawer(container, params) {\n              var _this;\n              _classCallCheck(this, Drawer);\n              _this = _super.call(this);\n              _this.container = util.withOrientation(container, params.vertical);\n              /**\n               * @type {WavesurferParams}\n               */\n              _this.params = params;\n              /**\n               * The width of the renderer\n               * @type {number}\n               */\n              _this.width = 0;\n              /**\n               * The height of the renderer\n               * @type {number}\n               */\n              _this.height = params.height * _this.params.pixelRatio;\n              _this.lastPos = 0;\n              /**\n               * The `<wave>` element which is added to the container\n               * @type {HTMLElement}\n               */\n              _this.wrapper = null;\n              return _this;\n            }\n\n            /**\n             * Alias of `util.style`\n             *\n             * @param {HTMLElement} el The element that the styles will be applied to\n             * @param {Object} styles The map of propName: attribute, both are used as-is\n             * @return {HTMLElement} el\n             */\n            _createClass(Drawer, [{\n              key: \"style\",\n              value: function style(el, styles) {\n                return util.style(el, styles);\n              }\n\n              /**\n               * Create the wrapper `<wave>` element, style it and set up the events for\n               * interaction\n               */\n            }, {\n              key: \"createWrapper\",\n              value: function createWrapper() {\n                this.wrapper = util.withOrientation(this.container.appendChild(document.createElement('wave')), this.params.vertical);\n                this.style(this.wrapper, {\n                  display: 'block',\n                  position: 'relative',\n                  userSelect: 'none',\n                  webkitUserSelect: 'none',\n                  height: this.params.height + 'px'\n                });\n                if (this.params.fillParent || this.params.scrollParent) {\n                  this.style(this.wrapper, {\n                    width: '100%',\n                    cursor: this.params.hideCursor ? 'none' : 'auto',\n                    overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                    overflowY: 'hidden'\n                  });\n                }\n                this.setupWrapperEvents();\n              }\n\n              /**\n               * Handle click event\n               *\n               * @param {Event} e Click event\n               * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n               * @return {number} Playback position from 0 to 1\n               */\n            }, {\n              key: \"handleEvent\",\n              value: function handleEvent(e, noPrevent) {\n                !noPrevent && e.preventDefault();\n                var clientX = util.withOrientation(e.targetTouches ? e.targetTouches[0] : e, this.params.vertical).clientX;\n                var bbox = this.wrapper.getBoundingClientRect();\n                var nominalWidth = this.width;\n                var parentWidth = this.getWidth();\n                var progressPixels = this.getProgressPixels(bbox, clientX);\n                var progress;\n                if (!this.params.fillParent && nominalWidth < parentWidth) {\n                  progress = progressPixels * (this.params.pixelRatio / nominalWidth) || 0;\n                } else {\n                  progress = (progressPixels + this.wrapper.scrollLeft) / this.wrapper.scrollWidth || 0;\n                }\n                return util.clamp(progress, 0, 1);\n              }\n            }, {\n              key: \"getProgressPixels\",\n              value: function getProgressPixels(wrapperBbox, clientX) {\n                if (this.params.rtl) {\n                  return wrapperBbox.right - clientX;\n                } else {\n                  return clientX - wrapperBbox.left;\n                }\n              }\n            }, {\n              key: \"setupWrapperEvents\",\n              value: function setupWrapperEvents() {\n                var _this2 = this;\n                this.wrapper.addEventListener('click', function (e) {\n                  var orientedEvent = util.withOrientation(e, _this2.params.vertical);\n                  var scrollbarHeight = _this2.wrapper.offsetHeight - _this2.wrapper.clientHeight;\n                  if (scrollbarHeight !== 0) {\n                    // scrollbar is visible.  Check if click was on it\n                    var bbox = _this2.wrapper.getBoundingClientRect();\n                    if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\n                      // ignore mousedown as it was on the scrollbar\n                      return;\n                    }\n                  }\n                  if (_this2.params.interact) {\n                    _this2.fireEvent('click', e, _this2.handleEvent(e));\n                  }\n                });\n                this.wrapper.addEventListener('dblclick', function (e) {\n                  if (_this2.params.interact) {\n                    _this2.fireEvent('dblclick', e, _this2.handleEvent(e));\n                  }\n                });\n                this.wrapper.addEventListener('scroll', function (e) {\n                  return _this2.fireEvent('scroll', e);\n                });\n              }\n\n              /**\n               * Draw peaks on the canvas\n               *\n               * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n               * for split channel rendering\n               * @param {number} length The width of the area that should be drawn\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that should be\n               * rendered\n               */\n            }, {\n              key: \"drawPeaks\",\n              value: function drawPeaks(peaks, length, start, end) {\n                if (!this.setWidth(length)) {\n                  this.clearWave();\n                }\n                this.params.barWidth ? this.drawBars(peaks, 0, start, end) : this.drawWave(peaks, 0, start, end);\n              }\n\n              /**\n               * Scroll to the beginning\n               */\n            }, {\n              key: \"resetScroll\",\n              value: function resetScroll() {\n                if (this.wrapper !== null) {\n                  this.wrapper.scrollLeft = 0;\n                }\n              }\n\n              /**\n               * Recenter the view-port at a certain percent of the waveform\n               *\n               * @param {number} percent Value from 0 to 1 on the waveform\n               */\n            }, {\n              key: \"recenter\",\n              value: function recenter(percent) {\n                var position = this.wrapper.scrollWidth * percent;\n                this.recenterOnPosition(position, true);\n              }\n\n              /**\n               * Recenter the view-port on a position, either scroll there immediately or\n               * in steps of 5 pixels\n               *\n               * @param {number} position X-offset in pixels\n               * @param {boolean} immediate Set to true to immediately scroll somewhere\n               */\n            }, {\n              key: \"recenterOnPosition\",\n              value: function recenterOnPosition(position, immediate) {\n                var scrollLeft = this.wrapper.scrollLeft;\n                var half = ~~(this.wrapper.clientWidth / 2);\n                var maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n                var target = position - half;\n                var offset = target - scrollLeft;\n                if (maxScroll == 0) {\n                  // no need to continue if scrollbar is not there\n                  return;\n                }\n\n                // if the cursor is currently visible...\n                if (!immediate && -half <= offset && offset < half) {\n                  // set rate at which waveform is centered\n                  var rate = this.params.autoCenterRate;\n\n                  // make rate depend on width of view and length of waveform\n                  rate /= half;\n                  rate *= maxScroll;\n                  offset = Math.max(-rate, Math.min(rate, offset));\n                  target = scrollLeft + offset;\n                }\n\n                // limit target to valid range (0 to maxScroll)\n                target = Math.max(0, Math.min(maxScroll, target));\n                // no use attempting to scroll if we're not moving\n                if (target != scrollLeft) {\n                  this.wrapper.scrollLeft = target;\n                }\n              }\n\n              /**\n               * Get the current scroll position in pixels\n               *\n               * @return {number} Horizontal scroll position in pixels\n               */\n            }, {\n              key: \"getScrollX\",\n              value: function getScrollX() {\n                var x = 0;\n                if (this.wrapper) {\n                  var pixelRatio = this.params.pixelRatio;\n                  x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n                  // In cases of elastic scroll (safari with mouse wheel) you can\n                  // scroll beyond the limits of the container\n                  // Calculate and floor the scrollable extent to make sure an out\n                  // of bounds value is not returned\n                  // Ticket #1312\n                  if (this.params.scrollParent) {\n                    var maxScroll = ~~(this.wrapper.scrollWidth * pixelRatio - this.getWidth());\n                    x = Math.min(maxScroll, Math.max(0, x));\n                  }\n                }\n                return x;\n              }\n\n              /**\n               * Get the width of the container\n               *\n               * @return {number} The width of the container\n               */\n            }, {\n              key: \"getWidth\",\n              value: function getWidth() {\n                return Math.round(this.container.clientWidth * this.params.pixelRatio);\n              }\n\n              /**\n               * Set the width of the container\n               *\n               * @param {number} width The new width of the container\n               * @return {boolean} Whether the width of the container was updated or not\n               */\n            }, {\n              key: \"setWidth\",\n              value: function setWidth(width) {\n                if (this.width == width) {\n                  return false;\n                }\n                this.width = width;\n                if (this.params.fillParent || this.params.scrollParent) {\n                  this.style(this.wrapper, {\n                    width: ''\n                  });\n                } else {\n                  var newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\n                  this.style(this.wrapper, {\n                    width: newWidth\n                  });\n                }\n                this.updateSize();\n                return true;\n              }\n\n              /**\n               * Set the height of the container\n               *\n               * @param {number} height The new height of the container.\n               * @return {boolean} Whether the height of the container was updated or not\n               */\n            }, {\n              key: \"setHeight\",\n              value: function setHeight(height) {\n                if (height == this.height) {\n                  return false;\n                }\n                this.height = height;\n                this.style(this.wrapper, {\n                  height: ~~(this.height / this.params.pixelRatio) + 'px'\n                });\n                this.updateSize();\n                return true;\n              }\n\n              /**\n               * Called by wavesurfer when progress should be rendered\n               *\n               * @param {number} progress From 0 to 1\n               */\n            }, {\n              key: \"progress\",\n              value: function progress(_progress) {\n                var minPxDelta = 1 / this.params.pixelRatio;\n                var pos = Math.round(_progress * this.width) * minPxDelta;\n                if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n                  this.lastPos = pos;\n                  if (this.params.scrollParent && this.params.autoCenter) {\n                    var newPos = ~~(this.wrapper.scrollWidth * _progress);\n                    this.recenterOnPosition(newPos, this.params.autoCenterImmediately);\n                  }\n                  this.updateProgress(pos);\n                }\n              }\n\n              /**\n               * This is called when wavesurfer is destroyed\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                this.unAll();\n                if (this.wrapper) {\n                  if (this.wrapper.parentNode == this.container.domElement) {\n                    this.container.removeChild(this.wrapper.domElement);\n                  }\n                  this.wrapper = null;\n                }\n              }\n\n              /* Renderer-specific methods */\n\n              /**\n               * Called after cursor related params have changed.\n               *\n               * @abstract\n               */\n            }, {\n              key: \"updateCursor\",\n              value: function updateCursor() {}\n\n              /**\n               * Called when the size of the container changes so the renderer can adjust\n               *\n               * @abstract\n               */\n            }, {\n              key: \"updateSize\",\n              value: function updateSize() {}\n\n              /**\n               * Draw a waveform with bars\n               *\n               * @abstract\n               * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n               * rendering\n               * @param {number} channelIndex The index of the current channel. Normally\n               * should be 0\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that should be\n               * rendered\n               */\n            }, {\n              key: \"drawBars\",\n              value: function drawBars(peaks, channelIndex, start, end) {}\n\n              /**\n               * Draw a waveform\n               *\n               * @abstract\n               * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n               * rendering\n               * @param {number} channelIndex The index of the current channel. Normally\n               * should be 0\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that should be\n               * rendered\n               */\n            }, {\n              key: \"drawWave\",\n              value: function drawWave(peaks, channelIndex, start, end) {}\n\n              /**\n               * Clear the waveform\n               *\n               * @abstract\n               */\n            }, {\n              key: \"clearWave\",\n              value: function clearWave() {}\n\n              /**\n               * Render the new progress\n               *\n               * @abstract\n               * @param {number} position X-Offset of progress position in pixels\n               */\n            }, {\n              key: \"updateProgress\",\n              value: function updateProgress(position) {}\n            }]);\n            return Drawer;\n          }(util.Observer);\n          exports[\"default\"] = Drawer;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/drawer.multicanvas.js\":\n        /*!***********************************!*\\\n          !*** ./src/drawer.multicanvas.js ***!\n          \\***********************************/\n        /***/\n        function srcDrawerMulticanvasJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n              return typeof obj;\n            } : function (obj) {\n              return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            }, _typeof(obj);\n          }\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = void 0;\n          var _drawer = _interopRequireDefault(__webpack_require__( /*! ./drawer */\"./src/drawer.js\"));\n          var util = _interopRequireWildcard(__webpack_require__( /*! ./util */\"./src/util/index.js\"));\n          var _drawer2 = _interopRequireDefault(__webpack_require__( /*! ./drawer.canvasentry */\"./src/drawer.canvasentry.js\"));\n          function _getRequireWildcardCache(nodeInterop) {\n            if (typeof WeakMap !== \"function\") return null;\n            var cacheBabelInterop = new WeakMap();\n            var cacheNodeInterop = new WeakMap();\n            return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n              return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n            })(nodeInterop);\n          }\n          function _interopRequireWildcard(obj, nodeInterop) {\n            if (!nodeInterop && obj && obj.__esModule) {\n              return obj;\n            }\n            if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n              return {\n                default: obj\n              };\n            }\n            var cache = _getRequireWildcardCache(nodeInterop);\n            if (cache && cache.has(obj)) {\n              return cache.get(obj);\n            }\n            var newObj = {};\n            var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n            for (var key in obj) {\n              if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                if (desc && (desc.get || desc.set)) {\n                  Object.defineProperty(newObj, key, desc);\n                } else {\n                  newObj[key] = obj[key];\n                }\n              }\n            }\n            newObj.default = obj;\n            if (cache) {\n              cache.set(obj, newObj);\n            }\n            return newObj;\n          }\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            Object.defineProperty(Constructor, \"prototype\", {\n              writable: false\n            });\n            return Constructor;\n          }\n          function _toPropertyKey(arg) {\n            var key = _toPrimitive(arg, \"string\");\n            return _typeof(key) === \"symbol\" ? key : String(key);\n          }\n          function _toPrimitive(input, hint) {\n            if (_typeof(input) !== \"object\" || input === null) return input;\n            var prim = input[Symbol.toPrimitive];\n            if (prim !== undefined) {\n              var res = prim.call(input, hint || \"default\");\n              if (_typeof(res) !== \"object\") return res;\n              throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return (hint === \"string\" ? String : Number)(input);\n          }\n          function _inherits(subClass, superClass) {\n            if (typeof superClass !== \"function\" && superClass !== null) {\n              throw new TypeError(\"Super expression must either be null or a function\");\n            }\n            subClass.prototype = Object.create(superClass && superClass.prototype, {\n              constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n              }\n            });\n            Object.defineProperty(subClass, \"prototype\", {\n              writable: false\n            });\n            if (superClass) _setPrototypeOf(subClass, superClass);\n          }\n          function _setPrototypeOf(o, p) {\n            _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n              o.__proto__ = p;\n              return o;\n            };\n            return _setPrototypeOf(o, p);\n          }\n          function _createSuper(Derived) {\n            var hasNativeReflectConstruct = _isNativeReflectConstruct();\n            return function _createSuperInternal() {\n              var Super = _getPrototypeOf(Derived),\n                result;\n              if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n                result = Reflect.construct(Super, arguments, NewTarget);\n              } else {\n                result = Super.apply(this, arguments);\n              }\n              return _possibleConstructorReturn(this, result);\n            };\n          }\n          function _possibleConstructorReturn(self, call) {\n            if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n              return call;\n            } else if (call !== void 0) {\n              throw new TypeError(\"Derived constructors may only return object or undefined\");\n            }\n            return _assertThisInitialized(self);\n          }\n          function _assertThisInitialized(self) {\n            if (self === void 0) {\n              throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            }\n            return self;\n          }\n          function _isNativeReflectConstruct() {\n            if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n            if (Reflect.construct.sham) return false;\n            if (typeof Proxy === \"function\") return true;\n            try {\n              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }\n          function _getPrototypeOf(o) {\n            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n              return o.__proto__ || Object.getPrototypeOf(o);\n            };\n            return _getPrototypeOf(o);\n          }\n          /**\n           * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n           * builtin renderer.\n           *\n           * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n           * on the zoom level.\n           */\n          var MultiCanvas = /*#__PURE__*/function (_Drawer) {\n            _inherits(MultiCanvas, _Drawer);\n            var _super = _createSuper(MultiCanvas);\n            /**\n             * @param {HTMLElement} container The container node of the wavesurfer instance\n             * @param {WavesurferParams} params The wavesurfer initialisation options\n             */\n            function MultiCanvas(container, params) {\n              var _this;\n              _classCallCheck(this, MultiCanvas);\n              _this = _super.call(this, container, params);\n\n              /**\n               * @type {number}\n               */\n              _this.maxCanvasWidth = params.maxCanvasWidth;\n\n              /**\n               * @type {number}\n               */\n              _this.maxCanvasElementWidth = Math.round(params.maxCanvasWidth / params.pixelRatio);\n\n              /**\n               * Whether or not the progress wave is rendered. If the `waveColor`\n               * and `progressColor` are the same color it is not.\n               *\n               * @type {boolean}\n               */\n              _this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n              /**\n               * @type {number}\n               */\n              _this.halfPixel = 0.5 / params.pixelRatio;\n\n              /**\n               * List of `CanvasEntry` instances.\n               *\n               * @type {Array}\n               */\n              _this.canvases = [];\n\n              /**\n               * @type {HTMLElement}\n               */\n              _this.progressWave = null;\n\n              /**\n               * Class used to generate entries.\n               *\n               * @type {function}\n               */\n              _this.EntryClass = _drawer2.default;\n\n              /**\n               * Canvas 2d context attributes.\n               *\n               * @type {object}\n               */\n              _this.canvasContextAttributes = params.drawingContextAttributes;\n\n              /**\n               * Overlap added between entries to prevent vertical white stripes\n               * between `canvas` elements.\n               *\n               * @type {number}\n               */\n              _this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n\n              /**\n               * The radius of the wave bars. Makes bars rounded\n               *\n               * @type {number}\n               */\n              _this.barRadius = params.barRadius || 0;\n\n              /**\n               * Whether to render the waveform vertically. Defaults to false.\n               *\n               * @type {boolean}\n               */\n              _this.vertical = params.vertical;\n              return _this;\n            }\n\n            /**\n             * Initialize the drawer\n             */\n            _createClass(MultiCanvas, [{\n              key: \"init\",\n              value: function init() {\n                this.createWrapper();\n                this.createElements();\n              }\n\n              /**\n               * Create the canvas elements and style them\n               *\n               */\n            }, {\n              key: \"createElements\",\n              value: function createElements() {\n                this.progressWave = util.withOrientation(this.wrapper.appendChild(document.createElement('wave')), this.params.vertical);\n                this.style(this.progressWave, {\n                  position: 'absolute',\n                  zIndex: 3,\n                  left: 0,\n                  top: 0,\n                  bottom: 0,\n                  overflow: 'hidden',\n                  width: '0',\n                  display: 'none',\n                  boxSizing: 'border-box',\n                  borderRightStyle: 'solid',\n                  pointerEvents: 'none'\n                });\n                this.addCanvas();\n                this.updateCursor();\n              }\n\n              /**\n               * Update cursor style\n               */\n            }, {\n              key: \"updateCursor\",\n              value: function updateCursor() {\n                this.style(this.progressWave, {\n                  borderRightWidth: this.params.cursorWidth + 'px',\n                  borderRightColor: this.params.cursorColor\n                });\n              }\n\n              /**\n               * Adjust to the updated size by adding or removing canvases\n               */\n            }, {\n              key: \"updateSize\",\n              value: function updateSize() {\n                var _this2 = this;\n                var totalWidth = Math.round(this.width / this.params.pixelRatio);\n                var requiredCanvases = Math.ceil(totalWidth / (this.maxCanvasElementWidth + this.overlap));\n\n                // add required canvases\n                while (this.canvases.length < requiredCanvases) {\n                  this.addCanvas();\n                }\n\n                // remove older existing canvases, if any\n                while (this.canvases.length > requiredCanvases) {\n                  this.removeCanvas();\n                }\n                var canvasWidth = this.maxCanvasWidth + this.overlap;\n                var lastCanvas = this.canvases.length - 1;\n                this.canvases.forEach(function (entry, i) {\n                  if (i == lastCanvas) {\n                    canvasWidth = _this2.width - _this2.maxCanvasWidth * lastCanvas;\n                  }\n                  _this2.updateDimensions(entry, canvasWidth, _this2.height);\n                  entry.clearWave();\n                });\n              }\n\n              /**\n               * Add a canvas to the canvas list\n               *\n               */\n            }, {\n              key: \"addCanvas\",\n              value: function addCanvas() {\n                var entry = new this.EntryClass();\n                entry.canvasContextAttributes = this.canvasContextAttributes;\n                entry.hasProgressCanvas = this.hasProgressCanvas;\n                entry.halfPixel = this.halfPixel;\n                var leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n                // wave\n                var wave = util.withOrientation(this.wrapper.appendChild(document.createElement('canvas')), this.params.vertical);\n                this.style(wave, {\n                  position: 'absolute',\n                  zIndex: 2,\n                  left: leftOffset + 'px',\n                  top: 0,\n                  bottom: 0,\n                  height: '100%',\n                  pointerEvents: 'none'\n                });\n                entry.initWave(wave);\n\n                // progress\n                if (this.hasProgressCanvas) {\n                  var progress = util.withOrientation(this.progressWave.appendChild(document.createElement('canvas')), this.params.vertical);\n                  this.style(progress, {\n                    position: 'absolute',\n                    left: leftOffset + 'px',\n                    top: 0,\n                    bottom: 0,\n                    height: '100%'\n                  });\n                  entry.initProgress(progress);\n                }\n                this.canvases.push(entry);\n              }\n\n              /**\n               * Pop single canvas from the list\n               *\n               */\n            }, {\n              key: \"removeCanvas\",\n              value: function removeCanvas() {\n                var lastEntry = this.canvases[this.canvases.length - 1];\n\n                // wave\n                lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\n\n                // progress\n                if (this.hasProgressCanvas) {\n                  lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n                }\n\n                // cleanup\n                if (lastEntry) {\n                  lastEntry.destroy();\n                  lastEntry = null;\n                }\n                this.canvases.pop();\n              }\n\n              /**\n               * Update the dimensions of a canvas element\n               *\n               * @param {CanvasEntry} entry Target entry\n               * @param {number} width The new width of the element\n               * @param {number} height The new height of the element\n               */\n            }, {\n              key: \"updateDimensions\",\n              value: function updateDimensions(entry, width, height) {\n                var elementWidth = Math.round(width / this.params.pixelRatio);\n                var totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n                // update canvas dimensions\n                entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n                // style element\n                this.style(this.progressWave, {\n                  display: 'block'\n                });\n              }\n\n              /**\n               * Clear the whole multi-canvas\n               */\n            }, {\n              key: \"clearWave\",\n              value: function clearWave() {\n                var _this3 = this;\n                util.frame(function () {\n                  _this3.canvases.forEach(function (entry) {\n                    return entry.clearWave();\n                  });\n                })();\n              }\n\n              /**\n               * Draw a waveform with bars\n               *\n               * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n               * for split channel rendering\n               * @param {number} channelIndex The index of the current channel. Normally\n               * should be 0. Must be an integer.\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that should be\n               * rendered\n               * @returns {void}\n               */\n            }, {\n              key: \"drawBars\",\n              value: function drawBars(peaks, channelIndex, start, end) {\n                var _this4 = this;\n                return this.prepareDraw(peaks, channelIndex, start, end, function (_ref) {\n                  var absmax = _ref.absmax,\n                    hasMinVals = _ref.hasMinVals,\n                    height = _ref.height,\n                    offsetY = _ref.offsetY,\n                    halfH = _ref.halfH,\n                    peaks = _ref.peaks,\n                    ch = _ref.channelIndex;\n                  // if drawBars was called within ws.empty we don't pass a start and\n                  // don't want anything to happen\n                  if (start === undefined) {\n                    return;\n                  }\n                  // Skip every other value if there are negatives.\n                  var peakIndexScale = hasMinVals ? 2 : 1;\n                  var length = peaks.length / peakIndexScale;\n                  var bar = _this4.params.barWidth * _this4.params.pixelRatio;\n                  var gap = _this4.params.barGap === null ? Math.max(_this4.params.pixelRatio, ~~(bar / 2)) : Math.max(_this4.params.pixelRatio, _this4.params.barGap * _this4.params.pixelRatio);\n                  var step = bar + gap;\n                  var scale = length / _this4.width;\n                  var first = start;\n                  var last = end;\n                  var peakIndex = first;\n                  for (peakIndex; peakIndex < last; peakIndex += step) {\n                    // search for the highest peak in the range this bar falls into\n                    var peak = 0;\n                    var peakIndexRange = Math.floor(peakIndex * scale) * peakIndexScale; // start index\n                    var peakIndexEnd = Math.floor((peakIndex + step) * scale) * peakIndexScale;\n                    do {\n                      // do..while makes sure at least one peak is always evaluated\n                      var newPeak = Math.abs(peaks[peakIndexRange]); // for arrays starting with negative values\n                      if (newPeak > peak) {\n                        peak = newPeak; // higher\n                      }\n\n                      peakIndexRange += peakIndexScale; // skip every other value for negatives\n                    } while (peakIndexRange < peakIndexEnd);\n\n                    // calculate the height of this bar according to the highest peak found\n                    var h = Math.round(peak / absmax * halfH);\n\n                    // raise the bar height to the specified minimum height\n                    // Math.max is used to replace any value smaller than barMinHeight (not just 0) with barMinHeight\n                    if (_this4.params.barMinHeight) {\n                      h = Math.max(h, _this4.params.barMinHeight);\n                    }\n                    _this4.fillRect(peakIndex + _this4.halfPixel, halfH - h + offsetY, bar + _this4.halfPixel, h * 2, _this4.barRadius, ch);\n                  }\n                });\n              }\n\n              /**\n               * Draw a waveform\n               *\n               * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n               * for split channel rendering\n               * @param {number} channelIndex The index of the current channel. Normally\n               * should be 0\n               * @param {number?} start The x-offset of the beginning of the area that\n               * should be rendered (If this isn't set only a flat line is rendered)\n               * @param {number?} end The x-offset of the end of the area that should be\n               * rendered\n               * @returns {void}\n               */\n            }, {\n              key: \"drawWave\",\n              value: function drawWave(peaks, channelIndex, start, end) {\n                var _this5 = this;\n                return this.prepareDraw(peaks, channelIndex, start, end, function (_ref2) {\n                  var absmax = _ref2.absmax,\n                    hasMinVals = _ref2.hasMinVals,\n                    height = _ref2.height,\n                    offsetY = _ref2.offsetY,\n                    halfH = _ref2.halfH,\n                    peaks = _ref2.peaks,\n                    channelIndex = _ref2.channelIndex;\n                  if (!hasMinVals) {\n                    var reflectedPeaks = [];\n                    var len = peaks.length;\n                    var i = 0;\n                    for (i; i < len; i++) {\n                      reflectedPeaks[2 * i] = peaks[i];\n                      reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                  }\n\n                  // if drawWave was called within ws.empty we don't pass a start and\n                  // end and simply want a flat line\n                  if (start !== undefined) {\n                    _this5.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                  }\n\n                  // always draw a median line\n                  _this5.fillRect(0, halfH + offsetY - _this5.halfPixel, _this5.width, _this5.halfPixel, _this5.barRadius, channelIndex);\n                });\n              }\n\n              /**\n               * Tell the canvas entries to render their portion of the waveform\n               *\n               * @param {number[]} peaks Peaks data\n               * @param {number} absmax Maximum peak value (absolute)\n               * @param {number} halfH Half the height of the waveform\n               * @param {number} offsetY Offset to the top\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that\n               * should be rendered\n               * @param {channelIndex} channelIndex The channel index of the line drawn\n               */\n            }, {\n              key: \"drawLine\",\n              value: function drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n                var _this6 = this;\n                var _ref3 = this.params.splitChannelsOptions.channelColors[channelIndex] || {},\n                  waveColor = _ref3.waveColor,\n                  progressColor = _ref3.progressColor;\n                this.canvases.forEach(function (entry, i) {\n                  _this6.setFillStyles(entry, waveColor, progressColor);\n                  _this6.applyCanvasTransforms(entry, _this6.params.vertical);\n                  entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n                });\n              }\n\n              /**\n               * Draw a rectangle on the multi-canvas\n               *\n               * @param {number} x X-position of the rectangle\n               * @param {number} y Y-position of the rectangle\n               * @param {number} width Width of the rectangle\n               * @param {number} height Height of the rectangle\n               * @param {number} radius Radius of the rectangle\n               * @param {channelIndex} channelIndex The channel index of the bar drawn\n               */\n            }, {\n              key: \"fillRect\",\n              value: function fillRect(x, y, width, height, radius, channelIndex) {\n                var startCanvas = Math.floor(x / this.maxCanvasWidth);\n                var endCanvas = Math.min(Math.ceil((x + width) / this.maxCanvasWidth) + 1, this.canvases.length);\n                var i = startCanvas;\n                for (i; i < endCanvas; i++) {\n                  var entry = this.canvases[i];\n                  var leftOffset = i * this.maxCanvasWidth;\n                  var intersection = {\n                    x1: Math.max(x, i * this.maxCanvasWidth),\n                    y1: y,\n                    x2: Math.min(x + width, i * this.maxCanvasWidth + entry.wave.width),\n                    y2: y + height\n                  };\n                  if (intersection.x1 < intersection.x2) {\n                    var _ref4 = this.params.splitChannelsOptions.channelColors[channelIndex] || {},\n                      waveColor = _ref4.waveColor,\n                      progressColor = _ref4.progressColor;\n                    this.setFillStyles(entry, waveColor, progressColor);\n                    this.applyCanvasTransforms(entry, this.params.vertical);\n                    entry.fillRects(intersection.x1 - leftOffset, intersection.y1, intersection.x2 - intersection.x1, intersection.y2 - intersection.y1, radius);\n                  }\n                }\n              }\n\n              /**\n               * Returns whether to hide the channel from being drawn based on params.\n               *\n               * @param {number} channelIndex The index of the current channel.\n               * @returns {bool} True to hide the channel, false to draw.\n               */\n            }, {\n              key: \"hideChannel\",\n              value: function hideChannel(channelIndex) {\n                return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n              }\n\n              /**\n               * Performs preparation tasks and calculations which are shared by `drawBars`\n               * and `drawWave`\n               *\n               * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n               * split channel rendering\n               * @param {number} channelIndex The index of the current channel. Normally\n               * should be 0\n               * @param {number?} start The x-offset of the beginning of the area that\n               * should be rendered. If this isn't set only a flat line is rendered\n               * @param {number?} end The x-offset of the end of the area that should be\n               * rendered\n               * @param {function} fn The render function to call, e.g. `drawWave`\n               * @param {number} drawIndex The index of the current channel after filtering.\n               * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\n               * @returns {void}\n               */\n            }, {\n              key: \"prepareDraw\",\n              value: function prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n                var _this7 = this;\n                return util.frame(function () {\n                  // Split channels and call this function with the channelIndex set\n                  if (peaks[0] instanceof Array) {\n                    var channels = peaks;\n                    if (_this7.params.splitChannels) {\n                      var filteredChannels = channels.filter(function (c, i) {\n                        return !_this7.hideChannel(i);\n                      });\n                      if (!_this7.params.splitChannelsOptions.overlay) {\n                        _this7.setHeight(Math.max(filteredChannels.length, 1) * _this7.params.height * _this7.params.pixelRatio);\n                      }\n                      var overallAbsMax;\n                      if (_this7.params.splitChannelsOptions && _this7.params.splitChannelsOptions.relativeNormalization) {\n                        // calculate maximum peak across channels to use for normalization\n                        overallAbsMax = util.max(channels.map(function (channelPeaks) {\n                          return util.absMax(channelPeaks);\n                        }));\n                      }\n                      return channels.forEach(function (channelPeaks, i) {\n                        return _this7.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax);\n                      });\n                    }\n                    peaks = channels[0];\n                  }\n\n                  // Return and do not draw channel peaks if hidden.\n                  if (_this7.hideChannel(channelIndex)) {\n                    return;\n                  }\n\n                  // calculate maximum modulation value, either from the barHeight\n                  // parameter or if normalize=true from the largest value in the peak\n                  // set\n                  var absmax = 1 / _this7.params.barHeight;\n                  if (_this7.params.normalize) {\n                    absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n                  }\n\n                  // Bar wave draws the bottom only as a reflection of the top,\n                  // so we don't need negative values\n                  var hasMinVals = [].some.call(peaks, function (val) {\n                    return val < 0;\n                  });\n                  var height = _this7.params.height * _this7.params.pixelRatio;\n                  var halfH = height / 2;\n                  var offsetY = height * drawIndex || 0;\n\n                  // Override offsetY if overlay is true\n                  if (_this7.params.splitChannelsOptions && _this7.params.splitChannelsOptions.overlay) {\n                    offsetY = 0;\n                  }\n                  return fn({\n                    absmax: absmax,\n                    hasMinVals: hasMinVals,\n                    height: height,\n                    offsetY: offsetY,\n                    halfH: halfH,\n                    peaks: peaks,\n                    channelIndex: channelIndex\n                  });\n                })();\n              }\n\n              /**\n               * Set the fill styles for a certain entry (wave and progress)\n               *\n               * @param {CanvasEntry} entry Target entry\n               * @param {string} waveColor Wave color to draw this entry\n               * @param {string} progressColor Progress color to draw this entry\n               */\n            }, {\n              key: \"setFillStyles\",\n              value: function setFillStyles(entry) {\n                var waveColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.waveColor;\n                var progressColor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.params.progressColor;\n                entry.setFillStyles(waveColor, progressColor);\n              }\n\n              /**\n               * Set the canvas transforms for a certain entry (wave and progress)\n               *\n               * @param {CanvasEntry} entry Target entry\n               * @param {boolean} vertical Whether to render the waveform vertically\n               */\n            }, {\n              key: \"applyCanvasTransforms\",\n              value: function applyCanvasTransforms(entry) {\n                var vertical = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                entry.applyCanvasTransforms(vertical);\n              }\n\n              /**\n               * Return image data of the multi-canvas\n               *\n               * When using a `type` of `'blob'`, this will return a `Promise`.\n               *\n               * @param {string} format='image/png' An optional value of a format type.\n               * @param {number} quality=0.92 An optional value between 0 and 1.\n               * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n               * @return {string|string[]|Promise} When using the default `'dataURL'`\n               * `type` this returns a single data URL or an array of data URLs,\n               * one for each canvas. When using the `'blob'` `type` this returns a\n               * `Promise` that resolves with an array of `Blob` instances, one for each\n               * canvas.\n               */\n            }, {\n              key: \"getImage\",\n              value: function getImage(format, quality, type) {\n                if (type === 'blob') {\n                  return Promise.all(this.canvases.map(function (entry) {\n                    return entry.getImage(format, quality, type);\n                  }));\n                } else if (type === 'dataURL') {\n                  var images = this.canvases.map(function (entry) {\n                    return entry.getImage(format, quality, type);\n                  });\n                  return images.length > 1 ? images : images[0];\n                }\n              }\n\n              /**\n               * Render the new progress\n               *\n               * @param {number} position X-offset of progress position in pixels\n               */\n            }, {\n              key: \"updateProgress\",\n              value: function updateProgress(position) {\n                this.style(this.progressWave, {\n                  width: position + 'px'\n                });\n              }\n            }]);\n            return MultiCanvas;\n          }(_drawer.default);\n          exports[\"default\"] = MultiCanvas;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/mediaelement-webaudio.js\":\n        /*!**************************************!*\\\n          !*** ./src/mediaelement-webaudio.js ***!\n          \\**************************************/\n        /***/\n        function srcMediaelementWebaudioJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n              return typeof obj;\n            } : function (obj) {\n              return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            }, _typeof(obj);\n          }\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = void 0;\n          var _mediaelement = _interopRequireDefault(__webpack_require__( /*! ./mediaelement */\"./src/mediaelement.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            Object.defineProperty(Constructor, \"prototype\", {\n              writable: false\n            });\n            return Constructor;\n          }\n          function _toPropertyKey(arg) {\n            var key = _toPrimitive(arg, \"string\");\n            return _typeof(key) === \"symbol\" ? key : String(key);\n          }\n          function _toPrimitive(input, hint) {\n            if (_typeof(input) !== \"object\" || input === null) return input;\n            var prim = input[Symbol.toPrimitive];\n            if (prim !== undefined) {\n              var res = prim.call(input, hint || \"default\");\n              if (_typeof(res) !== \"object\") return res;\n              throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return (hint === \"string\" ? String : Number)(input);\n          }\n          function _get() {\n            if (typeof Reflect !== \"undefined\" && Reflect.get) {\n              _get = Reflect.get.bind();\n            } else {\n              _get = function _get(target, property, receiver) {\n                var base = _superPropBase(target, property);\n                if (!base) return;\n                var desc = Object.getOwnPropertyDescriptor(base, property);\n                if (desc.get) {\n                  return desc.get.call(arguments.length < 3 ? target : receiver);\n                }\n                return desc.value;\n              };\n            }\n            return _get.apply(this, arguments);\n          }\n          function _superPropBase(object, property) {\n            while (!Object.prototype.hasOwnProperty.call(object, property)) {\n              object = _getPrototypeOf(object);\n              if (object === null) break;\n            }\n            return object;\n          }\n          function _inherits(subClass, superClass) {\n            if (typeof superClass !== \"function\" && superClass !== null) {\n              throw new TypeError(\"Super expression must either be null or a function\");\n            }\n            subClass.prototype = Object.create(superClass && superClass.prototype, {\n              constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n              }\n            });\n            Object.defineProperty(subClass, \"prototype\", {\n              writable: false\n            });\n            if (superClass) _setPrototypeOf(subClass, superClass);\n          }\n          function _setPrototypeOf(o, p) {\n            _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n              o.__proto__ = p;\n              return o;\n            };\n            return _setPrototypeOf(o, p);\n          }\n          function _createSuper(Derived) {\n            var hasNativeReflectConstruct = _isNativeReflectConstruct();\n            return function _createSuperInternal() {\n              var Super = _getPrototypeOf(Derived),\n                result;\n              if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n                result = Reflect.construct(Super, arguments, NewTarget);\n              } else {\n                result = Super.apply(this, arguments);\n              }\n              return _possibleConstructorReturn(this, result);\n            };\n          }\n          function _possibleConstructorReturn(self, call) {\n            if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n              return call;\n            } else if (call !== void 0) {\n              throw new TypeError(\"Derived constructors may only return object or undefined\");\n            }\n            return _assertThisInitialized(self);\n          }\n          function _assertThisInitialized(self) {\n            if (self === void 0) {\n              throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            }\n            return self;\n          }\n          function _isNativeReflectConstruct() {\n            if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n            if (Reflect.construct.sham) return false;\n            if (typeof Proxy === \"function\") return true;\n            try {\n              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }\n          function _getPrototypeOf(o) {\n            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n              return o.__proto__ || Object.getPrototypeOf(o);\n            };\n            return _getPrototypeOf(o);\n          }\n          /**\n           * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n           * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n           * buffer the entire file in one request, and you still get the filtering and scripting functionality\n           * of the webaudio API.\n           * Note that in order to use range requests and prevent buffering, you must provide peak data.\n           *\n           * @since 3.2.0\n           */\n          var MediaElementWebAudio = /*#__PURE__*/function (_MediaElement) {\n            _inherits(MediaElementWebAudio, _MediaElement);\n            var _super = _createSuper(MediaElementWebAudio);\n            /**\n             * Construct the backend\n             *\n             * @param {WavesurferParams} params Wavesurfer parameters\n             */\n            function MediaElementWebAudio(params) {\n              var _this;\n              _classCallCheck(this, MediaElementWebAudio);\n              _this = _super.call(this, params);\n              /** @private */\n              _this.params = params;\n              /** @private */\n              _this.sourceMediaElement = null;\n              return _this;\n            }\n\n            /**\n             * Initialise the backend, called in `wavesurfer.createBackend()`\n             */\n            _createClass(MediaElementWebAudio, [{\n              key: \"init\",\n              value: function init() {\n                this.setPlaybackRate(this.params.audioRate);\n                this.createTimer();\n                this.createVolumeNode();\n                this.createScriptNode();\n                this.createAnalyserNode();\n              }\n              /**\n               * Private method called by both `load` (from url)\n               * and `loadElt` (existing media element) methods.\n               *\n               * @param {HTMLMediaElement} media HTML5 Audio or Video element\n               * @param {number[]|Number.<Array[]>} peaks Array of peak data\n               * @param {string} preload HTML 5 preload attribute value\n               * @private\n               */\n            }, {\n              key: \"_load\",\n              value: function _load(media, peaks, preload) {\n                _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"_load\", this).call(this, media, peaks, preload);\n                this.createMediaElementSource(media);\n              }\n\n              /**\n               * Create MediaElementSource node\n               *\n               * @since 3.2.0\n               * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n               */\n            }, {\n              key: \"createMediaElementSource\",\n              value: function createMediaElementSource(mediaElement) {\n                this.sourceMediaElement = this.ac.createMediaElementSource(mediaElement);\n                this.sourceMediaElement.connect(this.analyser);\n              }\n            }, {\n              key: \"play\",\n              value: function play(start, end) {\n                this.resumeAudioContext();\n                return _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"play\", this).call(this, start, end);\n              }\n\n              /**\n               * This is called when wavesurfer is destroyed\n               *\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"destroy\", this).call(this);\n                this.destroyWebAudio();\n              }\n            }]);\n            return MediaElementWebAudio;\n          }(_mediaelement.default);\n          exports[\"default\"] = MediaElementWebAudio;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/mediaelement.js\":\n        /*!*****************************!*\\\n          !*** ./src/mediaelement.js ***!\n          \\*****************************/\n        /***/\n        function srcMediaelementJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n              return typeof obj;\n            } : function (obj) {\n              return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            }, _typeof(obj);\n          }\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = void 0;\n          var _webaudio = _interopRequireDefault(__webpack_require__( /*! ./webaudio */\"./src/webaudio.js\"));\n          var util = _interopRequireWildcard(__webpack_require__( /*! ./util */\"./src/util/index.js\"));\n          function _getRequireWildcardCache(nodeInterop) {\n            if (typeof WeakMap !== \"function\") return null;\n            var cacheBabelInterop = new WeakMap();\n            var cacheNodeInterop = new WeakMap();\n            return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n              return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n            })(nodeInterop);\n          }\n          function _interopRequireWildcard(obj, nodeInterop) {\n            if (!nodeInterop && obj && obj.__esModule) {\n              return obj;\n            }\n            if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n              return {\n                default: obj\n              };\n            }\n            var cache = _getRequireWildcardCache(nodeInterop);\n            if (cache && cache.has(obj)) {\n              return cache.get(obj);\n            }\n            var newObj = {};\n            var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n            for (var key in obj) {\n              if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                if (desc && (desc.get || desc.set)) {\n                  Object.defineProperty(newObj, key, desc);\n                } else {\n                  newObj[key] = obj[key];\n                }\n              }\n            }\n            newObj.default = obj;\n            if (cache) {\n              cache.set(obj, newObj);\n            }\n            return newObj;\n          }\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            Object.defineProperty(Constructor, \"prototype\", {\n              writable: false\n            });\n            return Constructor;\n          }\n          function _toPropertyKey(arg) {\n            var key = _toPrimitive(arg, \"string\");\n            return _typeof(key) === \"symbol\" ? key : String(key);\n          }\n          function _toPrimitive(input, hint) {\n            if (_typeof(input) !== \"object\" || input === null) return input;\n            var prim = input[Symbol.toPrimitive];\n            if (prim !== undefined) {\n              var res = prim.call(input, hint || \"default\");\n              if (_typeof(res) !== \"object\") return res;\n              throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return (hint === \"string\" ? String : Number)(input);\n          }\n          function _get() {\n            if (typeof Reflect !== \"undefined\" && Reflect.get) {\n              _get = Reflect.get.bind();\n            } else {\n              _get = function _get(target, property, receiver) {\n                var base = _superPropBase(target, property);\n                if (!base) return;\n                var desc = Object.getOwnPropertyDescriptor(base, property);\n                if (desc.get) {\n                  return desc.get.call(arguments.length < 3 ? target : receiver);\n                }\n                return desc.value;\n              };\n            }\n            return _get.apply(this, arguments);\n          }\n          function _superPropBase(object, property) {\n            while (!Object.prototype.hasOwnProperty.call(object, property)) {\n              object = _getPrototypeOf(object);\n              if (object === null) break;\n            }\n            return object;\n          }\n          function _inherits(subClass, superClass) {\n            if (typeof superClass !== \"function\" && superClass !== null) {\n              throw new TypeError(\"Super expression must either be null or a function\");\n            }\n            subClass.prototype = Object.create(superClass && superClass.prototype, {\n              constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n              }\n            });\n            Object.defineProperty(subClass, \"prototype\", {\n              writable: false\n            });\n            if (superClass) _setPrototypeOf(subClass, superClass);\n          }\n          function _setPrototypeOf(o, p) {\n            _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n              o.__proto__ = p;\n              return o;\n            };\n            return _setPrototypeOf(o, p);\n          }\n          function _createSuper(Derived) {\n            var hasNativeReflectConstruct = _isNativeReflectConstruct();\n            return function _createSuperInternal() {\n              var Super = _getPrototypeOf(Derived),\n                result;\n              if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n                result = Reflect.construct(Super, arguments, NewTarget);\n              } else {\n                result = Super.apply(this, arguments);\n              }\n              return _possibleConstructorReturn(this, result);\n            };\n          }\n          function _possibleConstructorReturn(self, call) {\n            if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n              return call;\n            } else if (call !== void 0) {\n              throw new TypeError(\"Derived constructors may only return object or undefined\");\n            }\n            return _assertThisInitialized(self);\n          }\n          function _assertThisInitialized(self) {\n            if (self === void 0) {\n              throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            }\n            return self;\n          }\n          function _isNativeReflectConstruct() {\n            if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n            if (Reflect.construct.sham) return false;\n            if (typeof Proxy === \"function\") return true;\n            try {\n              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }\n          function _getPrototypeOf(o) {\n            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n              return o.__proto__ || Object.getPrototypeOf(o);\n            };\n            return _getPrototypeOf(o);\n          }\n          /**\n           * MediaElement backend\n           */\n          var MediaElement = /*#__PURE__*/function (_WebAudio) {\n            _inherits(MediaElement, _WebAudio);\n            var _super = _createSuper(MediaElement);\n            /**\n             * Construct the backend\n             *\n             * @param {WavesurferParams} params Wavesurfer parameters\n             */\n            function MediaElement(params) {\n              var _this;\n              _classCallCheck(this, MediaElement);\n              _this = _super.call(this, params);\n              /** @private */\n              _this.params = params;\n\n              /**\n               * Initially a dummy media element to catch errors. Once `_load` is\n               * called, this will contain the actual `HTMLMediaElement`.\n               * @private\n               */\n              _this.media = {\n                currentTime: 0,\n                duration: 0,\n                paused: true,\n                playbackRate: 1,\n                play: function play() {},\n                pause: function pause() {},\n                volume: 0\n              };\n\n              /** @private */\n              _this.mediaType = params.mediaType.toLowerCase();\n              /** @private */\n              _this.elementPosition = params.elementPosition;\n              /** @private */\n              _this.peaks = null;\n              /** @private */\n              _this.playbackRate = 1;\n              /** @private */\n              _this.volume = 1;\n              /** @private */\n              _this.isMuted = false;\n              /** @private */\n              _this.buffer = null;\n              /** @private */\n              _this.onPlayEnd = null;\n              /** @private */\n              _this.mediaListeners = {};\n              return _this;\n            }\n\n            /**\n             * Initialise the backend, called in `wavesurfer.createBackend()`\n             */\n            _createClass(MediaElement, [{\n              key: \"init\",\n              value: function init() {\n                this.setPlaybackRate(this.params.audioRate);\n                this.createTimer();\n              }\n\n              /**\n               * Attach event listeners to media element.\n               */\n            }, {\n              key: \"_setupMediaListeners\",\n              value: function _setupMediaListeners() {\n                var _this2 = this;\n                this.mediaListeners.error = function () {\n                  _this2.fireEvent('error', 'Error loading media element');\n                };\n                this.mediaListeners.waiting = function () {\n                  _this2.fireEvent('waiting');\n                };\n                this.mediaListeners.canplay = function () {\n                  _this2.fireEvent('canplay');\n                };\n                this.mediaListeners.ended = function () {\n                  _this2.fireEvent('finish');\n                };\n                // listen to and relay play, pause and seeked events to enable\n                // playback control from the external media element\n                this.mediaListeners.play = function () {\n                  _this2.fireEvent('play');\n                };\n                this.mediaListeners.pause = function () {\n                  _this2.fireEvent('pause');\n                };\n                this.mediaListeners.seeked = function (event) {\n                  _this2.fireEvent('seek');\n                };\n                this.mediaListeners.volumechange = function (event) {\n                  _this2.isMuted = _this2.media.muted;\n                  if (_this2.isMuted) {\n                    _this2.volume = 0;\n                  } else {\n                    _this2.volume = _this2.media.volume;\n                  }\n                  _this2.fireEvent('volume');\n                };\n\n                // reset event listeners\n                Object.keys(this.mediaListeners).forEach(function (id) {\n                  _this2.media.removeEventListener(id, _this2.mediaListeners[id]);\n                  _this2.media.addEventListener(id, _this2.mediaListeners[id]);\n                });\n              }\n\n              /**\n               * Create a timer to provide a more precise `audioprocess` event.\n               */\n            }, {\n              key: \"createTimer\",\n              value: function createTimer() {\n                var _this3 = this;\n                var onAudioProcess = function onAudioProcess() {\n                  if (_this3.isPaused()) {\n                    return;\n                  }\n                  _this3.fireEvent('audioprocess', _this3.getCurrentTime());\n\n                  // Call again in the next frame\n                  util.frame(onAudioProcess)();\n                };\n                this.on('play', onAudioProcess);\n\n                // Update the progress one more time to prevent it from being stuck in\n                // case of lower framerates\n                this.on('pause', function () {\n                  _this3.fireEvent('audioprocess', _this3.getCurrentTime());\n                });\n              }\n\n              /**\n               * Create media element with url as its source,\n               * and append to container element.\n               *\n               * @param {string} url Path to media file\n               * @param {HTMLElement} container HTML element\n               * @param {number[]|Number.<Array[]>} peaks Array of peak data\n               * @param {string} preload HTML 5 preload attribute value\n               * @throws Will throw an error if the `url` argument is not a valid media\n               * element.\n               */\n            }, {\n              key: \"load\",\n              value: function load(url, container, peaks, preload) {\n                var media = document.createElement(this.mediaType);\n                media.controls = this.params.mediaControls;\n                media.autoplay = this.params.autoplay || false;\n                media.preload = preload == null ? 'auto' : preload;\n                media.src = url;\n                media.style.width = '100%';\n                var prevMedia = container.querySelector(this.mediaType);\n                if (prevMedia) {\n                  container.removeChild(prevMedia);\n                }\n                container.appendChild(media);\n                this._load(media, peaks, preload);\n              }\n\n              /**\n               * Load existing media element.\n               *\n               * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n               * @param {number[]|Number.<Array[]>} peaks Array of peak data\n               */\n            }, {\n              key: \"loadElt\",\n              value: function loadElt(elt, peaks) {\n                elt.controls = this.params.mediaControls;\n                elt.autoplay = this.params.autoplay || false;\n                this._load(elt, peaks, elt.preload);\n              }\n\n              /**\n               * Method called by both `load` (from url)\n               * and `loadElt` (existing media element) methods.\n               *\n               * @param {HTMLMediaElement} media HTML5 Audio or Video element\n               * @param {number[]|Number.<Array[]>} peaks Array of peak data\n               * @param {string} preload HTML 5 preload attribute value\n               * @throws Will throw an error if the `media` argument is not a valid media\n               * element.\n               * @private\n               */\n            }, {\n              key: \"_load\",\n              value: function _load(media, peaks, preload) {\n                // verify media element is valid\n                if (!(media instanceof HTMLMediaElement) || typeof media.addEventListener === 'undefined') {\n                  throw new Error('media parameter is not a valid media element');\n                }\n\n                // load must be called manually on iOS, otherwise peaks won't draw\n                // until a user interaction triggers load --> 'ready' event\n                //\n                // note that we avoid calling media.load here when given peaks and preload == 'none'\n                // as this almost always triggers some browser fetch of the media.\n                if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\n                  // Resets the media element and restarts the media resource. Any\n                  // pending events are discarded. How much media data is fetched is\n                  // still affected by the preload attribute.\n                  media.load();\n                }\n                this.media = media;\n                this._setupMediaListeners();\n                this.peaks = peaks;\n                this.onPlayEnd = null;\n                this.buffer = null;\n                this.isMuted = media.muted;\n                this.setPlaybackRate(this.playbackRate);\n                this.setVolume(this.volume);\n              }\n\n              /**\n               * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n               *\n               * @return {boolean} Media paused or not\n               */\n            }, {\n              key: \"isPaused\",\n              value: function isPaused() {\n                return !this.media || this.media.paused;\n              }\n\n              /**\n               * Used by `wavesurfer.getDuration()`\n               *\n               * @return {number} Duration\n               */\n            }, {\n              key: \"getDuration\",\n              value: function getDuration() {\n                if (this.explicitDuration) {\n                  return this.explicitDuration;\n                }\n                var duration = (this.buffer || this.media).duration;\n                if (duration >= Infinity) {\n                  // streaming audio\n                  duration = this.media.seekable.end(0);\n                }\n                return duration;\n              }\n\n              /**\n               * Returns the current time in seconds relative to the audio-clip's\n               * duration.\n               *\n               * @return {number} Current time\n               */\n            }, {\n              key: \"getCurrentTime\",\n              value: function getCurrentTime() {\n                return this.media && this.media.currentTime;\n              }\n\n              /**\n               * Get the position from 0 to 1\n               *\n               * @return {number} Current position\n               */\n            }, {\n              key: \"getPlayedPercents\",\n              value: function getPlayedPercents() {\n                return this.getCurrentTime() / this.getDuration() || 0;\n              }\n\n              /**\n               * Get the audio source playback rate.\n               *\n               * @return {number} Playback rate\n               */\n            }, {\n              key: \"getPlaybackRate\",\n              value: function getPlaybackRate() {\n                return this.playbackRate || this.media.playbackRate;\n              }\n\n              /**\n               * Set the audio source playback rate.\n               *\n               * @param {number} value Playback rate\n               */\n            }, {\n              key: \"setPlaybackRate\",\n              value: function setPlaybackRate(value) {\n                this.playbackRate = value || 1;\n                this.media.playbackRate = this.playbackRate;\n              }\n\n              /**\n               * Used by `wavesurfer.seekTo()`\n               *\n               * @param {number} start Position to start at in seconds\n               */\n            }, {\n              key: \"seekTo\",\n              value: function seekTo(start) {\n                if (start != null && !isNaN(start)) {\n                  this.media.currentTime = start;\n                }\n                this.clearPlayEnd();\n              }\n\n              /**\n               * Plays the loaded audio region.\n               *\n               * @param {number} start Start offset in seconds, relative to the beginning\n               * of a clip.\n               * @param {number} end When to stop, relative to the beginning of a clip.\n               * @emits MediaElement#play\n               * @return {Promise} Result\n               */\n            }, {\n              key: \"play\",\n              value: function play(start, end) {\n                this.seekTo(start);\n                var promise = this.media.play();\n                end && this.setPlayEnd(end);\n                return promise;\n              }\n\n              /**\n               * Pauses the loaded audio.\n               *\n               * @emits MediaElement#pause\n               * @return {Promise} Result\n               */\n            }, {\n              key: \"pause\",\n              value: function pause() {\n                var promise;\n                if (this.media) {\n                  promise = this.media.pause();\n                }\n                this.clearPlayEnd();\n                return promise;\n              }\n\n              /**\n               * Set the play end\n               *\n               * @param {number} end Where to end\n               */\n            }, {\n              key: \"setPlayEnd\",\n              value: function setPlayEnd(end) {\n                var _this4 = this;\n                this.clearPlayEnd();\n                this._onPlayEnd = function (time) {\n                  if (time >= end) {\n                    _this4.pause();\n                    _this4.seekTo(end);\n                  }\n                };\n                this.on('audioprocess', this._onPlayEnd);\n              }\n\n              /** @private */\n            }, {\n              key: \"clearPlayEnd\",\n              value: function clearPlayEnd() {\n                if (this._onPlayEnd) {\n                  this.un('audioprocess', this._onPlayEnd);\n                  this._onPlayEnd = null;\n                }\n              }\n\n              /**\n               * Compute the max and min value of the waveform when broken into\n               * <length> subranges.\n               *\n               * @param {number} length How many subranges to break the waveform into.\n               * @param {number} first First sample in the required range.\n               * @param {number} last Last sample in the required range.\n               * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n               * arrays of peaks consisting of (max, min) values for each subrange.\n               */\n            }, {\n              key: \"getPeaks\",\n              value: function getPeaks(length, first, last) {\n                if (this.buffer) {\n                  return _get(_getPrototypeOf(MediaElement.prototype), \"getPeaks\", this).call(this, length, first, last);\n                }\n                return this.peaks || [];\n              }\n\n              /**\n               * Set the sink id for the media player\n               *\n               * @param {string} deviceId String value representing audio device id.\n               * @returns {Promise} A Promise that resolves to `undefined` when there\n               * are no errors.\n               */\n            }, {\n              key: \"setSinkId\",\n              value: function setSinkId(deviceId) {\n                if (deviceId) {\n                  if (!this.media.setSinkId) {\n                    return Promise.reject(new Error('setSinkId is not supported in your browser'));\n                  }\n                  return this.media.setSinkId(deviceId);\n                }\n                return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n              }\n\n              /**\n               * Get the current volume\n               *\n               * @return {number} value A floating point value between 0 and 1.\n               */\n            }, {\n              key: \"getVolume\",\n              value: function getVolume() {\n                return this.volume;\n              }\n\n              /**\n               * Set the audio volume\n               *\n               * @param {number} value A floating point value between 0 and 1.\n               */\n            }, {\n              key: \"setVolume\",\n              value: function setVolume(value) {\n                this.volume = value;\n                // no need to change when it's already at that volume\n                if (this.media.volume !== this.volume) {\n                  this.media.volume = this.volume;\n                }\n              }\n\n              /**\n               * Enable or disable muted audio\n               *\n               * @since 4.0.0\n               * @param {boolean} muted Specify `true` to mute audio.\n               */\n            }, {\n              key: \"setMute\",\n              value: function setMute(muted) {\n                // This causes a volume change to be emitted too through the\n                // volumechange event listener.\n                this.isMuted = this.media.muted = muted;\n              }\n\n              /**\n               * This is called when wavesurfer is destroyed\n               *\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                var _this5 = this;\n                this.pause();\n                this.unAll();\n                this.destroyed = true;\n\n                // cleanup media event listeners\n                Object.keys(this.mediaListeners).forEach(function (id) {\n                  if (_this5.media) {\n                    _this5.media.removeEventListener(id, _this5.mediaListeners[id]);\n                  }\n                });\n                if (this.params.removeMediaElementOnDestroy && this.media && this.media.parentNode) {\n                  this.media.parentNode.removeChild(this.media);\n                }\n                this.media = null;\n              }\n            }]);\n            return MediaElement;\n          }(_webaudio.default);\n          exports[\"default\"] = MediaElement;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/peakcache.js\":\n        /*!**************************!*\\\n          !*** ./src/peakcache.js ***!\n          \\**************************/\n        /***/\n        function srcPeakcacheJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = void 0;\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n              return typeof obj;\n            } : function (obj) {\n              return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            }, _typeof(obj);\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            Object.defineProperty(Constructor, \"prototype\", {\n              writable: false\n            });\n            return Constructor;\n          }\n          function _toPropertyKey(arg) {\n            var key = _toPrimitive(arg, \"string\");\n            return _typeof(key) === \"symbol\" ? key : String(key);\n          }\n          function _toPrimitive(input, hint) {\n            if (_typeof(input) !== \"object\" || input === null) return input;\n            var prim = input[Symbol.toPrimitive];\n            if (prim !== undefined) {\n              var res = prim.call(input, hint || \"default\");\n              if (_typeof(res) !== \"object\") return res;\n              throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return (hint === \"string\" ? String : Number)(input);\n          }\n          /**\n           * Caches the decoded peaks data to improve rendering speed for large audio\n           *\n           * Is used if the option parameter `partialRender` is set to `true`\n           */\n          var PeakCache = /*#__PURE__*/function () {\n            /**\n             * Instantiate cache\n             */\n            function PeakCache() {\n              _classCallCheck(this, PeakCache);\n              this.clearPeakCache();\n            }\n\n            /**\n             * Empty the cache\n             */\n            _createClass(PeakCache, [{\n              key: \"clearPeakCache\",\n              value: function clearPeakCache() {\n                /**\n                 * Flat array with entries that are always in pairs to mark the\n                 * beginning and end of each subrange.  This is a convenience so we can\n                 * iterate over the pairs for easy set difference operations.\n                 * @private\n                 */\n                this.peakCacheRanges = [];\n                /**\n                 * Length of the entire cachable region, used for resetting the cache\n                 * when this changes (zoom events, for instance).\n                 * @private\n                 */\n                this.peakCacheLength = -1;\n              }\n\n              /**\n               * Add a range of peaks to the cache\n               *\n               * @param {number} length The length of the range\n               * @param {number} start The x offset of the start of the range\n               * @param {number} end The x offset of the end of the range\n               * @return {Number.<Array[]>} Array with arrays of numbers\n               */\n            }, {\n              key: \"addRangeToPeakCache\",\n              value: function addRangeToPeakCache(length, start, end) {\n                if (length != this.peakCacheLength) {\n                  this.clearPeakCache();\n                  this.peakCacheLength = length;\n                }\n\n                // Return ranges that weren't in the cache before the call.\n                var uncachedRanges = [];\n                var i = 0;\n                // Skip ranges before the current start.\n                while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] < start) {\n                  i++;\n                }\n                // If |i| is even, |start| falls after an existing range.  Otherwise,\n                // |start| falls between an existing range, and the uncached region\n                // starts when we encounter the next node in |peakCacheRanges| or\n                // |end|, whichever comes first.\n                if (i % 2 == 0) {\n                  uncachedRanges.push(start);\n                }\n                while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] <= end) {\n                  uncachedRanges.push(this.peakCacheRanges[i]);\n                  i++;\n                }\n                // If |i| is even, |end| is after all existing ranges.\n                if (i % 2 == 0) {\n                  uncachedRanges.push(end);\n                }\n\n                // Filter out the 0-length ranges.\n                uncachedRanges = uncachedRanges.filter(function (item, pos, arr) {\n                  if (pos == 0) {\n                    return item != arr[pos + 1];\n                  } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                  }\n                  return item != arr[pos - 1] && item != arr[pos + 1];\n                });\n\n                // Merge the two ranges together, uncachedRanges will either contain\n                // wholly new points, or duplicates of points in peakCacheRanges.  If\n                // duplicates are detected, remove both and extend the range.\n                this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n                this.peakCacheRanges = this.peakCacheRanges.sort(function (a, b) {\n                  return a - b;\n                }).filter(function (item, pos, arr) {\n                  if (pos == 0) {\n                    return item != arr[pos + 1];\n                  } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                  }\n                  return item != arr[pos - 1] && item != arr[pos + 1];\n                });\n\n                // Push the uncached ranges into an array of arrays for ease of\n                // iteration in the functions that call this.\n                var uncachedRangePairs = [];\n                for (i = 0; i < uncachedRanges.length; i += 2) {\n                  uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n                }\n                return uncachedRangePairs;\n              }\n\n              /**\n               * For testing\n               *\n               * @return {Number.<Array[]>} Array with arrays of numbers\n               */\n            }, {\n              key: \"getCacheRanges\",\n              value: function getCacheRanges() {\n                var peakCacheRangePairs = [];\n                var i;\n                for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n                  peakCacheRangePairs.push([this.peakCacheRanges[i], this.peakCacheRanges[i + 1]]);\n                }\n                return peakCacheRangePairs;\n              }\n            }]);\n            return PeakCache;\n          }();\n          exports[\"default\"] = PeakCache;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/absMax.js\":\n        /*!****************************!*\\\n          !*** ./src/util/absMax.js ***!\n          \\****************************/\n        /***/\n        function srcUtilAbsMaxJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = absMax;\n          var _max = _interopRequireDefault(__webpack_require__( /*! ./max */\"./src/util/max.js\"));\n          var _min = _interopRequireDefault(__webpack_require__( /*! ./min */\"./src/util/min.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          /**\r\n           * Get the largest absolute value in an array\r\n           *\r\n           * @param   {Array} values Array of numbers\r\n           * @returns {Number} Largest number found\r\n           * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n           * @since 4.3.0\r\n           */\n          function absMax(values) {\n            var max = (0, _max.default)(values);\n            var min = (0, _min.default)(values);\n            return -min > max ? -min : max;\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/clamp.js\":\n        /*!***************************!*\\\n          !*** ./src/util/clamp.js ***!\n          \\***************************/\n        /***/\n        function srcUtilClampJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = clamp;\n          /**\n           * Returns a number limited to the given range.\n           *\n           * @param {number} val The number to be limited to a range\n           * @param {number} min The lower boundary of the limit range\n           * @param {number} max The upper boundary of the limit range\n           * @returns {number} A number in the range [min, max]\n           */\n          function clamp(val, min, max) {\n            return Math.min(Math.max(min, val), max);\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/fetch.js\":\n        /*!***************************!*\\\n          !*** ./src/util/fetch.js ***!\n          \\***************************/\n        /***/\n        function srcUtilFetchJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = fetchFile;\n          var _observer = _interopRequireDefault(__webpack_require__( /*! ./observer */\"./src/util/observer.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n              return typeof obj;\n            } : function (obj) {\n              return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            }, _typeof(obj);\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            Object.defineProperty(Constructor, \"prototype\", {\n              writable: false\n            });\n            return Constructor;\n          }\n          function _toPropertyKey(arg) {\n            var key = _toPrimitive(arg, \"string\");\n            return _typeof(key) === \"symbol\" ? key : String(key);\n          }\n          function _toPrimitive(input, hint) {\n            if (_typeof(input) !== \"object\" || input === null) return input;\n            var prim = input[Symbol.toPrimitive];\n            if (prim !== undefined) {\n              var res = prim.call(input, hint || \"default\");\n              if (_typeof(res) !== \"object\") return res;\n              throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return (hint === \"string\" ? String : Number)(input);\n          }\n          var ProgressHandler = /*#__PURE__*/function () {\n            /**\n             * Instantiate ProgressHandler\n             *\n             * @param {Observer} instance The `fetchFile` observer instance.\n             * @param {Number} contentLength Content length.\n             * @param {Response} response Response object.\n             */\n            function ProgressHandler(instance, contentLength, response) {\n              _classCallCheck(this, ProgressHandler);\n              this.instance = instance;\n              this.instance._reader = response.body.getReader();\n              this.total = parseInt(contentLength, 10);\n              this.loaded = 0;\n            }\n\n            /**\n             * A method that is called once, immediately after the `ReadableStream``\n             * is constructed.\n             *\n             * @param {ReadableStreamDefaultController} controller Controller instance\n             *     used to control the stream.\n             */\n            _createClass(ProgressHandler, [{\n              key: \"start\",\n              value: function start(controller) {\n                var _this = this;\n                var read = function read() {\n                  // instance._reader.read() returns a promise that resolves\n                  // when a value has been received\n                  _this.instance._reader.read().then(function (_ref) {\n                    var done = _ref.done,\n                      value = _ref.value;\n                    // result objects contain two properties:\n                    // done  - true if the stream has already given you all its data.\n                    // value - some data. Always undefined when done is true.\n                    if (done) {\n                      // ensure onProgress called when content-length=0\n                      if (_this.total === 0) {\n                        _this.instance.onProgress.call(_this.instance, {\n                          loaded: _this.loaded,\n                          total: _this.total,\n                          lengthComputable: false\n                        });\n                      }\n                      // no more data needs to be consumed, close the stream\n                      controller.close();\n                      return;\n                    }\n                    _this.loaded += value.byteLength;\n                    _this.instance.onProgress.call(_this.instance, {\n                      loaded: _this.loaded,\n                      total: _this.total,\n                      lengthComputable: !(_this.total === 0)\n                    });\n                    // enqueue the next data chunk into our target stream\n                    controller.enqueue(value);\n                    read();\n                  }).catch(function (error) {\n                    controller.error(error);\n                  });\n                };\n                read();\n              }\n            }]);\n            return ProgressHandler;\n          }();\n          /**\n           * Load a file using `fetch`.\n           *\n           * @param {object} options Request options to use. See example below.\n           * @returns {Observer} Observer instance\n           * @example\n           * // default options\n           * let options = {\n           *     url: undefined,\n           *     method: 'GET',\n           *     mode: 'cors',\n           *     credentials: 'same-origin',\n           *     cache: 'default',\n           *     responseType: 'json',\n           *     requestHeaders: [],\n           *     redirect: 'follow',\n           *     referrer: 'client'\n           * };\n           *\n           * // override some options\n           * options.url = '../media/demo.wav';\n          \n           * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n           * options.responseType = 'arraybuffer';\n           *\n           * // make fetch call\n           * let request = util.fetchFile(options);\n           *\n           * // listen for events\n           * request.on('progress', e => {\n           *     console.log('progress', e);\n           * });\n           *\n           * request.on('success', data => {\n           *     console.log('success!', data);\n           * });\n           *\n           * request.on('error', e => {\n           *     console.warn('fetchFile error: ', e);\n           * });\n           */\n          function fetchFile(options) {\n            if (!options) {\n              throw new Error('fetch options missing');\n            } else if (!options.url) {\n              throw new Error('fetch url missing');\n            }\n            var instance = new _observer.default();\n            var fetchHeaders = new Headers();\n            var fetchRequest = new Request(options.url);\n\n            // add ability to abort\n            instance.controller = new AbortController();\n\n            // check if headers have to be added\n            if (options && options.requestHeaders) {\n              // add custom request headers\n              options.requestHeaders.forEach(function (header) {\n                fetchHeaders.append(header.key, header.value);\n              });\n            }\n\n            // parse fetch options\n            var responseType = options.responseType || 'json';\n            var fetchOptions = {\n              method: options.method || 'GET',\n              headers: fetchHeaders,\n              mode: options.mode || 'cors',\n              credentials: options.credentials || 'same-origin',\n              cache: options.cache || 'default',\n              redirect: options.redirect || 'follow',\n              referrer: options.referrer || 'client',\n              signal: instance.controller.signal\n            };\n            fetch(fetchRequest, fetchOptions).then(function (response) {\n              // store response reference\n              instance.response = response;\n              var progressAvailable = true;\n              if (!response.body) {\n                // ReadableStream is not yet supported in this browser\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                progressAvailable = false;\n              }\n\n              // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n              var contentLength = response.headers.get('content-length');\n              if (contentLength === null) {\n                // Content-Length server response header missing.\n                // Don't evaluate download progress if we can't compare against a total size\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                progressAvailable = false;\n              }\n              if (!progressAvailable) {\n                // not able to check download progress so skip it\n                return response;\n              }\n\n              // fire progress event when during load\n              instance.onProgress = function (e) {\n                instance.fireEvent('progress', e);\n              };\n              return new Response(new ReadableStream(new ProgressHandler(instance, contentLength, response)), fetchOptions);\n            }).then(function (response) {\n              var errMsg;\n              if (response.ok) {\n                switch (responseType) {\n                  case 'arraybuffer':\n                    return response.arrayBuffer();\n                  case 'json':\n                    return response.json();\n                  case 'blob':\n                    return response.blob();\n                  case 'text':\n                    return response.text();\n                  default:\n                    errMsg = 'Unknown responseType: ' + responseType;\n                    break;\n                }\n              }\n              if (!errMsg) {\n                errMsg = 'HTTP error status: ' + response.status;\n              }\n              throw new Error(errMsg);\n            }).then(function (response) {\n              instance.fireEvent('success', response);\n            }).catch(function (error) {\n              instance.fireEvent('error', error);\n            });\n\n            // return the fetch request\n            instance.fetchRequest = fetchRequest;\n            return instance;\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/frame.js\":\n        /*!***************************!*\\\n          !*** ./src/util/frame.js ***!\n          \\***************************/\n        /***/\n        function srcUtilFrameJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = frame;\n          var _requestAnimationFrame = _interopRequireDefault(__webpack_require__( /*! ./request-animation-frame */\"./src/util/request-animation-frame.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          /**\n           * Create a function which will be called at the next requestAnimationFrame\n           * cycle\n           *\n           * @param {function} func The function to call\n           *\n           * @return {func} The function wrapped within a requestAnimationFrame\n           */\n          function frame(func) {\n            return function () {\n              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n              }\n              return (0, _requestAnimationFrame.default)(function () {\n                return func.apply(void 0, args);\n              });\n            };\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/get-id.js\":\n        /*!****************************!*\\\n          !*** ./src/util/get-id.js ***!\n          \\****************************/\n        /***/\n        function srcUtilGetIdJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = getId;\n          /**\n           * Get a random prefixed ID\n           *\n           * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n           * @returns {String} Random prefixed ID\n           * @example\n           * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n           *\n           * let prefix = 'foo-';\n           * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n           */\n          function getId(prefix) {\n            if (prefix === undefined) {\n              prefix = 'wavesurfer_';\n            }\n            return prefix + Math.random().toString(32).substring(2);\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/index.js\":\n        /*!***************************!*\\\n          !*** ./src/util/index.js ***!\n          \\***************************/\n        /***/\n        function srcUtilIndexJs(__unused_webpack_module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          Object.defineProperty(exports, \"Observer\", {\n            enumerable: true,\n            get: function get() {\n              return _observer.default;\n            }\n          });\n          Object.defineProperty(exports, \"absMax\", {\n            enumerable: true,\n            get: function get() {\n              return _absMax.default;\n            }\n          });\n          Object.defineProperty(exports, \"clamp\", {\n            enumerable: true,\n            get: function get() {\n              return _clamp.default;\n            }\n          });\n          Object.defineProperty(exports, \"debounce\", {\n            enumerable: true,\n            get: function get() {\n              return _debounce.default;\n            }\n          });\n          Object.defineProperty(exports, \"fetchFile\", {\n            enumerable: true,\n            get: function get() {\n              return _fetch.default;\n            }\n          });\n          Object.defineProperty(exports, \"frame\", {\n            enumerable: true,\n            get: function get() {\n              return _frame.default;\n            }\n          });\n          Object.defineProperty(exports, \"getId\", {\n            enumerable: true,\n            get: function get() {\n              return _getId.default;\n            }\n          });\n          Object.defineProperty(exports, \"ignoreSilenceMode\", {\n            enumerable: true,\n            get: function get() {\n              return _silenceMode.default;\n            }\n          });\n          Object.defineProperty(exports, \"max\", {\n            enumerable: true,\n            get: function get() {\n              return _max.default;\n            }\n          });\n          Object.defineProperty(exports, \"min\", {\n            enumerable: true,\n            get: function get() {\n              return _min.default;\n            }\n          });\n          Object.defineProperty(exports, \"preventClick\", {\n            enumerable: true,\n            get: function get() {\n              return _preventClick.default;\n            }\n          });\n          Object.defineProperty(exports, \"requestAnimationFrame\", {\n            enumerable: true,\n            get: function get() {\n              return _requestAnimationFrame.default;\n            }\n          });\n          Object.defineProperty(exports, \"style\", {\n            enumerable: true,\n            get: function get() {\n              return _style.default;\n            }\n          });\n          Object.defineProperty(exports, \"withOrientation\", {\n            enumerable: true,\n            get: function get() {\n              return _orientation.default;\n            }\n          });\n          var _getId = _interopRequireDefault(__webpack_require__( /*! ./get-id */\"./src/util/get-id.js\"));\n          var _max = _interopRequireDefault(__webpack_require__( /*! ./max */\"./src/util/max.js\"));\n          var _min = _interopRequireDefault(__webpack_require__( /*! ./min */\"./src/util/min.js\"));\n          var _absMax = _interopRequireDefault(__webpack_require__( /*! ./absMax */\"./src/util/absMax.js\"));\n          var _observer = _interopRequireDefault(__webpack_require__( /*! ./observer */\"./src/util/observer.js\"));\n          var _style = _interopRequireDefault(__webpack_require__( /*! ./style */\"./src/util/style.js\"));\n          var _requestAnimationFrame = _interopRequireDefault(__webpack_require__( /*! ./request-animation-frame */\"./src/util/request-animation-frame.js\"));\n          var _frame = _interopRequireDefault(__webpack_require__( /*! ./frame */\"./src/util/frame.js\"));\n          var _debounce = _interopRequireDefault(__webpack_require__( /*! debounce */\"./node_modules/debounce/index.js\"));\n          var _preventClick = _interopRequireDefault(__webpack_require__( /*! ./prevent-click */\"./src/util/prevent-click.js\"));\n          var _fetch = _interopRequireDefault(__webpack_require__( /*! ./fetch */\"./src/util/fetch.js\"));\n          var _clamp = _interopRequireDefault(__webpack_require__( /*! ./clamp */\"./src/util/clamp.js\"));\n          var _orientation = _interopRequireDefault(__webpack_require__( /*! ./orientation */\"./src/util/orientation.js\"));\n          var _silenceMode = _interopRequireDefault(__webpack_require__( /*! ./silence-mode */\"./src/util/silence-mode.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n\n          /***/\n        },\n\n        /***/\"./src/util/max.js\":\n        /*!*************************!*\\\n          !*** ./src/util/max.js ***!\n          \\*************************/\n        /***/\n        function srcUtilMaxJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = max;\n          /**\n           * Get the largest value\n           *\n           * @param   {Array} values Array of numbers\n           * @returns {Number} Largest number found\n           * @example console.log(max([1, 2, 3])); // logs 3\n           */\n          function max(values) {\n            var largest = -Infinity;\n            Object.keys(values).forEach(function (i) {\n              if (values[i] > largest) {\n                largest = values[i];\n              }\n            });\n            return largest;\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/min.js\":\n        /*!*************************!*\\\n          !*** ./src/util/min.js ***!\n          \\*************************/\n        /***/\n        function srcUtilMinJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = min;\n          /**\n           * Get the smallest value\n           *\n           * @param   {Array} values Array of numbers\n           * @returns {Number} Smallest number found\n           * @example console.log(min([1, 2, 3])); // logs 1\n           */\n          function min(values) {\n            var smallest = Number(Infinity);\n            Object.keys(values).forEach(function (i) {\n              if (values[i] < smallest) {\n                smallest = values[i];\n              }\n            });\n            return smallest;\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/observer.js\":\n        /*!******************************!*\\\n          !*** ./src/util/observer.js ***!\n          \\******************************/\n        /***/\n        function srcUtilObserverJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = void 0;\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n              return typeof obj;\n            } : function (obj) {\n              return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            }, _typeof(obj);\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            Object.defineProperty(Constructor, \"prototype\", {\n              writable: false\n            });\n            return Constructor;\n          }\n          function _toPropertyKey(arg) {\n            var key = _toPrimitive(arg, \"string\");\n            return _typeof(key) === \"symbol\" ? key : String(key);\n          }\n          function _toPrimitive(input, hint) {\n            if (_typeof(input) !== \"object\" || input === null) return input;\n            var prim = input[Symbol.toPrimitive];\n            if (prim !== undefined) {\n              var res = prim.call(input, hint || \"default\");\n              if (_typeof(res) !== \"object\") return res;\n              throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return (hint === \"string\" ? String : Number)(input);\n          }\n          /**\n           * @typedef {Object} ListenerDescriptor\n           * @property {string} name The name of the event\n           * @property {function} callback The callback\n           * @property {function} un The function to call to remove the listener\n           */\n          /**\n           * Observer class\n           */\n          var Observer = /*#__PURE__*/function () {\n            /**\n             * Instantiate Observer\n             */\n            function Observer() {\n              _classCallCheck(this, Observer);\n              /**\n               * @private\n               * @todo Initialise the handlers here already and remove the conditional\n               * assignment in `on()`\n               */\n              this._disabledEventEmissions = [];\n              this.handlers = null;\n            }\n            /**\n             * Attach a handler function for an event.\n             *\n             * @param {string} event Name of the event to listen to\n             * @param {function} fn The callback to trigger when the event is fired\n             * @return {ListenerDescriptor} The event descriptor\n             */\n            _createClass(Observer, [{\n              key: \"on\",\n              value: function on(event, fn) {\n                var _this = this;\n                if (!this.handlers) {\n                  this.handlers = {};\n                }\n                var handlers = this.handlers[event];\n                if (!handlers) {\n                  handlers = this.handlers[event] = [];\n                }\n                handlers.push(fn);\n\n                // Return an event descriptor\n                return {\n                  name: event,\n                  callback: fn,\n                  un: function un(e, fn) {\n                    return _this.un(e, fn);\n                  }\n                };\n              }\n\n              /**\n               * Remove an event handler.\n               *\n               * @param {string} event Name of the event the listener that should be\n               * removed listens to\n               * @param {function} fn The callback that should be removed\n               */\n            }, {\n              key: \"un\",\n              value: function un(event, fn) {\n                if (!this.handlers) {\n                  return;\n                }\n                var handlers = this.handlers[event];\n                var i;\n                if (handlers) {\n                  if (fn) {\n                    for (i = handlers.length - 1; i >= 0; i--) {\n                      if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                      }\n                    }\n                  } else {\n                    handlers.length = 0;\n                  }\n                }\n              }\n\n              /**\n               * Remove all event handlers.\n               */\n            }, {\n              key: \"unAll\",\n              value: function unAll() {\n                this.handlers = null;\n              }\n\n              /**\n               * Attach a handler to an event. The handler is executed at most once per\n               * event type.\n               *\n               * @param {string} event The event to listen to\n               * @param {function} handler The callback that is only to be called once\n               * @return {ListenerDescriptor} The event descriptor\n               */\n            }, {\n              key: \"once\",\n              value: function once(event, handler) {\n                var _this2 = this;\n                var fn = function fn() {\n                  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                    args[_key] = arguments[_key];\n                  }\n                  /*  eslint-disable no-invalid-this */\n                  handler.apply(_this2, args);\n                  /*  eslint-enable no-invalid-this */\n                  setTimeout(function () {\n                    _this2.un(event, fn);\n                  }, 0);\n                };\n                return this.on(event, fn);\n              }\n\n              /**\n               * Disable firing a list of events by name. When specified, event handlers for any event type\n               * passed in here will not be called.\n               *\n               * @since 4.0.0\n               * @param {string[]} eventNames an array of event names to disable emissions for\n               * @example\n               * // disable seek and interaction events\n               * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n               */\n            }, {\n              key: \"setDisabledEventEmissions\",\n              value: function setDisabledEventEmissions(eventNames) {\n                this._disabledEventEmissions = eventNames;\n              }\n\n              /**\n               * plugins borrow part of this class without calling the constructor,\n               * so we have to be careful about _disabledEventEmissions\n               */\n            }, {\n              key: \"_isDisabledEventEmission\",\n              value: function _isDisabledEventEmission(event) {\n                return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n              }\n\n              /**\n               * Manually fire an event\n               *\n               * @param {string} event The event to fire manually\n               * @param {...any} args The arguments with which to call the listeners\n               */\n            }, {\n              key: \"fireEvent\",\n              value: function fireEvent(event) {\n                for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                  args[_key2 - 1] = arguments[_key2];\n                }\n                if (!this.handlers || this._isDisabledEventEmission(event)) {\n                  return;\n                }\n                var handlers = this.handlers[event];\n                handlers && handlers.forEach(function (fn) {\n                  fn.apply(void 0, args);\n                });\n              }\n            }]);\n            return Observer;\n          }();\n          exports[\"default\"] = Observer;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/orientation.js\":\n        /*!*********************************!*\\\n          !*** ./src/util/orientation.js ***!\n          \\*********************************/\n        /***/\n        function srcUtilOrientationJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = withOrientation;\n          var verticalPropMap = {\n            width: 'height',\n            height: 'width',\n            overflowX: 'overflowY',\n            overflowY: 'overflowX',\n            clientWidth: 'clientHeight',\n            clientHeight: 'clientWidth',\n            clientX: 'clientY',\n            clientY: 'clientX',\n            scrollWidth: 'scrollHeight',\n            scrollLeft: 'scrollTop',\n            offsetLeft: 'offsetTop',\n            offsetTop: 'offsetLeft',\n            offsetHeight: 'offsetWidth',\n            offsetWidth: 'offsetHeight',\n            left: 'top',\n            right: 'bottom',\n            top: 'left',\n            bottom: 'right',\n            borderRightStyle: 'borderBottomStyle',\n            borderRightWidth: 'borderBottomWidth',\n            borderRightColor: 'borderBottomColor'\n          };\n\n          /**\n           * Convert a horizontally-oriented property name to a vertical one.\n           *\n           * @param {string} prop A property name\n           * @param {bool} vertical Whether the element is oriented vertically\n           * @returns {string} prop, converted appropriately\n           */\n          function mapProp(prop, vertical) {\n            if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\n              return vertical ? verticalPropMap[prop] : prop;\n            } else {\n              return prop;\n            }\n          }\n          var isProxy = Symbol(\"isProxy\");\n\n          /**\n           * Returns an appropriately oriented object based on vertical.\n           * If vertical is true, attribute getting and setting will be mapped through\n           * verticalPropMap, so that e.g. getting the object's .width will give its\n           * .height instead.\n           * Certain methods of an oriented object will return oriented objects as well.\n           * Oriented objects can't be added to the DOM directly since they are Proxy objects\n           * and thus fail typechecks. Use domElement to get the actual element for this.\n           *\n           * @param {object} target The object to be wrapped and oriented\n           * @param {bool} vertical Whether the element is oriented vertically\n           * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n           * @since 5.0.0\n           */\n          function withOrientation(target, vertical) {\n            if (target[isProxy]) {\n              return target;\n            } else {\n              return new Proxy(target, {\n                get: function get(obj, prop, receiver) {\n                  if (prop === isProxy) {\n                    return true;\n                  } else if (prop === 'domElement') {\n                    return obj;\n                  } else if (prop === 'style') {\n                    return withOrientation(obj.style, vertical);\n                  } else if (prop === 'canvas') {\n                    return withOrientation(obj.canvas, vertical);\n                  } else if (prop === 'getBoundingClientRect') {\n                    return function () {\n                      return withOrientation(obj.getBoundingClientRect.apply(obj, arguments), vertical);\n                    };\n                  } else if (prop === 'getContext') {\n                    return function () {\n                      return withOrientation(obj.getContext.apply(obj, arguments), vertical);\n                    };\n                  } else {\n                    var value = obj[mapProp(prop, vertical)];\n                    return typeof value == 'function' ? value.bind(obj) : value;\n                  }\n                },\n                set: function set(obj, prop, value) {\n                  obj[mapProp(prop, vertical)] = value;\n                  return true;\n                }\n              });\n            }\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/prevent-click.js\":\n        /*!***********************************!*\\\n          !*** ./src/util/prevent-click.js ***!\n          \\***********************************/\n        /***/\n        function srcUtilPreventClickJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = preventClick;\n          /**\n           * Stops propagation of click event and removes event listener\n           *\n           * @private\n           * @param {object} event The click event\n           */\n          function preventClickHandler(event) {\n            event.stopPropagation();\n            document.body.removeEventListener('click', preventClickHandler, true);\n          }\n\n          /**\n           * Starts listening for click event and prevent propagation\n           *\n           * @param {object} values Values\n           */\n          function preventClick(values) {\n            document.body.addEventListener('click', preventClickHandler, true);\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/request-animation-frame.js\":\n        /*!*********************************************!*\\\n          !*** ./src/util/request-animation-frame.js ***!\n          \\*********************************************/\n        /***/\n        function srcUtilRequestAnimationFrameJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = void 0;\n          /* eslint-disable valid-jsdoc */\n          /**\n           * Returns the `requestAnimationFrame` function for the browser, or a shim with\n           * `setTimeout` if the function is not found\n           *\n           * @return {function} Available `requestAnimationFrame` function for the browser\n           */\n          var _default = (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback, element) {\n            return setTimeout(callback, 1000 / 60);\n          }).bind(window);\n          exports[\"default\"] = _default;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/silence-mode.js\":\n        /*!**********************************!*\\\n          !*** ./src/util/silence-mode.js ***!\n          \\**********************************/\n        /***/\n        function srcUtilSilenceModeJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = ignoreSilenceMode;\n          /**\n           * Ignores device silence mode when using the `WebAudio` backend.\n           *\n           * Many mobile devices contain a hardware button to mute the ringtone for incoming\n           * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n           * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n           * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n           * when muting the device ringer.\n           *\n           * @since 5.2.0\n           */\n          function ignoreSilenceMode() {\n            // Set webaudio context with 1 second silent audio 44100 bit rate buffer to allow playing audio even if silent switch is on the device\n            var silentAC = new AudioContext();\n            var silentBS = silentAC.createBufferSource();\n            silentBS.buffer = silentAC.createBuffer(1, 1, 44100);\n            silentBS.connect(silentAC.destination);\n            silentBS.start();\n\n            // Set the src to a short bit of url encoded as a silent mp3\n            // NOTE The silence MP3 must be high quality, when web audio sounds are played\n            // in parallel the web audio sound is mixed to match the bitrate of the html sound\n            // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n            var audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\n\n            // disable iOS Airplay (setting the attribute in js doesn't work)\n            var tmp = document.createElement(\"div\");\n            tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n            var audioSilentMode = tmp.children.item(0);\n            audioSilentMode.src = audioData;\n            audioSilentMode.preload = \"auto\";\n            audioSilentMode.type = \"audio/mpeg\";\n            audioSilentMode.disableRemotePlayback = true;\n\n            // play\n            audioSilentMode.play();\n\n            // cleanup\n            audioSilentMode.remove();\n            tmp.remove();\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/style.js\":\n        /*!***************************!*\\\n          !*** ./src/util/style.js ***!\n          \\***************************/\n        /***/\n        function srcUtilStyleJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = style;\n          /**\n           * Apply a map of styles to an element\n           *\n           * @param {HTMLElement} el The element that the styles will be applied to\n           * @param {Object} styles The map of propName: attribute, both are used as-is\n           *\n           * @return {HTMLElement} el\n           */\n          function style(el, styles) {\n            Object.keys(styles).forEach(function (prop) {\n              if (el.style[prop] !== styles[prop]) {\n                el.style[prop] = styles[prop];\n              }\n            });\n            return el;\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/wavesurfer.js\":\n        /*!***************************!*\\\n          !*** ./src/wavesurfer.js ***!\n          \\***************************/\n        /***/\n        function srcWavesurferJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = void 0;\n          var util = _interopRequireWildcard(__webpack_require__( /*! ./util */\"./src/util/index.js\"));\n          var _drawer = _interopRequireDefault(__webpack_require__( /*! ./drawer.multicanvas */\"./src/drawer.multicanvas.js\"));\n          var _webaudio = _interopRequireDefault(__webpack_require__( /*! ./webaudio */\"./src/webaudio.js\"));\n          var _mediaelement = _interopRequireDefault(__webpack_require__( /*! ./mediaelement */\"./src/mediaelement.js\"));\n          var _peakcache = _interopRequireDefault(__webpack_require__( /*! ./peakcache */\"./src/peakcache.js\"));\n          var _mediaelementWebaudio = _interopRequireDefault(__webpack_require__( /*! ./mediaelement-webaudio */\"./src/mediaelement-webaudio.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          function _getRequireWildcardCache(nodeInterop) {\n            if (typeof WeakMap !== \"function\") return null;\n            var cacheBabelInterop = new WeakMap();\n            var cacheNodeInterop = new WeakMap();\n            return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n              return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n            })(nodeInterop);\n          }\n          function _interopRequireWildcard(obj, nodeInterop) {\n            if (!nodeInterop && obj && obj.__esModule) {\n              return obj;\n            }\n            if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n              return {\n                default: obj\n              };\n            }\n            var cache = _getRequireWildcardCache(nodeInterop);\n            if (cache && cache.has(obj)) {\n              return cache.get(obj);\n            }\n            var newObj = {};\n            var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n            for (var key in obj) {\n              if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                if (desc && (desc.get || desc.set)) {\n                  Object.defineProperty(newObj, key, desc);\n                } else {\n                  newObj[key] = obj[key];\n                }\n              }\n            }\n            newObj.default = obj;\n            if (cache) {\n              cache.set(obj, newObj);\n            }\n            return newObj;\n          }\n          function _inherits(subClass, superClass) {\n            if (typeof superClass !== \"function\" && superClass !== null) {\n              throw new TypeError(\"Super expression must either be null or a function\");\n            }\n            subClass.prototype = Object.create(superClass && superClass.prototype, {\n              constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n              }\n            });\n            Object.defineProperty(subClass, \"prototype\", {\n              writable: false\n            });\n            if (superClass) _setPrototypeOf(subClass, superClass);\n          }\n          function _setPrototypeOf(o, p) {\n            _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n              o.__proto__ = p;\n              return o;\n            };\n            return _setPrototypeOf(o, p);\n          }\n          function _createSuper(Derived) {\n            var hasNativeReflectConstruct = _isNativeReflectConstruct();\n            return function _createSuperInternal() {\n              var Super = _getPrototypeOf(Derived),\n                result;\n              if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n                result = Reflect.construct(Super, arguments, NewTarget);\n              } else {\n                result = Super.apply(this, arguments);\n              }\n              return _possibleConstructorReturn(this, result);\n            };\n          }\n          function _possibleConstructorReturn(self, call) {\n            if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n              return call;\n            } else if (call !== void 0) {\n              throw new TypeError(\"Derived constructors may only return object or undefined\");\n            }\n            return _assertThisInitialized(self);\n          }\n          function _assertThisInitialized(self) {\n            if (self === void 0) {\n              throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            }\n            return self;\n          }\n          function _isNativeReflectConstruct() {\n            if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n            if (Reflect.construct.sham) return false;\n            if (typeof Proxy === \"function\") return true;\n            try {\n              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }\n          function _getPrototypeOf(o) {\n            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n              return o.__proto__ || Object.getPrototypeOf(o);\n            };\n            return _getPrototypeOf(o);\n          }\n          function _defineProperty(obj, key, value) {\n            key = _toPropertyKey(key);\n            if (key in obj) {\n              Object.defineProperty(obj, key, {\n                value: value,\n                enumerable: true,\n                configurable: true,\n                writable: true\n              });\n            } else {\n              obj[key] = value;\n            }\n            return obj;\n          }\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n              return typeof obj;\n            } : function (obj) {\n              return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            }, _typeof(obj);\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            Object.defineProperty(Constructor, \"prototype\", {\n              writable: false\n            });\n            return Constructor;\n          }\n          function _toPropertyKey(arg) {\n            var key = _toPrimitive(arg, \"string\");\n            return _typeof(key) === \"symbol\" ? key : String(key);\n          }\n          function _toPrimitive(input, hint) {\n            if (_typeof(input) !== \"object\" || input === null) return input;\n            var prim = input[Symbol.toPrimitive];\n            if (prim !== undefined) {\n              var res = prim.call(input, hint || \"default\");\n              if (_typeof(res) !== \"object\") return res;\n              throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return (hint === \"string\" ? String : Number)(input);\n          }\n          /*\n           * This work is licensed under a BSD-3-Clause License.\n           */\n          /** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n          /** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n          /** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n          /** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n          /** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n          /** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n          /** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n          /**\n           * @typedef {Object} WavesurferParams\n           * @property {AudioContext} audioContext=null Use your own previously\n           * initialized AudioContext or leave blank.\n           * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n           * slower.\n           * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n           * initialized ScriptProcessorNode or leave blank.\n           * @property {boolean} autoCenter=true If a scrollbar is present, center the\n           * waveform on current progress\n           * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n           * waveform is centered\n           * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n           * center waveform on current progress\n           * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n           * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n           * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n           * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n           * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n           * also with audio with big duration. For example:\n           * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n           *   wavesurfer.play();\n           *   wavesurfer.setFilter(customFilter);\n           * `\n           * @property {string} backgroundColor=null Change background color of the\n           * waveform container.\n           * @property {number} barHeight=1 The height of the wave bars.\n           * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n           * @property {number} barGap=null The optional spacing between bars of the wave,\n           * if not provided will be calculated in legacy format.\n           * @property {number} barWidth=null Draw the waveform using bars.\n           * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n           * eliminating waveform gaps\n           * @property {boolean} closeAudioContext=false Close and nullify all audio\n           * contexts when the destroy method is called.\n           * @property {!string|HTMLElement} container CSS selector or HTML element where\n           * the waveform should be drawn. This is the only required parameter.\n           * @property {string} cursorColor='#333' The fill color of the cursor indicating\n           * the playhead position.\n           * @property {number} cursorWidth=1 Measured in pixels.\n           * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n           * attributes.\n           * @property {number} duration=null Optional audio length so pre-rendered peaks\n           * can be display immediately for example.\n           * @property {boolean} fillParent=true Whether to fill the entire container or\n           * draw only according to `minPxPerSec`.\n           * @property {boolean} forceDecode=false Force decoding of audio using web audio\n           * when zooming to get a more detailed waveform.\n           * @property {number} height=128 The height of the waveform. Measured in\n           * pixels.\n           * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n           * scrollbar when one would normally be shown.\n           * @property {boolean} hideCursor=false Whether to hide the mouse cursor\n           * when one would normally be shown by default.\n           * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n           * when using the `WebAudio` backend.\n           * @property {boolean} interact=true Whether the mouse interaction will be\n           * enabled at initialization. You can switch this parameter at any time later\n           * on.\n           * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n           * looping of selected regions\n           * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n           * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n           * even integer). If the waveform is longer than this value, additional canvases\n           * will be used to render the waveform, which is useful for very large waveforms\n           * that may be too wide for browsers to draw on a single canvas.\n           * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n           * this enables the native controls for the media element\n           * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n           * `'audio'|'video'` ('video' only for `MediaElement`)\n           * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n           * audio.\n           * @property {boolean} normalize=false If true, normalize by the maximum peak\n           * instead of 1.0.\n           * @property {boolean} partialRender=false Use the PeakCache to improve\n           * rendering speed of large waveforms\n           * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n           * calculate display\n           * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n           * register during instantiation, they will be directly initialised unless they\n           * are added with the `deferInit` property set to true.\n           * @property {string} progressColor='#555' The fill color of the part of the\n           * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n           * the progress wave is not rendered at all.\n           * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n           * media element in the DOM when the player is destroyed. This is useful when\n           * reusing an existing media element via the `loadMediaElement` method.\n           * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n           * renderer.\n           * @property {boolean|number} responsive=false If set to `true` resize the\n           * waveform, when the window is resized. This is debounced with a `100ms`\n           * timeout by default. If this parameter is a number it represents that timeout.\n           * @property {boolean} rtl=false If set to `true`, renders waveform from\n           * right-to-left.\n           * @property {boolean} scrollParent=false Whether to scroll the container with a\n           * lengthy waveform. Otherwise the waveform is shrunk to the container width\n           * (see fillParent).\n           * @property {number} skipLength=2 Number of seconds to skip with the\n           * skipForward() and skipBackward() methods.\n           * @property {boolean} splitChannels=false Render with separate waveforms for\n           * the channels of the audio\n           * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n           * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n           * @property {string} waveColor='#999' The fill color of the waveform after the\n           * cursor.\n           * @property {object} xhr={} XHR options. For example:\n           * `let xhr = {\n           *     cache: 'default',\n           *     mode: 'cors',\n           *     method: 'GET',\n           *     credentials: 'same-origin',\n           *     redirect: 'follow',\n           *     referrer: 'client',\n           *     requestHeaders: [\n           *         {\n           *             key: 'Authorization',\n           *             value: 'my-token'\n           *         }\n           *     ]\n           * };`\n           */\n          /**\n           * @typedef {Object} PluginDefinition\n           * @desc The Object used to describe a plugin\n           * @example wavesurfer.addPlugin(pluginDefinition);\n           * @property {string} name The name of the plugin, the plugin instance will be\n           * added as a property to the wavesurfer instance under this name\n           * @property {?Object} staticProps The properties that should be added to the\n           * wavesurfer instance as static properties\n           * @property {?boolean} deferInit Don't initialise plugin\n           * automatically\n           * @property {Object} params={} The plugin parameters, they are the first parameter\n           * passed to the plugin class constructor function\n           * @property {PluginClass} instance The plugin instance factory, is called with\n           * the dependency specified in extends. Returns the plugin class.\n           */\n          /**\n           * @typedef {Object} SplitChannelOptions\n           * @desc parameters applied when splitChannels option is true\n           * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n           * @property {object} channelColors={} object describing color for each channel. Example:\n           * {\n           *     0: {\n           *         progressColor: 'green',\n           *         waveColor: 'pink'\n           *     },\n           *     1: {\n           *         progressColor: 'orange',\n           *         waveColor: 'purple'\n           *     }\n           * }\n           * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n           * @property {boolean} relativeNormalization=false determines whether\n           * normalization is done per channel or maintains proportionality between\n           * channels. Only applied when normalize and splitChannels are both true.\n           * @property {boolean} splitDragSelection=false determines if drag selection in regions\n           * plugin works separately on each channel or only one selection for all channels\n           * @since 4.3.0\n           */\n          /**\n           * @interface PluginClass\n           *\n           * @desc This is the interface which is implemented by all plugin classes. Note\n           * that this only turns into an observer after being passed through\n           * `wavesurfer.addPlugin`.\n           *\n           * @extends {Observer}\n           */\n          var PluginClass = /*#__PURE__*/function () {\n            /**\n             * Construct the plugin\n             *\n             * @param {Object} params={} The plugin params (specific to the plugin)\n             * @param {Object} ws The wavesurfer instance\n             */\n            function PluginClass(params, ws) {\n              _classCallCheck(this, PluginClass);\n            }\n            /**\n             * Initialise the plugin\n             *\n             * Start doing something. This is called by\n             * `wavesurfer.initPlugin(pluginName)`\n             */\n            _createClass(PluginClass, [{\n              key: \"create\",\n              value:\n              /**\n               * Plugin definition factory\n               *\n               * This function must be used to create a plugin definition which can be\n               * used by wavesurfer to correctly instantiate the plugin.\n               *\n               * It returns a `PluginDefinition` object representing the plugin.\n               *\n               * @param {Object} params={} The plugin params (specific to the plugin)\n               */\n              function create(params) {}\n            }, {\n              key: \"init\",\n              value: function init() {}\n              /**\n               * Destroy the plugin instance\n               *\n               * Stop doing something. This is called by\n               * `wavesurfer.destroyPlugin(pluginName)`\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {}\n            }]);\n            return PluginClass;\n          }();\n          /**\n           * WaveSurfer core library class\n           *\n           * @extends {Observer}\n           * @example\n           * const params = {\n           *   container: '#waveform',\n           *   waveColor: 'violet',\n           *   progressColor: 'purple'\n           * };\n           *\n           * // initialise like this\n           * const wavesurfer = WaveSurfer.create(params);\n           *\n           * // or like this ...\n           * const wavesurfer = new WaveSurfer(params);\n           * wavesurfer.init();\n           *\n           * // load audio file\n           * wavesurfer.load('example/media/demo.wav');\n           */\n          var WaveSurfer = /*#__PURE__*/function (_util$Observer) {\n            _inherits(WaveSurfer, _util$Observer);\n            var _super = _createSuper(WaveSurfer);\n            /**\n             * Initialise wavesurfer instance\n             *\n             * @param {WavesurferParams} params Instantiation options for wavesurfer\n             * @example\n             * const wavesurfer = new WaveSurfer(params);\n             * @returns {this} Wavesurfer instance\n             */\n            function WaveSurfer(params) {\n              var _this;\n              _classCallCheck(this, WaveSurfer);\n              _this = _super.call(this);\n              /**\n               * Extract relevant parameters (or defaults)\n               * @private\n               */\n              /** @private */\n              _defineProperty(_assertThisInitialized(_this), \"defaultParams\", {\n                audioContext: null,\n                audioScriptProcessor: null,\n                audioRate: 1,\n                autoCenter: true,\n                autoCenterRate: 5,\n                autoCenterImmediately: false,\n                backend: 'WebAudio',\n                backgroundColor: null,\n                barHeight: 1,\n                barRadius: 0,\n                barGap: null,\n                barMinHeight: null,\n                container: null,\n                cursorColor: '#333',\n                cursorWidth: 1,\n                dragSelection: true,\n                drawingContextAttributes: {\n                  // Boolean that hints the user agent to reduce the latency\n                  // by desynchronizing the canvas paint cycle from the event\n                  // loop\n                  desynchronized: false\n                },\n                duration: null,\n                fillParent: true,\n                forceDecode: false,\n                height: 128,\n                hideScrollbar: false,\n                hideCursor: false,\n                ignoreSilenceMode: false,\n                interact: true,\n                loopSelection: true,\n                maxCanvasWidth: 4000,\n                mediaContainer: null,\n                mediaControls: false,\n                mediaType: 'audio',\n                minPxPerSec: 20,\n                normalize: false,\n                partialRender: false,\n                pixelRatio: window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n                plugins: [],\n                progressColor: '#555',\n                removeMediaElementOnDestroy: true,\n                renderer: _drawer.default,\n                responsive: false,\n                rtl: false,\n                scrollParent: false,\n                skipLength: 2,\n                splitChannels: false,\n                splitChannelsOptions: {\n                  overlay: false,\n                  channelColors: {},\n                  filterChannels: [],\n                  relativeNormalization: false,\n                  splitDragSelection: false\n                },\n                vertical: false,\n                waveColor: '#999',\n                xhr: {}\n              });\n              /** @private */\n              _defineProperty(_assertThisInitialized(_this), \"backends\", {\n                MediaElement: _mediaelement.default,\n                WebAudio: _webaudio.default,\n                MediaElementWebAudio: _mediaelementWebaudio.default\n              });\n              /**\n               * Functions in the `util` property are available as a prototype property to\n               * all instances\n               *\n               * @type {Object}\n               * @example\n               * const wavesurfer = WaveSurfer.create(params);\n               * wavesurfer.util.style(myElement, { background: 'blue' });\n               */\n              _defineProperty(_assertThisInitialized(_this), \"util\", util);\n              _this.params = Object.assign({}, _this.defaultParams, params);\n              _this.params.splitChannelsOptions = Object.assign({}, _this.defaultParams.splitChannelsOptions, params.splitChannelsOptions);\n              /** @private */\n              _this.container = 'string' == typeof params.container ? document.querySelector(_this.params.container) : _this.params.container;\n              if (!_this.container) {\n                throw new Error('Container element not found');\n              }\n              if (_this.params.mediaContainer == null) {\n                /** @private */\n                _this.mediaContainer = _this.container;\n              } else if (typeof _this.params.mediaContainer == 'string') {\n                /** @private */\n                _this.mediaContainer = document.querySelector(_this.params.mediaContainer);\n              } else {\n                /** @private */\n                _this.mediaContainer = _this.params.mediaContainer;\n              }\n              if (!_this.mediaContainer) {\n                throw new Error('Media Container element not found');\n              }\n              if (_this.params.maxCanvasWidth <= 1) {\n                throw new Error('maxCanvasWidth must be greater than 1');\n              } else if (_this.params.maxCanvasWidth % 2 == 1) {\n                throw new Error('maxCanvasWidth must be an even number');\n              }\n              if (_this.params.rtl === true) {\n                if (_this.params.vertical === true) {\n                  util.style(_this.container, {\n                    transform: 'rotateX(180deg)'\n                  });\n                } else {\n                  util.style(_this.container, {\n                    transform: 'rotateY(180deg)'\n                  });\n                }\n              }\n              if (_this.params.backgroundColor) {\n                _this.setBackgroundColor(_this.params.backgroundColor);\n              }\n\n              /**\n               * @private Used to save the current volume when muting so we can\n               * restore once unmuted\n               * @type {number}\n               */\n              _this.savedVolume = 0;\n\n              /**\n               * @private The current muted state\n               * @type {boolean}\n               */\n              _this.isMuted = false;\n\n              /**\n               * @private Will hold a list of event descriptors that need to be\n               * canceled on subsequent loads of audio\n               * @type {Object[]}\n               */\n              _this.tmpEvents = [];\n\n              /**\n               * @private Holds any running audio downloads\n               * @type {Observer}\n               */\n              _this.currentRequest = null;\n              /** @private */\n              _this.arraybuffer = null;\n              /** @private */\n              _this.drawer = null;\n              /** @private */\n              _this.backend = null;\n              /** @private */\n              _this.peakCache = null;\n\n              // cache constructor objects\n              if (typeof _this.params.renderer !== 'function') {\n                throw new Error('Renderer parameter is invalid');\n              }\n              /**\n               * @private The uninitialised Drawer class\n               */\n              _this.Drawer = _this.params.renderer;\n              /**\n               * @private The uninitialised Backend class\n               */\n              // Back compat\n              if (_this.params.backend == 'AudioElement') {\n                _this.params.backend = 'MediaElement';\n              }\n              if ((_this.params.backend == 'WebAudio' || _this.params.backend === 'MediaElementWebAudio') && !_webaudio.default.prototype.supportsWebAudio.call(null)) {\n                _this.params.backend = 'MediaElement';\n              }\n              _this.Backend = _this.backends[_this.params.backend];\n\n              /**\n               * @private map of plugin names that are currently initialised\n               */\n              _this.initialisedPluginList = {};\n              /** @private */\n              _this.isDestroyed = false;\n\n              /**\n               * Get the current ready status.\n               *\n               * @example const isReady = wavesurfer.isReady;\n               * @return {boolean}\n               */\n              _this.isReady = false;\n\n              // responsive debounced event listener. If this.params.responsive is not\n              // set, this is never called. Use 100ms or this.params.responsive as\n              // timeout for the debounce function.\n              var prevWidth = 0;\n              _this._onResize = util.debounce(function () {\n                if (_this.drawer.wrapper && prevWidth != _this.drawer.wrapper.clientWidth && !_this.params.scrollParent) {\n                  prevWidth = _this.drawer.wrapper.clientWidth;\n                  if (prevWidth) {\n                    // redraw only if waveform container is rendered and has a width\n                    _this.drawer.fireEvent('redraw');\n                  }\n                }\n              }, typeof _this.params.responsive === 'number' ? _this.params.responsive : 100);\n              return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n            }\n\n            /**\n             * Initialise the wave\n             *\n             * @example\n             * var wavesurfer = new WaveSurfer(params);\n             * wavesurfer.init();\n             * @return {this} The wavesurfer instance\n             */\n            _createClass(WaveSurfer, [{\n              key: \"init\",\n              value: function init() {\n                this.registerPlugins(this.params.plugins);\n                this.createDrawer();\n                this.createBackend();\n                this.createPeakCache();\n                return this;\n              }\n\n              /**\n               * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n               * this function is called in the init function of wavesurfer\n               *\n               * @param {PluginDefinition[]} plugins An array of plugin definitions\n               * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n               * @return {this} The wavesurfer instance\n               */\n            }, {\n              key: \"registerPlugins\",\n              value: function registerPlugins(plugins) {\n                var _this2 = this;\n                // first instantiate all the plugins\n                plugins.forEach(function (plugin) {\n                  return _this2.addPlugin(plugin);\n                });\n\n                // now run the init functions\n                plugins.forEach(function (plugin) {\n                  // call init function of the plugin if deferInit is falsey\n                  // in that case you would manually use initPlugins()\n                  if (!plugin.deferInit) {\n                    _this2.initPlugin(plugin.name);\n                  }\n                });\n                this.fireEvent('plugins-registered', plugins);\n                return this;\n              }\n\n              /**\n               * Get a map of plugin names that are currently initialised\n               *\n               * @example wavesurfer.getPlugins();\n               * @return {Object} Object with plugin names\n               */\n            }, {\n              key: \"getActivePlugins\",\n              value: function getActivePlugins() {\n                return this.initialisedPluginList;\n              }\n\n              /**\n               * Add a plugin object to wavesurfer\n               *\n               * @param {PluginDefinition} plugin A plugin definition\n               * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n               * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n               * @return {this} The wavesurfer instance\n               */\n            }, {\n              key: \"addPlugin\",\n              value: function addPlugin(plugin) {\n                var _this3 = this;\n                if (!plugin.name) {\n                  throw new Error('Plugin does not have a name!');\n                }\n                if (!plugin.instance) {\n                  throw new Error(\"Plugin \".concat(plugin.name, \" does not have an instance property!\"));\n                }\n\n                // staticProps properties are applied to wavesurfer instance\n                if (plugin.staticProps) {\n                  Object.keys(plugin.staticProps).forEach(function (pluginStaticProp) {\n                    /**\n                     * Properties defined in a plugin definition's `staticProps` property are added as\n                     * staticProps properties of the WaveSurfer instance\n                     */\n                    _this3[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n                  });\n                }\n                var Instance = plugin.instance;\n\n                // turn the plugin instance into an observer\n                var observerPrototypeKeys = Object.getOwnPropertyNames(util.Observer.prototype);\n                observerPrototypeKeys.forEach(function (key) {\n                  Instance.prototype[key] = util.Observer.prototype[key];\n                });\n\n                /**\n                 * Instantiated plugin classes are added as a property of the wavesurfer\n                 * instance\n                 * @type {Object}\n                 */\n                this[plugin.name] = new Instance(plugin.params || {}, this);\n                this.fireEvent('plugin-added', plugin.name);\n                return this;\n              }\n\n              /**\n               * Initialise a plugin\n               *\n               * @param {string} name A plugin name\n               * @emits WaveSurfer#plugin-initialised\n               * @example wavesurfer.initPlugin('minimap');\n               * @return {this} The wavesurfer instance\n               */\n            }, {\n              key: \"initPlugin\",\n              value: function initPlugin(name) {\n                if (!this[name]) {\n                  throw new Error(\"Plugin \".concat(name, \" has not been added yet!\"));\n                }\n                if (this.initialisedPluginList[name]) {\n                  // destroy any already initialised plugins\n                  this.destroyPlugin(name);\n                }\n                this[name].init();\n                this.initialisedPluginList[name] = true;\n                this.fireEvent('plugin-initialised', name);\n                return this;\n              }\n\n              /**\n               * Destroy a plugin\n               *\n               * @param {string} name A plugin name\n               * @emits WaveSurfer#plugin-destroyed\n               * @example wavesurfer.destroyPlugin('minimap');\n               * @returns {this} The wavesurfer instance\n               */\n            }, {\n              key: \"destroyPlugin\",\n              value: function destroyPlugin(name) {\n                if (!this[name]) {\n                  throw new Error(\"Plugin \".concat(name, \" has not been added yet and cannot be destroyed!\"));\n                }\n                if (!this.initialisedPluginList[name]) {\n                  throw new Error(\"Plugin \".concat(name, \" is not active and cannot be destroyed!\"));\n                }\n                if (typeof this[name].destroy !== 'function') {\n                  throw new Error(\"Plugin \".concat(name, \" does not have a destroy function!\"));\n                }\n                this[name].destroy();\n                delete this.initialisedPluginList[name];\n                this.fireEvent('plugin-destroyed', name);\n                return this;\n              }\n\n              /**\n               * Destroy all initialised plugins. Convenience function to use when\n               * wavesurfer is removed\n               *\n               * @private\n               */\n            }, {\n              key: \"destroyAllPlugins\",\n              value: function destroyAllPlugins() {\n                var _this4 = this;\n                Object.keys(this.initialisedPluginList).forEach(function (name) {\n                  return _this4.destroyPlugin(name);\n                });\n              }\n\n              /**\n               * Create the drawer and draw the waveform\n               *\n               * @private\n               * @emits WaveSurfer#drawer-created\n               */\n            }, {\n              key: \"createDrawer\",\n              value: function createDrawer() {\n                var _this5 = this;\n                this.drawer = new this.Drawer(this.container, this.params);\n                this.drawer.init();\n                this.fireEvent('drawer-created', this.drawer);\n                if (this.params.responsive !== false) {\n                  window.addEventListener('resize', this._onResize, true);\n                  window.addEventListener('orientationchange', this._onResize, true);\n                }\n                this.drawer.on('redraw', function () {\n                  _this5.drawBuffer();\n                  _this5.drawer.progress(_this5.backend.getPlayedPercents());\n                });\n\n                // Click-to-seek\n                this.drawer.on('click', function (e, progress) {\n                  setTimeout(function () {\n                    return _this5.seekTo(progress);\n                  }, 0);\n                });\n\n                // Relay the scroll event from the drawer\n                this.drawer.on('scroll', function (e) {\n                  if (_this5.params.partialRender) {\n                    _this5.drawBuffer();\n                  }\n                  _this5.fireEvent('scroll', e);\n                });\n\n                // Relay the dblclick event from the drawer\n                this.drawer.on('dblclick', function (e, progress) {\n                  _this5.fireEvent('dblclick', e, progress);\n                });\n              }\n\n              /**\n               * Create the backend\n               *\n               * @private\n               * @emits WaveSurfer#backend-created\n               */\n            }, {\n              key: \"createBackend\",\n              value: function createBackend() {\n                var _this6 = this;\n                if (this.backend) {\n                  this.backend.destroy();\n                }\n                this.backend = new this.Backend(this.params);\n                this.backend.init();\n                this.fireEvent('backend-created', this.backend);\n                this.backend.on('finish', function () {\n                  _this6.drawer.progress(_this6.backend.getPlayedPercents());\n                  _this6.fireEvent('finish');\n                });\n                this.backend.on('play', function () {\n                  return _this6.fireEvent('play');\n                });\n                this.backend.on('pause', function () {\n                  return _this6.fireEvent('pause');\n                });\n                this.backend.on('audioprocess', function (time) {\n                  _this6.drawer.progress(_this6.backend.getPlayedPercents());\n                  _this6.fireEvent('audioprocess', time);\n                });\n\n                // only needed for MediaElement and MediaElementWebAudio backend\n                if (this.params.backend === 'MediaElement' || this.params.backend === 'MediaElementWebAudio') {\n                  this.backend.on('seek', function () {\n                    _this6.drawer.progress(_this6.backend.getPlayedPercents());\n                  });\n                  this.backend.on('volume', function () {\n                    var newVolume = _this6.getVolume();\n                    _this6.fireEvent('volume', newVolume);\n                    if (_this6.backend.isMuted !== _this6.isMuted) {\n                      _this6.isMuted = _this6.backend.isMuted;\n                      _this6.fireEvent('mute', _this6.isMuted);\n                    }\n                  });\n                }\n              }\n\n              /**\n               * Create the peak cache\n               *\n               * @private\n               */\n            }, {\n              key: \"createPeakCache\",\n              value: function createPeakCache() {\n                if (this.params.partialRender) {\n                  this.peakCache = new _peakcache.default();\n                }\n              }\n\n              /**\n               * Get the duration of the audio clip\n               *\n               * @example const duration = wavesurfer.getDuration();\n               * @return {number} Duration in seconds\n               */\n            }, {\n              key: \"getDuration\",\n              value: function getDuration() {\n                return this.backend.getDuration();\n              }\n\n              /**\n               * Get the current playback position\n               *\n               * @example const currentTime = wavesurfer.getCurrentTime();\n               * @return {number} Playback position in seconds\n               */\n            }, {\n              key: \"getCurrentTime\",\n              value: function getCurrentTime() {\n                return this.backend.getCurrentTime();\n              }\n\n              /**\n               * Set the current play time in seconds.\n               *\n               * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n               * seconds, 60 means 1 minute\n               */\n            }, {\n              key: \"setCurrentTime\",\n              value: function setCurrentTime(seconds) {\n                if (seconds >= this.getDuration()) {\n                  this.seekTo(1);\n                } else {\n                  this.seekTo(seconds / this.getDuration());\n                }\n              }\n\n              /**\n               * Starts playback from the current position. Optional start and end\n               * measured in seconds can be used to set the range of audio to play.\n               *\n               * @param {?number} start Position to start at\n               * @param {?number} end Position to end at\n               * @emits WaveSurfer#interaction\n               * @return {Promise} Result of the backend play method\n               * @example\n               * // play from second 1 to 5\n               * wavesurfer.play(1, 5);\n               */\n            }, {\n              key: \"play\",\n              value: function play(start, end) {\n                var _this7 = this;\n                if (this.params.ignoreSilenceMode) {\n                  // ignores device hardware silence mode\n                  util.ignoreSilenceMode();\n                }\n                this.fireEvent('interaction', function () {\n                  return _this7.play(start, end);\n                });\n                return this.backend.play(start, end);\n              }\n\n              /**\n               * Set a point in seconds for playback to stop at.\n               *\n               * @param {number} position Position (in seconds) to stop at\n               * @version 3.3.0\n               */\n            }, {\n              key: \"setPlayEnd\",\n              value: function setPlayEnd(position) {\n                this.backend.setPlayEnd(position);\n              }\n\n              /**\n               * Stops and pauses playback\n               *\n               * @example wavesurfer.pause();\n               * @return {Promise} Result of the backend pause method\n               */\n            }, {\n              key: \"pause\",\n              value: function pause() {\n                if (!this.backend.isPaused()) {\n                  return this.backend.pause();\n                }\n              }\n\n              /**\n               * Toggle playback\n               *\n               * @example wavesurfer.playPause();\n               * @return {Promise} Result of the backend play or pause method\n               */\n            }, {\n              key: \"playPause\",\n              value: function playPause() {\n                return this.backend.isPaused() ? this.play() : this.pause();\n              }\n\n              /**\n               * Get the current playback state\n               *\n               * @example const isPlaying = wavesurfer.isPlaying();\n               * @return {boolean} False if paused, true if playing\n               */\n            }, {\n              key: \"isPlaying\",\n              value: function isPlaying() {\n                return !this.backend.isPaused();\n              }\n\n              /**\n               * Skip backward\n               *\n               * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n               * is used\n               * @example wavesurfer.skipBackward();\n               */\n            }, {\n              key: \"skipBackward\",\n              value: function skipBackward(seconds) {\n                this.skip(-seconds || -this.params.skipLength);\n              }\n\n              /**\n               * Skip forward\n               *\n               * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n               * is used\n               * @example wavesurfer.skipForward();\n               */\n            }, {\n              key: \"skipForward\",\n              value: function skipForward(seconds) {\n                this.skip(seconds || this.params.skipLength);\n              }\n\n              /**\n               * Skip a number of seconds from the current position (use a negative value\n               * to go backwards).\n               *\n               * @param {number} offset Amount to skip back or forwards\n               * @example\n               * // go back 2 seconds\n               * wavesurfer.skip(-2);\n               */\n            }, {\n              key: \"skip\",\n              value: function skip(offset) {\n                var duration = this.getDuration() || 1;\n                var position = this.getCurrentTime() || 0;\n                position = Math.max(0, Math.min(duration, position + (offset || 0)));\n                this.seekAndCenter(position / duration);\n              }\n\n              /**\n               * Seeks to a position and centers the view\n               *\n               * @param {number} progress Between 0 (=beginning) and 1 (=end)\n               * @example\n               * // seek and go to the middle of the audio\n               * wavesurfer.seekTo(0.5);\n               */\n            }, {\n              key: \"seekAndCenter\",\n              value: function seekAndCenter(progress) {\n                this.seekTo(progress);\n                this.drawer.recenter(progress);\n              }\n\n              /**\n               * Seeks to a position\n               *\n               * @param {number} progress Between 0 (=beginning) and 1 (=end)\n               * @emits WaveSurfer#interaction\n               * @emits WaveSurfer#seek\n               * @example\n               * // seek to the middle of the audio\n               * wavesurfer.seekTo(0.5);\n               */\n            }, {\n              key: \"seekTo\",\n              value: function seekTo(progress) {\n                var _this8 = this;\n                // return an error if progress is not a number between 0 and 1\n                if (typeof progress !== 'number' || !isFinite(progress) || progress < 0 || progress > 1) {\n                  throw new Error('Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!');\n                }\n                this.fireEvent('interaction', function () {\n                  return _this8.seekTo(progress);\n                });\n                var isWebAudioBackend = this.params.backend === 'WebAudio';\n                var paused = this.backend.isPaused();\n                if (isWebAudioBackend && !paused) {\n                  this.backend.pause();\n                }\n\n                // avoid small scrolls while paused seeking\n                var oldScrollParent = this.params.scrollParent;\n                this.params.scrollParent = false;\n                this.backend.seekTo(progress * this.getDuration());\n                this.drawer.progress(progress);\n                if (isWebAudioBackend && !paused) {\n                  this.backend.play();\n                }\n                this.params.scrollParent = oldScrollParent;\n                this.fireEvent('seek', progress);\n              }\n\n              /**\n               * Stops and goes to the beginning.\n               *\n               * @example wavesurfer.stop();\n               */\n            }, {\n              key: \"stop\",\n              value: function stop() {\n                this.pause();\n                this.seekTo(0);\n                this.drawer.progress(0);\n              }\n\n              /**\n               * Sets the ID of the audio device to use for output and returns a Promise.\n               *\n               * @param {string} deviceId String value representing underlying output\n               * device\n               * @returns {Promise} `Promise` that resolves to `undefined` when there are\n               * no errors detected.\n               */\n            }, {\n              key: \"setSinkId\",\n              value: function setSinkId(deviceId) {\n                return this.backend.setSinkId(deviceId);\n              }\n\n              /**\n               * Set the playback volume.\n               *\n               * @param {number} newVolume A value between 0 and 1, 0 being no\n               * volume and 1 being full volume.\n               * @emits WaveSurfer#volume\n               */\n            }, {\n              key: \"setVolume\",\n              value: function setVolume(newVolume) {\n                if (this.isMuted === true) {\n                  this.savedVolume = newVolume;\n                  return;\n                }\n                this.backend.setVolume(newVolume);\n                this.fireEvent('volume', newVolume);\n              }\n\n              /**\n               * Get the playback volume.\n               *\n               * @return {number} A value between 0 and 1, 0 being no\n               * volume and 1 being full volume.\n               */\n            }, {\n              key: \"getVolume\",\n              value: function getVolume() {\n                return this.backend.getVolume();\n              }\n\n              /**\n               * Set the playback rate.\n               *\n               * @param {number} rate A positive number. E.g. 0.5 means half the normal\n               * speed, 2 means double speed and so on.\n               * @example wavesurfer.setPlaybackRate(2);\n               */\n            }, {\n              key: \"setPlaybackRate\",\n              value: function setPlaybackRate(rate) {\n                this.backend.setPlaybackRate(rate);\n              }\n\n              /**\n               * Get the playback rate.\n               *\n               * @return {number} The current playback rate.\n               */\n            }, {\n              key: \"getPlaybackRate\",\n              value: function getPlaybackRate() {\n                return this.backend.getPlaybackRate();\n              }\n\n              /**\n               * Toggle the volume on and off. If not currently muted it will save the\n               * current volume value and turn the volume off. If currently muted then it\n               * will restore the volume to the saved value, and then rest the saved\n               * value.\n               *\n               * @example wavesurfer.toggleMute();\n               */\n            }, {\n              key: \"toggleMute\",\n              value: function toggleMute() {\n                this.setMute(!this.isMuted);\n              }\n\n              /**\n               * Enable or disable muted audio\n               *\n               * @param {boolean} mute Specify `true` to mute audio.\n               * @emits WaveSurfer#volume\n               * @emits WaveSurfer#mute\n               * @example\n               * // unmute\n               * wavesurfer.setMute(false);\n               * console.log(wavesurfer.getMute()) // logs false\n               */\n            }, {\n              key: \"setMute\",\n              value: function setMute(mute) {\n                // ignore all muting requests if the audio is already in that state\n                if (mute === this.isMuted) {\n                  this.fireEvent('mute', this.isMuted);\n                  return;\n                }\n                if (this.backend.setMute) {\n                  // Backends such as the MediaElement backend have their own handling\n                  // of mute, let them handle it.\n                  this.backend.setMute(mute);\n                  this.isMuted = mute;\n                } else {\n                  if (mute) {\n                    // If currently not muted then save current volume,\n                    // turn off the volume and update the mute properties\n                    this.savedVolume = this.backend.getVolume();\n                    this.backend.setVolume(0);\n                    this.isMuted = true;\n                    this.fireEvent('volume', 0);\n                  } else {\n                    // If currently muted then restore to the saved volume\n                    // and update the mute properties\n                    this.backend.setVolume(this.savedVolume);\n                    this.isMuted = false;\n                    this.fireEvent('volume', this.savedVolume);\n                  }\n                }\n                this.fireEvent('mute', this.isMuted);\n              }\n\n              /**\n               * Get the current mute status.\n               *\n               * @example const isMuted = wavesurfer.getMute();\n               * @return {boolean} Current mute status\n               */\n            }, {\n              key: \"getMute\",\n              value: function getMute() {\n                return this.isMuted;\n              }\n\n              /**\n               * Get the list of current set filters as an array.\n               *\n               * Filters must be set with setFilters method first\n               *\n               * @return {array} List of enabled filters\n               */\n            }, {\n              key: \"getFilters\",\n              value: function getFilters() {\n                return this.backend.filters || [];\n              }\n\n              /**\n               * Toggles `scrollParent` and redraws\n               *\n               * @example wavesurfer.toggleScroll();\n               */\n            }, {\n              key: \"toggleScroll\",\n              value: function toggleScroll() {\n                this.params.scrollParent = !this.params.scrollParent;\n                this.drawBuffer();\n              }\n\n              /**\n               * Toggle mouse interaction\n               *\n               * @example wavesurfer.toggleInteraction();\n               */\n            }, {\n              key: \"toggleInteraction\",\n              value: function toggleInteraction() {\n                this.params.interact = !this.params.interact;\n              }\n\n              /**\n               * Get the fill color of the waveform after the cursor.\n               *\n               * @param {?number} channelIdx Optional index of the channel to get its wave color if splitChannels is true\n               * @return {string|object} A CSS color string, or an array of CSS color strings.\n               */\n            }, {\n              key: \"getWaveColor\",\n              value: function getWaveColor() {\n                var channelIdx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n                if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n                  return this.params.splitChannelsOptions.channelColors[channelIdx].waveColor;\n                }\n                return this.params.waveColor;\n              }\n\n              /**\n               * Set the fill color of the waveform after the cursor.\n               *\n               * @param {string|object} color A CSS color string, or an array of CSS color strings.\n               * @param {?number} channelIdx Optional index of the channel to set its wave color if splitChannels is true\n               * @example wavesurfer.setWaveColor('#ddd');\n               */\n            }, {\n              key: \"setWaveColor\",\n              value: function setWaveColor(color) {\n                var channelIdx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n                if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n                  this.params.splitChannelsOptions.channelColors[channelIdx].waveColor = color;\n                } else {\n                  this.params.waveColor = color;\n                }\n                this.drawBuffer();\n              }\n\n              /**\n               * Get the fill color of the waveform behind the cursor.\n               *\n               * @param {?number} channelIdx Optional index of the channel to get its progress color if splitChannels is true\n               * @return {string|object} A CSS color string, or an array of CSS color strings.\n               */\n            }, {\n              key: \"getProgressColor\",\n              value: function getProgressColor() {\n                var channelIdx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n                if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n                  return this.params.splitChannelsOptions.channelColors[channelIdx].progressColor;\n                }\n                return this.params.progressColor;\n              }\n\n              /**\n               * Set the fill color of the waveform behind the cursor.\n               *\n               * @param {string|object} color A CSS color string, or an array of CSS color strings.\n               * @param {?number} channelIdx Optional index of the channel to set its progress color if splitChannels is true\n               * @example wavesurfer.setProgressColor('#400');\n               */\n            }, {\n              key: \"setProgressColor\",\n              value: function setProgressColor(color, channelIdx) {\n                if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n                  this.params.splitChannelsOptions.channelColors[channelIdx].progressColor = color;\n                } else {\n                  this.params.progressColor = color;\n                }\n                this.drawBuffer();\n              }\n\n              /**\n               * Get the background color of the waveform container.\n               *\n               * @return {string} A CSS color string.\n               */\n            }, {\n              key: \"getBackgroundColor\",\n              value: function getBackgroundColor() {\n                return this.params.backgroundColor;\n              }\n\n              /**\n               * Set the background color of the waveform container.\n               *\n               * @param {string} color A CSS color string.\n               * @example wavesurfer.setBackgroundColor('#FF00FF');\n               */\n            }, {\n              key: \"setBackgroundColor\",\n              value: function setBackgroundColor(color) {\n                this.params.backgroundColor = color;\n                util.style(this.container, {\n                  background: this.params.backgroundColor\n                });\n              }\n\n              /**\n               * Get the fill color of the cursor indicating the playhead\n               * position.\n               *\n               * @return {string} A CSS color string.\n               */\n            }, {\n              key: \"getCursorColor\",\n              value: function getCursorColor() {\n                return this.params.cursorColor;\n              }\n\n              /**\n               * Set the fill color of the cursor indicating the playhead\n               * position.\n               *\n               * @param {string} color A CSS color string.\n               * @example wavesurfer.setCursorColor('#222');\n               */\n            }, {\n              key: \"setCursorColor\",\n              value: function setCursorColor(color) {\n                this.params.cursorColor = color;\n                this.drawer.updateCursor();\n              }\n\n              /**\n               * Get the height of the waveform.\n               *\n               * @return {number} Height measured in pixels.\n               */\n            }, {\n              key: \"getHeight\",\n              value: function getHeight() {\n                return this.params.height;\n              }\n\n              /**\n               * Set the height of the waveform.\n               *\n               * @param {number} height Height measured in pixels.\n               * @example wavesurfer.setHeight(200);\n               */\n            }, {\n              key: \"setHeight\",\n              value: function setHeight(height) {\n                this.params.height = height;\n                this.drawer.setHeight(height * this.params.pixelRatio);\n                this.drawBuffer();\n              }\n\n              /**\n               * Hide channels from being drawn on the waveform if splitting channels.\n               *\n               * For example, if we want to draw only the peaks for the right stereo channel:\n               *\n               * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n               * wavesurfer.load('stereo_audio.mp3');\n               *\n               * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n               *\n               * @param {array} channelIndices Channels to be filtered out from drawing.\n               * @version 4.0.0\n               */\n            }, {\n              key: \"setFilteredChannels\",\n              value: function setFilteredChannels(channelIndices) {\n                this.params.splitChannelsOptions.filterChannels = channelIndices;\n                this.drawBuffer();\n              }\n\n              /**\n               * Get the correct peaks for current wave view-port and render wave\n               *\n               * @private\n               * @emits WaveSurfer#redraw\n               */\n            }, {\n              key: \"drawBuffer\",\n              value: function drawBuffer() {\n                var nominalWidth = Math.round(this.getDuration() * this.params.minPxPerSec * this.params.pixelRatio);\n                var parentWidth = this.drawer.getWidth();\n                var width = nominalWidth;\n                // always start at 0 after zooming for scrolling : issue redraw left part\n                var start = 0;\n                var end = Math.max(start + parentWidth, width);\n                // Fill container\n                if (this.params.fillParent && (!this.params.scrollParent || nominalWidth < parentWidth)) {\n                  width = parentWidth;\n                  start = 0;\n                  end = width;\n                }\n                var peaks;\n                if (this.params.partialRender) {\n                  var newRanges = this.peakCache.addRangeToPeakCache(width, start, end);\n                  var i;\n                  for (i = 0; i < newRanges.length; i++) {\n                    peaks = this.backend.getPeaks(width, newRanges[i][0], newRanges[i][1]);\n                    this.drawer.drawPeaks(peaks, width, newRanges[i][0], newRanges[i][1]);\n                  }\n                } else {\n                  peaks = this.backend.getPeaks(width, start, end);\n                  this.drawer.drawPeaks(peaks, width, start, end);\n                }\n                this.fireEvent('redraw', peaks, width);\n              }\n\n              /**\n               * Horizontally zooms the waveform in and out. It also changes the parameter\n               * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n               * with a falsey parameter will reset the zoom state.\n               *\n               * @param {?number} pxPerSec Number of horizontal pixels per second of\n               * audio, if none is set the waveform returns to unzoomed state\n               * @emits WaveSurfer#zoom\n               * @example wavesurfer.zoom(20);\n               */\n            }, {\n              key: \"zoom\",\n              value: function zoom(pxPerSec) {\n                if (!pxPerSec) {\n                  this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n                  this.params.scrollParent = false;\n                } else {\n                  this.params.minPxPerSec = pxPerSec;\n                  this.params.scrollParent = true;\n                }\n                this.drawBuffer();\n                this.drawer.progress(this.backend.getPlayedPercents());\n                this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n                this.fireEvent('zoom', pxPerSec);\n              }\n\n              /**\n               * Decode buffer and load\n               *\n               * @private\n               * @param {ArrayBuffer} arraybuffer Buffer to process\n               */\n            }, {\n              key: \"loadArrayBuffer\",\n              value: function loadArrayBuffer(arraybuffer) {\n                var _this9 = this;\n                this.decodeArrayBuffer(arraybuffer, function (data) {\n                  if (!_this9.isDestroyed) {\n                    _this9.loadDecodedBuffer(data);\n                  }\n                });\n              }\n\n              /**\n               * Directly load an externally decoded AudioBuffer\n               *\n               * @private\n               * @param {AudioBuffer} buffer Buffer to process\n               * @emits WaveSurfer#ready\n               */\n            }, {\n              key: \"loadDecodedBuffer\",\n              value: function loadDecodedBuffer(buffer) {\n                this.backend.load(buffer);\n                this.drawBuffer();\n                this.isReady = true;\n                this.fireEvent('ready');\n              }\n\n              /**\n               * Loads audio data from a Blob or File object\n               *\n               * @param {Blob|File} blob Audio data\n               * @example\n               */\n            }, {\n              key: \"loadBlob\",\n              value: function loadBlob(blob) {\n                var _this10 = this;\n                // Create file reader\n                var reader = new FileReader();\n                reader.addEventListener('progress', function (e) {\n                  return _this10.onProgress(e);\n                });\n                reader.addEventListener('load', function (e) {\n                  return _this10.loadArrayBuffer(e.target.result);\n                });\n                reader.addEventListener('error', function () {\n                  return _this10.fireEvent('error', 'Error reading file');\n                });\n                reader.readAsArrayBuffer(blob);\n                this.empty();\n              }\n\n              /**\n               * Loads audio and re-renders the waveform.\n               *\n               * @param {string|HTMLMediaElement} url The url of the audio file or the\n               * audio element with the audio\n               * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n               * the audio to render the waveform if this is specified\n               * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n               * `'none'|'metadata'|'auto'` Preload attribute for the media element\n               * @param {?number} duration The duration of the audio. This is used to\n               * render the peaks data in the correct size for the audio duration (as\n               * befits the current `minPxPerSec` and zoom value) without having to decode\n               * the audio.\n               * @returns {void}\n               * @throws Will throw an error if the `url` argument is empty.\n               * @example\n               * // uses fetch or media element to load file (depending on backend)\n               * wavesurfer.load('http://example.com/demo.wav');\n               *\n               * // setting preload attribute with media element backend and supplying\n               * // peaks\n               * wavesurfer.load(\n               *   'http://example.com/demo.wav',\n               *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n               *   true\n               * );\n               */\n            }, {\n              key: \"load\",\n              value: function load(url, peaks, preload, duration) {\n                if (!url) {\n                  throw new Error('url parameter cannot be empty');\n                }\n                this.empty();\n                if (preload) {\n                  // check whether the preload attribute will be usable and if not log\n                  // a warning listing the reasons why not and nullify the variable\n                  var preloadIgnoreReasons = {\n                    \"Preload is not 'auto', 'none' or 'metadata'\": ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                    'Peaks are not provided': !peaks,\n                    \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\": ['MediaElement', 'MediaElementWebAudio'].indexOf(this.params.backend) === -1,\n                    'Url is not of type string': typeof url !== 'string'\n                  };\n                  var activeReasons = Object.keys(preloadIgnoreReasons).filter(function (reason) {\n                    return preloadIgnoreReasons[reason];\n                  });\n                  if (activeReasons.length) {\n                    // eslint-disable-next-line no-console\n                    console.warn('Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' + activeReasons.join('\\n\\t- '));\n                    // stop invalid values from being used\n                    preload = null;\n                  }\n                }\n\n                // loadBuffer(url, peaks, duration) requires that url is a string\n                // but users can pass in a HTMLMediaElement to WaveSurfer\n                if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\n                  url = url.src;\n                }\n                switch (this.params.backend) {\n                  case 'WebAudio':\n                    return this.loadBuffer(url, peaks, duration);\n                  case 'MediaElement':\n                  case 'MediaElementWebAudio':\n                    return this.loadMediaElement(url, peaks, preload, duration);\n                }\n              }\n\n              /**\n               * Loads audio using Web Audio buffer backend.\n               *\n               * @private\n               * @emits WaveSurfer#waveform-ready\n               * @param {string} url URL of audio file\n               * @param {number[]|Number.<Array[]>} peaks Peaks data\n               * @param {?number} duration Optional duration of audio file\n               * @returns {void}\n               */\n            }, {\n              key: \"loadBuffer\",\n              value: function loadBuffer(url, peaks, duration) {\n                var _this11 = this;\n                var load = function load(action) {\n                  if (action) {\n                    _this11.tmpEvents.push(_this11.once('ready', action));\n                  }\n                  return _this11.getArrayBuffer(url, function (data) {\n                    return _this11.loadArrayBuffer(data);\n                  });\n                };\n                if (peaks) {\n                  this.backend.setPeaks(peaks, duration);\n                  this.drawBuffer();\n                  this.fireEvent('waveform-ready');\n                  this.tmpEvents.push(this.once('interaction', load));\n                } else {\n                  return load();\n                }\n              }\n\n              /**\n               * Either create a media element, or load an existing media element.\n               *\n               * @private\n               * @emits WaveSurfer#waveform-ready\n               * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n               * existing HTML5 Audio/Video Element\n               * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n               * dependency\n               * @param {?boolean} preload Set to true if the preload attribute of the\n               * audio element should be enabled\n               * @param {?number} duration Optional duration of audio file\n               */\n            }, {\n              key: \"loadMediaElement\",\n              value: function loadMediaElement(urlOrElt, peaks, preload, duration) {\n                var _this12 = this;\n                var url = urlOrElt;\n                if (typeof urlOrElt === 'string') {\n                  this.backend.load(url, this.mediaContainer, peaks, preload);\n                } else {\n                  var elt = urlOrElt;\n                  this.backend.loadElt(elt, peaks);\n\n                  // If peaks are not provided,\n                  // url = element.src so we can get peaks with web audio\n                  url = elt.src;\n                }\n                this.tmpEvents.push(this.backend.once('canplay', function () {\n                  // ignore when backend was already destroyed\n                  if (!_this12.backend.destroyed) {\n                    _this12.drawBuffer();\n                    _this12.isReady = true;\n                    _this12.fireEvent('ready');\n                  }\n                }), this.backend.once('error', function (err) {\n                  return _this12.fireEvent('error', err);\n                }));\n\n                // If peaks are provided, render them and fire the `waveform-ready` event.\n                if (peaks) {\n                  this.backend.setPeaks(peaks, duration);\n                  this.drawBuffer();\n                  this.fireEvent('waveform-ready');\n                }\n\n                // If no pre-decoded peaks are provided, or are provided with\n                // forceDecode flag, attempt to download the audio file and decode it\n                // with Web Audio.\n                if ((!peaks || this.params.forceDecode) && this.backend.supportsWebAudio()) {\n                  this.getArrayBuffer(url, function (arraybuffer) {\n                    _this12.decodeArrayBuffer(arraybuffer, function (buffer) {\n                      _this12.backend.buffer = buffer;\n                      _this12.backend.setPeaks(null);\n                      _this12.drawBuffer();\n                      _this12.fireEvent('waveform-ready');\n                    });\n                  });\n                }\n              }\n\n              /**\n               * Decode an array buffer and pass data to a callback\n               *\n               * @private\n               * @param {Object} arraybuffer The array buffer to decode\n               * @param {function} callback The function to call on complete\n               */\n            }, {\n              key: \"decodeArrayBuffer\",\n              value: function decodeArrayBuffer(arraybuffer, callback) {\n                var _this13 = this;\n                if (!this.isDestroyed) {\n                  this.arraybuffer = arraybuffer;\n                  this.backend.decodeArrayBuffer(arraybuffer, function (data) {\n                    // Only use the decoded data if we haven't been destroyed or\n                    // another decode started in the meantime\n                    if (!_this13.isDestroyed && _this13.arraybuffer == arraybuffer) {\n                      callback(data);\n                      _this13.arraybuffer = null;\n                    }\n                  }, function () {\n                    return _this13.fireEvent('error', 'Error decoding audiobuffer');\n                  });\n                }\n              }\n\n              /**\n               * Load an array buffer using fetch and pass the result to a callback\n               *\n               * @param {string} url The URL of the file object\n               * @param {function} callback The function to call on complete\n               * @returns {util.fetchFile} fetch call\n               * @private\n               */\n            }, {\n              key: \"getArrayBuffer\",\n              value: function getArrayBuffer(url, callback) {\n                var _this14 = this;\n                var options = Object.assign({\n                  url: url,\n                  responseType: 'arraybuffer'\n                }, this.params.xhr);\n                var request = util.fetchFile(options);\n                this.currentRequest = request;\n                this.tmpEvents.push(request.on('progress', function (e) {\n                  _this14.onProgress(e);\n                }), request.on('success', function (data) {\n                  callback(data);\n                  _this14.currentRequest = null;\n                }), request.on('error', function (e) {\n                  _this14.fireEvent('error', e);\n                  _this14.currentRequest = null;\n                }));\n                return request;\n              }\n\n              /**\n               * Called while the audio file is loading\n               *\n               * @private\n               * @param {Event} e Progress event\n               * @emits WaveSurfer#loading\n               */\n            }, {\n              key: \"onProgress\",\n              value: function onProgress(e) {\n                var percentComplete;\n                if (e.lengthComputable) {\n                  percentComplete = e.loaded / e.total;\n                } else {\n                  // Approximate progress with an asymptotic\n                  // function, and assume downloads in the 1-3 MB range.\n                  percentComplete = e.loaded / (e.loaded + 1000000);\n                }\n                this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n              }\n\n              /**\n               * Exports PCM data into a JSON array and optionally opens in a new window\n               * as valid JSON Blob instance.\n               *\n               * @param {number} length=1024 The scale in which to export the peaks\n               * @param {number} accuracy=10000\n               * @param {?boolean} noWindow Set to true to disable opening a new\n               * window with the JSON\n               * @param {number} start Start index\n               * @param {number} end End index\n               * @return {Promise} Promise that resolves with array of peaks\n               */\n            }, {\n              key: \"exportPCM\",\n              value: function exportPCM(length, accuracy, noWindow, start, end) {\n                length = length || 1024;\n                start = start || 0;\n                accuracy = accuracy || 10000;\n                noWindow = noWindow || false;\n                var peaks = this.backend.getPeaks(length, start, end);\n                var arr = [].map.call(peaks, function (val) {\n                  return Math.round(val * accuracy) / accuracy;\n                });\n                return new Promise(function (resolve, reject) {\n                  if (!noWindow) {\n                    var blobJSON = new Blob([JSON.stringify(arr)], {\n                      type: 'application/json;charset=utf-8'\n                    });\n                    var objURL = URL.createObjectURL(blobJSON);\n                    window.open(objURL);\n                    URL.revokeObjectURL(objURL);\n                  }\n                  resolve(arr);\n                });\n              }\n\n              /**\n               * Save waveform image as data URI.\n               *\n               * The default format is `image/png`. Other supported types are\n               * `image/jpeg` and `image/webp`.\n               *\n               * @param {string} format='image/png' A string indicating the image format.\n               * The default format type is `image/png`.\n               * @param {number} quality=1 A number between 0 and 1 indicating the image\n               * quality to use for image formats that use lossy compression such as\n               * `image/jpeg` and `image/webp`.\n               * @param {string} type Image data type to return. Either `dataURL` (default)\n               * or `blob`.\n               * @return {string|string[]|Promise} When using `dataURL` type this returns\n               * a single data URL or an array of data URLs, one for each canvas. When using\n               * `blob` type this returns a `Promise` resolving with an array of `Blob`\n               * instances, one for each canvas.\n               */\n            }, {\n              key: \"exportImage\",\n              value: function exportImage(format, quality, type) {\n                if (!format) {\n                  format = 'image/png';\n                }\n                if (!quality) {\n                  quality = 1;\n                }\n                if (!type) {\n                  type = 'dataURL';\n                }\n                return this.drawer.getImage(format, quality, type);\n              }\n\n              /**\n               * Cancel any fetch request currently in progress\n               */\n            }, {\n              key: \"cancelAjax\",\n              value: function cancelAjax() {\n                if (this.currentRequest && this.currentRequest.controller) {\n                  // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n                  // See: Wavesurfer issue #2042\n                  // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n                  if (this.currentRequest._reader) {\n                    // Ignoring exceptions thrown by call to cancel()\n                    this.currentRequest._reader.cancel().catch(function (err) {});\n                  }\n                  this.currentRequest.controller.abort();\n                  this.currentRequest = null;\n                }\n              }\n\n              /**\n               * @private\n               */\n            }, {\n              key: \"clearTmpEvents\",\n              value: function clearTmpEvents() {\n                this.tmpEvents.forEach(function (e) {\n                  return e.un();\n                });\n              }\n\n              /**\n               * Display empty waveform.\n               */\n            }, {\n              key: \"empty\",\n              value: function empty() {\n                if (!this.backend.isPaused()) {\n                  this.stop();\n                  this.backend.disconnectSource();\n                }\n                this.isReady = false;\n                this.cancelAjax();\n                this.clearTmpEvents();\n\n                // empty drawer\n                this.drawer.progress(0);\n                this.drawer.setWidth(0);\n                this.drawer.drawPeaks({\n                  length: this.drawer.getWidth()\n                }, 0);\n              }\n\n              /**\n               * Remove events, elements and disconnect WebAudio nodes.\n               *\n               * @emits WaveSurfer#destroy\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                this.destroyAllPlugins();\n                this.fireEvent('destroy');\n                this.cancelAjax();\n                this.clearTmpEvents();\n                this.unAll();\n                if (this.params.responsive !== false) {\n                  window.removeEventListener('resize', this._onResize, true);\n                  window.removeEventListener('orientationchange', this._onResize, true);\n                }\n                if (this.backend) {\n                  this.backend.destroy();\n                  // clears memory usage\n                  this.backend = null;\n                }\n                if (this.drawer) {\n                  this.drawer.destroy();\n                }\n                this.isDestroyed = true;\n                this.isReady = false;\n                this.arraybuffer = null;\n              }\n            }], [{\n              key: \"create\",\n              value:\n              /**\n               * Instantiate this class, call its `init` function and returns it\n               *\n               * @param {WavesurferParams} params The wavesurfer parameters\n               * @return {Object} WaveSurfer instance\n               * @example const wavesurfer = WaveSurfer.create(params);\n               */\n              function create(params) {\n                var wavesurfer = new WaveSurfer(params);\n                return wavesurfer.init();\n              }\n\n              /**\n               * The library version number is available as a static property of the\n               * WaveSurfer class\n               *\n               * @type {String}\n               * @example\n               * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n               */\n            }]);\n\n            return WaveSurfer;\n          }(util.Observer);\n          exports[\"default\"] = WaveSurfer;\n          _defineProperty(WaveSurfer, \"VERSION\", \"6.6.4\");\n          /**\n           * Functions in the `util` property are available as a static property of the\n           * WaveSurfer class\n           *\n           * @type {Object}\n           * @example\n           * WaveSurfer.util.style(myElement, { background: 'blue' });\n           */\n          _defineProperty(WaveSurfer, \"util\", util);\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/webaudio.js\":\n        /*!*************************!*\\\n          !*** ./src/webaudio.js ***!\n          \\*************************/\n        /***/\n        function srcWebaudioJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = void 0;\n          var util = _interopRequireWildcard(__webpack_require__( /*! ./util */\"./src/util/index.js\"));\n          function _getRequireWildcardCache(nodeInterop) {\n            if (typeof WeakMap !== \"function\") return null;\n            var cacheBabelInterop = new WeakMap();\n            var cacheNodeInterop = new WeakMap();\n            return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n              return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n            })(nodeInterop);\n          }\n          function _interopRequireWildcard(obj, nodeInterop) {\n            if (!nodeInterop && obj && obj.__esModule) {\n              return obj;\n            }\n            if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n              return {\n                default: obj\n              };\n            }\n            var cache = _getRequireWildcardCache(nodeInterop);\n            if (cache && cache.has(obj)) {\n              return cache.get(obj);\n            }\n            var newObj = {};\n            var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n            for (var key in obj) {\n              if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                if (desc && (desc.get || desc.set)) {\n                  Object.defineProperty(newObj, key, desc);\n                } else {\n                  newObj[key] = obj[key];\n                }\n              }\n            }\n            newObj.default = obj;\n            if (cache) {\n              cache.set(obj, newObj);\n            }\n            return newObj;\n          }\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n              return typeof obj;\n            } : function (obj) {\n              return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            }, _typeof(obj);\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            Object.defineProperty(Constructor, \"prototype\", {\n              writable: false\n            });\n            return Constructor;\n          }\n          function _inherits(subClass, superClass) {\n            if (typeof superClass !== \"function\" && superClass !== null) {\n              throw new TypeError(\"Super expression must either be null or a function\");\n            }\n            subClass.prototype = Object.create(superClass && superClass.prototype, {\n              constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n              }\n            });\n            Object.defineProperty(subClass, \"prototype\", {\n              writable: false\n            });\n            if (superClass) _setPrototypeOf(subClass, superClass);\n          }\n          function _setPrototypeOf(o, p) {\n            _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n              o.__proto__ = p;\n              return o;\n            };\n            return _setPrototypeOf(o, p);\n          }\n          function _createSuper(Derived) {\n            var hasNativeReflectConstruct = _isNativeReflectConstruct();\n            return function _createSuperInternal() {\n              var Super = _getPrototypeOf(Derived),\n                result;\n              if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n                result = Reflect.construct(Super, arguments, NewTarget);\n              } else {\n                result = Super.apply(this, arguments);\n              }\n              return _possibleConstructorReturn(this, result);\n            };\n          }\n          function _possibleConstructorReturn(self, call) {\n            if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n              return call;\n            } else if (call !== void 0) {\n              throw new TypeError(\"Derived constructors may only return object or undefined\");\n            }\n            return _assertThisInitialized(self);\n          }\n          function _assertThisInitialized(self) {\n            if (self === void 0) {\n              throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            }\n            return self;\n          }\n          function _isNativeReflectConstruct() {\n            if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n            if (Reflect.construct.sham) return false;\n            if (typeof Proxy === \"function\") return true;\n            try {\n              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }\n          function _getPrototypeOf(o) {\n            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n              return o.__proto__ || Object.getPrototypeOf(o);\n            };\n            return _getPrototypeOf(o);\n          }\n          function _defineProperty(obj, key, value) {\n            key = _toPropertyKey(key);\n            if (key in obj) {\n              Object.defineProperty(obj, key, {\n                value: value,\n                enumerable: true,\n                configurable: true,\n                writable: true\n              });\n            } else {\n              obj[key] = value;\n            }\n            return obj;\n          }\n          function _toPropertyKey(arg) {\n            var key = _toPrimitive(arg, \"string\");\n            return _typeof(key) === \"symbol\" ? key : String(key);\n          }\n          function _toPrimitive(input, hint) {\n            if (_typeof(input) !== \"object\" || input === null) return input;\n            var prim = input[Symbol.toPrimitive];\n            if (prim !== undefined) {\n              var res = prim.call(input, hint || \"default\");\n              if (_typeof(res) !== \"object\") return res;\n              throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return (hint === \"string\" ? String : Number)(input);\n          }\n          // using constants to prevent someone writing the string wrong\n          var PLAYING = 'playing';\n          var PAUSED = 'paused';\n          var FINISHED = 'finished';\n\n          /**\n           * WebAudio backend\n           *\n           * @extends {util.Observer}\n           */\n          var WebAudio = /*#__PURE__*/function (_util$Observer) {\n            _inherits(WebAudio, _util$Observer);\n            var _super = _createSuper(WebAudio);\n            /**\n             * Construct the backend\n             *\n             * @param {WavesurferParams} params Wavesurfer parameters\n             */\n            function WebAudio(params) {\n              var _defineProperty2, _this$states;\n              var _this;\n              _classCallCheck(this, WebAudio);\n              _this = _super.call(this);\n              /** @private */\n              /** audioContext: allows to process audio with WebAudio API */\n              _defineProperty(_assertThisInitialized(_this), \"audioContext\", null);\n              /** @private */\n              _defineProperty(_assertThisInitialized(_this), \"stateBehaviors\", (_defineProperty2 = {}, _defineProperty(_defineProperty2, PLAYING, {\n                init: function init() {\n                  this.addOnAudioProcess();\n                },\n                getPlayedPercents: function getPlayedPercents() {\n                  var duration = this.getDuration();\n                  return this.getCurrentTime() / duration || 0;\n                },\n                getCurrentTime: function getCurrentTime() {\n                  return this.startPosition + this.getPlayedTime();\n                }\n              }), _defineProperty(_defineProperty2, PAUSED, {\n                init: function init() {},\n                getPlayedPercents: function getPlayedPercents() {\n                  var duration = this.getDuration();\n                  return this.getCurrentTime() / duration || 0;\n                },\n                getCurrentTime: function getCurrentTime() {\n                  return this.startPosition;\n                }\n              }), _defineProperty(_defineProperty2, FINISHED, {\n                init: function init() {\n                  this.fireEvent('finish');\n                },\n                getPlayedPercents: function getPlayedPercents() {\n                  return 1;\n                },\n                getCurrentTime: function getCurrentTime() {\n                  return this.getDuration();\n                }\n              }), _defineProperty2));\n              _this.params = params;\n              /** ac: Audio Context instance */\n              _this.ac = params.audioContext || (_this.supportsWebAudio() ? _this.getAudioContext() : {});\n              /**@private */\n              _this.lastPlay = _this.ac.currentTime;\n              /** @private */\n              _this.startPosition = 0;\n              /** @private */\n              _this.scheduledPause = null;\n              /** @private */\n              _this.states = (_this$states = {}, _defineProperty(_this$states, PLAYING, Object.create(_this.stateBehaviors[PLAYING])), _defineProperty(_this$states, PAUSED, Object.create(_this.stateBehaviors[PAUSED])), _defineProperty(_this$states, FINISHED, Object.create(_this.stateBehaviors[FINISHED])), _this$states);\n              /** @private */\n              _this.buffer = null;\n              /** @private */\n              _this.filters = [];\n              /** gainNode: allows to control audio volume */\n              _this.gainNode = null;\n              /** @private */\n              _this.mergedPeaks = null;\n              /** @private */\n              _this.offlineAc = null;\n              /** @private */\n              _this.peaks = null;\n              /** @private */\n              _this.playbackRate = 1;\n              /** analyser: provides audio analysis information */\n              _this.analyser = null;\n              /** scriptNode: allows processing audio */\n              _this.scriptNode = null;\n              /** @private */\n              _this.source = null;\n              /** @private */\n              _this.splitPeaks = [];\n              /** @private */\n              _this.state = null;\n              /** @private */\n              _this.explicitDuration = params.duration;\n              /** @private */\n              _this.sinkStreamDestination = null;\n              /** @private */\n              _this.sinkAudioElement = null;\n              /**\n               * Boolean indicating if the backend was destroyed.\n               */\n              _this.destroyed = false;\n              return _this;\n            }\n\n            /**\n             * Initialise the backend, called in `wavesurfer.createBackend()`\n             */\n            _createClass(WebAudio, [{\n              key: \"supportsWebAudio\",\n              value:\n              /**\n               * Does the browser support this backend\n               *\n               * @return {boolean} Whether or not this browser supports this backend\n               */\n              function supportsWebAudio() {\n                return !!(window.AudioContext || window.webkitAudioContext);\n              }\n\n              /**\n               * Get the audio context used by this backend or create one\n               *\n               * @return {AudioContext} Existing audio context, or creates a new one\n               */\n            }, {\n              key: \"getAudioContext\",\n              value: function getAudioContext() {\n                if (!window.WaveSurferAudioContext) {\n                  window.WaveSurferAudioContext = new (window.AudioContext || window.webkitAudioContext)();\n                }\n                return window.WaveSurferAudioContext;\n              }\n\n              /**\n               * Get the offline audio context used by this backend or create one\n               *\n               * @param {number} sampleRate The sample rate to use\n               * @return {OfflineAudioContext} Existing offline audio context, or creates\n               * a new one\n               */\n            }, {\n              key: \"getOfflineAudioContext\",\n              value: function getOfflineAudioContext(sampleRate) {\n                if (!window.WaveSurferOfflineAudioContext) {\n                  window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext || window.webkitOfflineAudioContext)(1, 2, sampleRate);\n                }\n                return window.WaveSurferOfflineAudioContext;\n              }\n            }, {\n              key: \"init\",\n              value: function init() {\n                this.createVolumeNode();\n                this.createScriptNode();\n                this.createAnalyserNode();\n                this.setState(PAUSED);\n                this.setPlaybackRate(this.params.audioRate);\n                this.setLength(0);\n              }\n\n              /** @private */\n            }, {\n              key: \"disconnectFilters\",\n              value: function disconnectFilters() {\n                if (this.filters) {\n                  this.filters.forEach(function (filter) {\n                    filter && filter.disconnect();\n                  });\n                  this.filters = null;\n                  // Reconnect direct path\n                  this.analyser.connect(this.gainNode);\n                }\n              }\n\n              /**\n               * @private\n               *\n               * @param {string} state The new state\n               */\n            }, {\n              key: \"setState\",\n              value: function setState(state) {\n                if (this.state !== this.states[state]) {\n                  this.state = this.states[state];\n                  this.state.init.call(this);\n                }\n              }\n\n              /**\n               * Unpacked `setFilters()`\n               *\n               * @param {...AudioNode} filters One or more filters to set\n               */\n            }, {\n              key: \"setFilter\",\n              value: function setFilter() {\n                for (var _len = arguments.length, filters = new Array(_len), _key = 0; _key < _len; _key++) {\n                  filters[_key] = arguments[_key];\n                }\n                this.setFilters(filters);\n              }\n\n              /**\n               * Insert custom Web Audio nodes into the graph\n               *\n               * @param {AudioNode[]} filters Packed filters array\n               * @example\n               * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n               * wavesurfer.backend.setFilter(lowpass);\n               */\n            }, {\n              key: \"setFilters\",\n              value: function setFilters(filters) {\n                // Remove existing filters\n                this.disconnectFilters();\n\n                // Insert filters if filter array not empty\n                if (filters && filters.length) {\n                  this.filters = filters;\n\n                  // Disconnect direct path before inserting filters\n                  this.analyser.disconnect();\n\n                  // Connect each filter in turn\n                  filters.reduce(function (prev, curr) {\n                    prev.connect(curr);\n                    return curr;\n                  }, this.analyser).connect(this.gainNode);\n                }\n              }\n              /** Create ScriptProcessorNode to process audio */\n            }, {\n              key: \"createScriptNode\",\n              value: function createScriptNode() {\n                if (this.params.audioScriptProcessor) {\n                  this.scriptNode = this.params.audioScriptProcessor;\n                  this.scriptNode.connect(this.ac.destination);\n                }\n              }\n\n              /** @private */\n            }, {\n              key: \"addOnAudioProcess\",\n              value: function addOnAudioProcess() {\n                var _this2 = this;\n                var loop = function loop() {\n                  var time = _this2.getCurrentTime();\n                  if (time >= _this2.getDuration() && _this2.state !== _this2.states[FINISHED]) {\n                    _this2.setState(FINISHED);\n                    _this2.fireEvent('pause');\n                  } else if (time >= _this2.scheduledPause && _this2.state !== _this2.states[PAUSED]) {\n                    _this2.pause();\n                  } else if (_this2.state === _this2.states[PLAYING]) {\n                    _this2.fireEvent('audioprocess', time);\n                    util.frame(loop)();\n                  }\n                };\n                loop();\n              }\n\n              /** Create analyser node to perform audio analysis */\n            }, {\n              key: \"createAnalyserNode\",\n              value: function createAnalyserNode() {\n                this.analyser = this.ac.createAnalyser();\n                this.analyser.connect(this.gainNode);\n              }\n\n              /**\n               * Create the gain node needed to control the playback volume.\n               *\n               */\n            }, {\n              key: \"createVolumeNode\",\n              value: function createVolumeNode() {\n                // Create gain node using the AudioContext\n                if (this.ac.createGain) {\n                  this.gainNode = this.ac.createGain();\n                } else {\n                  this.gainNode = this.ac.createGainNode();\n                }\n                // Add the gain node to the graph\n                this.gainNode.connect(this.ac.destination);\n              }\n\n              /**\n               * Set the sink id for the media player\n               *\n               * @param {string} deviceId String value representing audio device id.\n               * @returns {Promise} A Promise that resolves to `undefined` when there\n               * are no errors.\n               */\n            }, {\n              key: \"setSinkId\",\n              value: function setSinkId(deviceId) {\n                if (deviceId) {\n                  /**\n                   * The webaudio API doesn't currently support setting the device\n                   * output. Here we create an HTMLAudioElement, connect the\n                   * webaudio stream to that element and setSinkId there.\n                   */\n                  if (!this.sinkAudioElement) {\n                    this.sinkAudioElement = new window.Audio();\n                    // autoplay is necessary since we're not invoking .play()\n                    this.sinkAudioElement.autoplay = true;\n                  }\n                  if (!this.sinkAudioElement.setSinkId) {\n                    return Promise.reject(new Error('setSinkId is not supported in your browser'));\n                  }\n                  if (!this.sinkStreamDestination) {\n                    this.sinkStreamDestination = this.ac.createMediaStreamDestination();\n                  }\n                  this.gainNode.disconnect();\n                  this.gainNode.connect(this.sinkStreamDestination);\n                  this.sinkAudioElement.srcObject = this.sinkStreamDestination.stream;\n                  return this.sinkAudioElement.setSinkId(deviceId);\n                } else {\n                  return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n                }\n              }\n\n              /**\n               * Set the audio volume\n               *\n               * @param {number} value A floating point value between 0 and 1.\n               */\n            }, {\n              key: \"setVolume\",\n              value: function setVolume(value) {\n                this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n              }\n\n              /**\n               * Get the current volume\n               *\n               * @return {number} value A floating point value between 0 and 1.\n               */\n            }, {\n              key: \"getVolume\",\n              value: function getVolume() {\n                return this.gainNode.gain.value;\n              }\n\n              /**\n               * Decode an array buffer and pass data to a callback\n               *\n               * @private\n               * @param {ArrayBuffer} arraybuffer The array buffer to decode\n               * @param {function} callback The function to call on complete.\n               * @param {function} errback The function to call on error.\n               */\n            }, {\n              key: \"decodeArrayBuffer\",\n              value: function decodeArrayBuffer(arraybuffer, callback, errback) {\n                if (!this.offlineAc) {\n                  this.offlineAc = this.getOfflineAudioContext(this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100);\n                }\n                if ('webkitAudioContext' in window) {\n                  // Safari: no support for Promise-based decodeAudioData enabled\n                  // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n                  this.offlineAc.decodeAudioData(arraybuffer, function (data) {\n                    return callback(data);\n                  }, errback);\n                } else {\n                  this.offlineAc.decodeAudioData(arraybuffer).then(function (data) {\n                    return callback(data);\n                  }).catch(function (err) {\n                    return errback(err);\n                  });\n                }\n              }\n\n              /**\n               * Set pre-decoded peaks\n               *\n               * @param {number[]|Number.<Array[]>} peaks Peaks data\n               * @param {?number} duration Explicit duration\n               */\n            }, {\n              key: \"setPeaks\",\n              value: function setPeaks(peaks, duration) {\n                if (duration != null) {\n                  this.explicitDuration = duration;\n                }\n                this.peaks = peaks;\n              }\n\n              /**\n               * Set the rendered length (different from the length of the audio)\n               *\n               * @param {number} length The rendered length\n               */\n            }, {\n              key: \"setLength\",\n              value: function setLength(length) {\n                // No resize, we can preserve the cached peaks.\n                if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n                  return;\n                }\n                this.splitPeaks = [];\n                this.mergedPeaks = [];\n                // Set the last element of the sparse array so the peak arrays are\n                // appropriately sized for other calculations.\n                var channels = this.buffer ? this.buffer.numberOfChannels : 1;\n                var c;\n                for (c = 0; c < channels; c++) {\n                  this.splitPeaks[c] = [];\n                  this.splitPeaks[c][2 * (length - 1)] = 0;\n                  this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n                }\n                this.mergedPeaks[2 * (length - 1)] = 0;\n                this.mergedPeaks[2 * (length - 1) + 1] = 0;\n              }\n\n              /**\n               * Compute the max and min value of the waveform when broken into <length> subranges.\n               *\n               * @param {number} length How many subranges to break the waveform into.\n               * @param {number} first First sample in the required range.\n               * @param {number} last Last sample in the required range.\n               * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n               * peaks consisting of (max, min) values for each subrange.\n               */\n            }, {\n              key: \"getPeaks\",\n              value: function getPeaks(length, first, last) {\n                if (this.peaks) {\n                  return this.peaks;\n                }\n                if (!this.buffer) {\n                  return [];\n                }\n                first = first || 0;\n                last = last || length - 1;\n                this.setLength(length);\n                if (!this.buffer) {\n                  return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n                }\n\n                /**\n                 * The following snippet fixes a buffering data issue on the Safari\n                 * browser which returned undefined It creates the missing buffer based\n                 * on 1 channel, 4096 samples and the sampleRate from the current\n                 * webaudio context 4096 samples seemed to be the best fit for rendering\n                 * will review this code once a stable version of Safari TP is out\n                 */\n                if (!this.buffer.length) {\n                  var newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n                  this.buffer = newBuffer.buffer;\n                }\n                var sampleSize = this.buffer.length / length;\n                var sampleStep = ~~(sampleSize / 10) || 1;\n                var channels = this.buffer.numberOfChannels;\n                var c;\n                for (c = 0; c < channels; c++) {\n                  var peaks = this.splitPeaks[c];\n                  var chan = this.buffer.getChannelData(c);\n                  var i = void 0;\n                  for (i = first; i <= last; i++) {\n                    var start = ~~(i * sampleSize);\n                    var end = ~~(start + sampleSize);\n                    /**\n                     * Initialize the max and min to the first sample of this\n                     * subrange, so that even if the samples are entirely\n                     * on one side of zero, we still return the true max and\n                     * min values in the subrange.\n                     */\n                    var min = chan[start];\n                    var max = min;\n                    var j = void 0;\n                    for (j = start; j < end; j += sampleStep) {\n                      var value = chan[j];\n                      if (value > max) {\n                        max = value;\n                      }\n                      if (value < min) {\n                        min = value;\n                      }\n                    }\n                    peaks[2 * i] = max;\n                    peaks[2 * i + 1] = min;\n                    if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                      this.mergedPeaks[2 * i] = max;\n                    }\n                    if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                      this.mergedPeaks[2 * i + 1] = min;\n                    }\n                  }\n                }\n                return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n              }\n\n              /**\n               * Get the position from 0 to 1\n               *\n               * @return {number} Position\n               */\n            }, {\n              key: \"getPlayedPercents\",\n              value: function getPlayedPercents() {\n                return this.state.getPlayedPercents.call(this);\n              }\n\n              /** @private */\n            }, {\n              key: \"disconnectSource\",\n              value: function disconnectSource() {\n                if (this.source) {\n                  this.source.disconnect();\n                }\n              }\n              /**\n               * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n               */\n            }, {\n              key: \"destroyWebAudio\",\n              value: function destroyWebAudio() {\n                this.disconnectFilters();\n                this.disconnectSource();\n                this.gainNode.disconnect();\n                this.scriptNode && this.scriptNode.disconnect();\n                this.analyser.disconnect();\n\n                // close the audioContext if closeAudioContext option is set to true\n                if (this.params.closeAudioContext) {\n                  // check if browser supports AudioContext.close()\n                  if (typeof this.ac.close === 'function' && this.ac.state != 'closed') {\n                    this.ac.close();\n                  }\n                  // clear the reference to the audiocontext\n                  this.ac = null;\n                  // clear the actual audiocontext, either passed as param or the\n                  // global singleton\n                  if (!this.params.audioContext) {\n                    window.WaveSurferAudioContext = null;\n                  } else {\n                    this.params.audioContext = null;\n                  }\n                  // clear the offlineAudioContext\n                  window.WaveSurferOfflineAudioContext = null;\n                }\n\n                // disconnect resources used by setSinkId\n                if (this.sinkStreamDestination) {\n                  this.sinkAudioElement.pause();\n                  this.sinkAudioElement.srcObject = null;\n                  this.sinkStreamDestination.disconnect();\n                  this.sinkStreamDestination = null;\n                }\n              }\n              /**\n               * This is called when wavesurfer is destroyed\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                if (!this.isPaused()) {\n                  this.pause();\n                }\n                this.unAll();\n                this.buffer = null;\n                this.destroyed = true;\n                this.destroyWebAudio();\n              }\n\n              /**\n               * Loaded a decoded audio buffer\n               *\n               * @param {Object} buffer Decoded audio buffer to load\n               */\n            }, {\n              key: \"load\",\n              value: function load(buffer) {\n                this.startPosition = 0;\n                this.lastPlay = this.ac.currentTime;\n                this.buffer = buffer;\n                this.createSource();\n              }\n\n              /** @private */\n            }, {\n              key: \"createSource\",\n              value: function createSource() {\n                this.disconnectSource();\n                this.source = this.ac.createBufferSource();\n\n                // adjust for old browsers\n                this.source.start = this.source.start || this.source.noteGrainOn;\n                this.source.stop = this.source.stop || this.source.noteOff;\n                this.setPlaybackRate(this.playbackRate);\n                this.source.buffer = this.buffer;\n                this.source.connect(this.analyser);\n              }\n\n              /**\n               * @private\n               *\n               * some browsers require an explicit call to #resume before they will play back audio\n               */\n            }, {\n              key: \"resumeAudioContext\",\n              value: function resumeAudioContext() {\n                if (this.ac.state == 'suspended') {\n                  this.ac.resume && this.ac.resume();\n                }\n              }\n\n              /**\n               * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n               *\n               * @return {boolean} Whether or not this backend is currently paused\n               */\n            }, {\n              key: \"isPaused\",\n              value: function isPaused() {\n                return this.state !== this.states[PLAYING];\n              }\n\n              /**\n               * Used by `wavesurfer.getDuration()`\n               *\n               * @return {number} Duration of loaded buffer\n               */\n            }, {\n              key: \"getDuration\",\n              value: function getDuration() {\n                if (this.explicitDuration) {\n                  return this.explicitDuration;\n                }\n                if (!this.buffer) {\n                  return 0;\n                }\n                return this.buffer.duration;\n              }\n\n              /**\n               * Used by `wavesurfer.seekTo()`\n               *\n               * @param {number} start Position to start at in seconds\n               * @param {number} end Position to end at in seconds\n               * @return {{start: number, end: number}} Object containing start and end\n               * positions\n               */\n            }, {\n              key: \"seekTo\",\n              value: function seekTo(start, end) {\n                if (!this.buffer) {\n                  return;\n                }\n                this.scheduledPause = null;\n                if (start == null) {\n                  start = this.getCurrentTime();\n                  if (start >= this.getDuration()) {\n                    start = 0;\n                  }\n                }\n                if (end == null) {\n                  end = this.getDuration();\n                }\n                this.startPosition = start;\n                this.lastPlay = this.ac.currentTime;\n                if (this.state === this.states[FINISHED]) {\n                  this.setState(PAUSED);\n                }\n                return {\n                  start: start,\n                  end: end\n                };\n              }\n\n              /**\n               * Get the playback position in seconds\n               *\n               * @return {number} The playback position in seconds\n               */\n            }, {\n              key: \"getPlayedTime\",\n              value: function getPlayedTime() {\n                return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n              }\n\n              /**\n               * Plays the loaded audio region.\n               *\n               * @param {number} start Start offset in seconds, relative to the beginning\n               * of a clip.\n               * @param {number} end When to stop relative to the beginning of a clip.\n               */\n            }, {\n              key: \"play\",\n              value: function play(start, end) {\n                if (!this.buffer) {\n                  return;\n                }\n\n                // need to re-create source on each playback\n                this.createSource();\n                var adjustedTime = this.seekTo(start, end);\n                start = adjustedTime.start;\n                end = adjustedTime.end;\n                this.scheduledPause = end;\n                this.source.start(0, start);\n                this.resumeAudioContext();\n                this.setState(PLAYING);\n                this.fireEvent('play');\n              }\n\n              /**\n               * Pauses the loaded audio.\n               */\n            }, {\n              key: \"pause\",\n              value: function pause() {\n                this.scheduledPause = null;\n                this.startPosition += this.getPlayedTime();\n                try {\n                  this.source && this.source.stop(0);\n                } catch (err) {\n                  // Calling stop can throw the following 2 errors:\n                  // - RangeError (The value specified for when is negative.)\n                  // - InvalidStateNode (The node has not been started by calling start().)\n                  // We can safely ignore both errors, because:\n                  // - The range is surely correct\n                  // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n                }\n                this.setState(PAUSED);\n                this.fireEvent('pause');\n              }\n\n              /**\n               * Returns the current time in seconds relative to the audio-clip's\n               * duration.\n               *\n               * @return {number} The current time in seconds\n               */\n            }, {\n              key: \"getCurrentTime\",\n              value: function getCurrentTime() {\n                return this.state.getCurrentTime.call(this);\n              }\n\n              /**\n               * Returns the current playback rate. (0=no playback, 1=normal playback)\n               *\n               * @return {number} The current playback rate\n               */\n            }, {\n              key: \"getPlaybackRate\",\n              value: function getPlaybackRate() {\n                return this.playbackRate;\n              }\n\n              /**\n               * Set the audio source playback rate.\n               *\n               * @param {number} value The playback rate to use\n               */\n            }, {\n              key: \"setPlaybackRate\",\n              value: function setPlaybackRate(value) {\n                this.playbackRate = value || 1;\n                this.source && this.source.playbackRate.setValueAtTime(this.playbackRate, this.ac.currentTime);\n              }\n\n              /**\n               * Set a point in seconds for playback to stop at.\n               *\n               * @param {number} end Position to end at\n               * @version 3.3.0\n               */\n            }, {\n              key: \"setPlayEnd\",\n              value: function setPlayEnd(end) {\n                this.scheduledPause = end;\n              }\n            }]);\n            return WebAudio;\n          }(util.Observer);\n          exports[\"default\"] = WebAudio;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./node_modules/debounce/index.js\":\n        /*!****************************************!*\\\n          !*** ./node_modules/debounce/index.js ***!\n          \\****************************************/\n        /***/\n        function node_modulesDebounceIndexJs(module) {\n          /**\n           * Returns a function, that, as long as it continues to be invoked, will not\n           * be triggered. The function will be called after it stops being called for\n           * N milliseconds. If `immediate` is passed, trigger the function on the\n           * leading edge, instead of the trailing. The function also has a property 'clear' \n           * that is a function which will clear the timer to prevent previously scheduled executions. \n           *\n           * @source underscore.js\n           * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n           * @param {Function} function to wrap\n           * @param {Number} timeout in ms (`100`)\n           * @param {Boolean} whether to execute at the beginning (`false`)\n           * @api public\n           */\n          function debounce(func, wait, immediate) {\n            var timeout, args, context, timestamp, result;\n            if (null == wait) wait = 100;\n            function later() {\n              var last = Date.now() - timestamp;\n              if (last < wait && last >= 0) {\n                timeout = setTimeout(later, wait - last);\n              } else {\n                timeout = null;\n                if (!immediate) {\n                  result = func.apply(context, args);\n                  context = args = null;\n                }\n              }\n            }\n            ;\n            var debounced = function debounced() {\n              context = this;\n              args = arguments;\n              timestamp = Date.now();\n              var callNow = immediate && !timeout;\n              if (!timeout) timeout = setTimeout(later, wait);\n              if (callNow) {\n                result = func.apply(context, args);\n                context = args = null;\n              }\n              return result;\n            };\n            debounced.clear = function () {\n              if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n              }\n            };\n            debounced.flush = function () {\n              if (timeout) {\n                result = func.apply(context, args);\n                context = args = null;\n                clearTimeout(timeout);\n                timeout = null;\n              }\n            };\n            return debounced;\n          }\n          ;\n\n          // Adds compatibility for ES modules\n          debounce.debounce = debounce;\n          module.exports = debounce;\n\n          /***/\n        }\n\n        /******/\n      };\n      /************************************************************************/\n      /******/ // The module cache\n      /******/\n      var __webpack_module_cache__ = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __webpack_require__(moduleId) {\n        /******/ // Check if module is in cache\n        /******/var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n        if (cachedModule !== undefined) {\n          /******/return cachedModule.exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/ // no module.id needed\n          /******/ // no module.loaded needed\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        __webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /************************************************************************/\n      /******/\n      /******/ // startup\n      /******/ // Load entry module and return exports\n      /******/ // This entry module is referenced by other modules so it can't be inlined\n      /******/\n      var __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n      /******/\n      /******/\n      return __webpack_exports__;\n      /******/\n    }()\n  );\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","_style","_interopRequireDefault","__webpack_require__","_getId","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","CanvasEntry","wave","waveCtx","progress","progressCtx","start","end","id","name","toLowerCase","canvasContextAttributes","value","initWave","element","getContext","initProgress","updateDimensions","elementWidth","totalWidth","width","height","offsetLeft","elementSize","hasProgressCanvas","clearWave","clearRect","canvas","setFillStyles","waveColor","progressColor","fillStyle","getFillStyle","ctx","color","CanvasGradient","waveGradient","createLinearGradient","forEach","index","addColorStop","applyCanvasTransforms","vertical","setTransform","fillRects","x","y","radius","fillRectToContext","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","drawLines","peaks","absmax","halfH","offsetY","drawLineToContext","first","Math","round","last","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","peak","h","halfPixel","j","destroy","getImage","format","quality","type","_this","Promise","resolve","toBlob","toDataURL","util","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","desc","set","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","Drawer","_util$Observer","_super","container","params","withOrientation","pixelRatio","lastPos","wrapper","style","el","styles","createWrapper","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","cursor","hideCursor","overflowX","hideScrollbar","overflowY","setupWrapperEvents","handleEvent","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","progressPixels","getProgressPixels","scrollLeft","scrollWidth","clamp","wrapperBbox","rtl","right","left","_this2","addEventListener","orientedEvent","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","drawPeaks","setWidth","barWidth","drawBars","drawWave","resetScroll","recenter","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","offset","rate","autoCenterRate","max","min","getScrollX","newWidth","updateSize","setHeight","_progress","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","parentNode","domElement","removeChild","updateCursor","channelIndex","Observer","_drawer","_drawer2","MultiCanvas","_Drawer","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","ceil","barRadius","init","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","entry","leftOffset","push","lastEntry","parentElement","pop","_this3","frame","_this4","prepareDraw","_ref","hasMinVals","ch","peakIndexScale","bar","gap","barGap","step","peakIndex","peakIndexRange","floor","peakIndexEnd","newPeak","abs","barMinHeight","_this5","_ref2","reflectedPeaks","len","drawLine","_this6","_ref3","splitChannelsOptions","channelColors","startCanvas","endCanvas","intersection","x1","y1","x2","y2","_ref4","hideChannel","splitChannels","filterChannels","includes","fn","drawIndex","normalizedMax","_this7","Array","channels","filteredChannels","filter","c","overlay","overallAbsMax","relativeNormalization","map","channelPeaks","absMax","indexOf","barHeight","normalize","some","val","all","images","_mediaelement","_get","property","receiver","base","_superPropBase","object","MediaElementWebAudio","_MediaElement","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","createAnalyserNode","_load","media","preload","createMediaElementSource","mediaElement","ac","connect","analyser","play","resumeAudioContext","destroyWebAudio","_webaudio","MediaElement","_WebAudio","currentTime","duration","paused","playbackRate","pause","volume","mediaType","elementPosition","isMuted","buffer","onPlayEnd","mediaListeners","_setupMediaListeners","error","waiting","canplay","ended","seeked","event","volumechange","muted","keys","removeEventListener","onAudioProcess","isPaused","getCurrentTime","on","load","url","controls","mediaControls","autoplay","src","prevMedia","querySelector","loadElt","elt","HTMLMediaElement","Error","setVolume","getDuration","explicitDuration","Infinity","seekable","getPlayedPercents","getPlaybackRate","seekTo","isNaN","clearPlayEnd","promise","setPlayEnd","_onPlayEnd","time","un","getPeaks","setSinkId","deviceId","reject","getVolume","setMute","destroyed","removeMediaElementOnDestroy","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","addRangeToPeakCache","uncachedRanges","item","arr","concat","sort","a","b","uncachedRangePairs","getCacheRanges","peakCacheRangePairs","_max","_min","values","_observer","ProgressHandler","contentLength","response","_reader","body","getReader","total","parseInt","loaded","controller","read","then","done","onProgress","lengthComputable","close","byteLength","enqueue","catch","fetchFile","options","fetchHeaders","Headers","fetchRequest","Request","AbortController","requestHeaders","header","append","responseType","fetchOptions","method","headers","mode","credentials","redirect","referrer","signal","fetch","progressAvailable","Response","ReadableStream","errMsg","ok","arrayBuffer","json","blob","text","status","_requestAnimationFrame","func","_len","args","_key","getId","prefix","random","toString","substring","_absMax","_frame","_debounce","_preventClick","_fetch","_clamp","_orientation","_silenceMode","largest","smallest","_disabledEventEmissions","handlers","callback","splice","once","handler","setTimeout","setDisabledEventEmissions","eventNames","_isDisabledEventEmission","_len2","_key2","verticalPropMap","offsetTop","offsetWidth","mapProp","prop","isProxy","preventClickHandler","stopPropagation","preventClick","_default","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","ignoreSilenceMode","silentAC","AudioContext","silentBS","createBufferSource","createBuffer","destination","audioData","tmp","innerHTML","audioSilentMode","children","disableRemotePlayback","remove","_peakcache","_mediaelementWebaudio","_defineProperty","PluginClass","ws","WaveSurfer","audioContext","audioScriptProcessor","backend","backgroundColor","dragSelection","desynchronized","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","splitDragSelection","xhr","WebAudio","assign","defaultParams","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","supportsWebAudio","Backend","backends","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","getActivePlugins","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","destroyAllPlugins","drawBuffer","newVolume","setCurrentTime","seconds","playPause","isPlaying","skipBackward","skip","skipForward","seekAndCenter","_this8","isFinite","isWebAudioBackend","oldScrollParent","stop","toggleMute","mute","getMute","getFilters","filters","toggleScroll","toggleInteraction","getWaveColor","channelIdx","setWaveColor","getProgressColor","setProgressColor","getBackgroundColor","background","getCursorColor","setCursorColor","getHeight","setFilteredChannels","channelIndices","newRanges","zoom","pxPerSec","loadArrayBuffer","_this9","decodeArrayBuffer","data","loadDecodedBuffer","loadBlob","_this10","reader","FileReader","readAsArrayBuffer","empty","preloadIgnoreReasons","activeReasons","reason","console","warn","join","loadBuffer","loadMediaElement","_this11","action","getArrayBuffer","setPeaks","urlOrElt","_this12","err","_this13","_this14","request","percentComplete","exportPCM","accuracy","noWindow","blobJSON","Blob","JSON","stringify","objURL","URL","createObjectURL","open","revokeObjectURL","exportImage","cancelAjax","cancel","abort","clearTmpEvents","disconnectSource","wavesurfer","PLAYING","PAUSED","FINISHED","_defineProperty2","_this$states","addOnAudioProcess","startPosition","getPlayedTime","getAudioContext","lastPlay","scheduledPause","states","stateBehaviors","gainNode","mergedPeaks","offlineAc","scriptNode","source","splitPeaks","state","sinkStreamDestination","sinkAudioElement","webkitAudioContext","WaveSurferAudioContext","getOfflineAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","setState","setLength","disconnectFilters","disconnect","setFilter","setFilters","reduce","prev","curr","loop","createAnalyser","createGain","createGainNode","Audio","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","decodeAudioData","numberOfChannels","newBuffer","sampleSize","sampleStep","chan","getChannelData","closeAudioContext","createSource","noteGrainOn","noteOff","resume","adjustedTime","wait","timeout","context","timestamp","later","Date","now","debounced","callNow","clear","clearTimeout","flush","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","__webpack_exports__"],"sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/src/drawer.canvasentry.js","webpack://WaveSurfer/src/drawer.js","webpack://WaveSurfer/src/drawer.multicanvas.js","webpack://WaveSurfer/src/mediaelement-webaudio.js","webpack://WaveSurfer/src/mediaelement.js","webpack://WaveSurfer/src/peakcache.js","webpack://WaveSurfer/src/util/absMax.js","webpack://WaveSurfer/src/util/clamp.js","webpack://WaveSurfer/src/util/fetch.js","webpack://WaveSurfer/src/util/frame.js","webpack://WaveSurfer/src/util/get-id.js","webpack://WaveSurfer/src/util/index.js","webpack://WaveSurfer/src/util/max.js","webpack://WaveSurfer/src/util/min.js","webpack://WaveSurfer/src/util/observer.js","webpack://WaveSurfer/src/util/orientation.js","webpack://WaveSurfer/src/util/prevent-click.js","webpack://WaveSurfer/src/util/request-animation-frame.js","webpack://WaveSurfer/src/util/silence-mode.js","webpack://WaveSurfer/src/util/style.js","webpack://WaveSurfer/src/wavesurfer.js","webpack://WaveSurfer/src/webaudio.js","webpack://WaveSurfer/node_modules/debounce/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/before-startup","webpack://WaveSurfer/webpack/startup","webpack://WaveSurfer/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(self, () => {\nreturn ","/**\n * @since 3.0.0\n */\n\nimport style from './util/style';\nimport getId from './util/get-id';\n\n/**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */\nexport default class CanvasEntry {\n    constructor() {\n        /**\n         * The wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.wave = null;\n        /**\n         * The wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.waveCtx = null;\n        /**\n         * The (optional) progress wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.progress = null;\n        /**\n         * The (optional) progress wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.progressCtx = null;\n        /**\n         * Start of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.start = 0;\n        /**\n         * End of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.end = 1;\n        /**\n         * Unique identifier for this entry\n         *\n         * @type {string}\n         */\n        this.id = getId(\n            typeof this.constructor.name !== 'undefined'\n                ? this.constructor.name.toLowerCase() + '_'\n                : 'canvasentry_'\n        );\n        /**\n         * Canvas 2d context attributes\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = {};\n    }\n\n    /**\n     * Store the wave canvas element and create the 2D rendering context\n     *\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\n     */\n    initWave(element) {\n        this.wave = element;\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n    }\n\n    /**\n     * Store the progress wave canvas element and create the 2D rendering\n     * context\n     *\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n     */\n    initProgress(element) {\n        this.progress = element;\n        this.progressCtx = this.progress.getContext(\n            '2d',\n            this.canvasContextAttributes\n        );\n    }\n\n    /**\n     * Update the dimensions\n     *\n     * @param {number} elementWidth Width of the entry\n     * @param {number} totalWidth Total width of the multi canvas renderer\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(elementWidth, totalWidth, width, height) {\n        // where the canvas starts and ends in the waveform, represented as a\n        // decimal between 0 and 1\n        this.start = this.wave.offsetLeft / totalWidth || 0;\n        this.end = this.start + elementWidth / totalWidth;\n\n        // set wave canvas dimensions\n        this.wave.width = width;\n        this.wave.height = height;\n        let elementSize = { width: elementWidth + 'px' };\n        style(this.wave, elementSize);\n\n        if (this.hasProgressCanvas) {\n            // set progress canvas dimensions\n            this.progress.width = width;\n            this.progress.height = height;\n            style(this.progress, elementSize);\n        }\n    }\n\n    /**\n     * Clear the wave and progress rendering contexts\n     */\n    clearWave() {\n        // wave\n        this.waveCtx.clearRect(\n            0,\n            0,\n            this.waveCtx.canvas.width,\n            this.waveCtx.canvas.height\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            this.progressCtx.clearRect(\n                0,\n                0,\n                this.progressCtx.canvas.width,\n                this.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Set the fill styles for wave and progress\n     * @param {string|string[]} waveColor Fill color for the wave canvas,\n     * or an array of colors to apply as a gradient\n     * @param {?string|string[]} progressColor Fill color for the progress canvas,\n     * or an array of colors to apply as a gradient\n     */\n    setFillStyles(waveColor, progressColor) {\n        this.waveCtx.fillStyle = this.getFillStyle(this.waveCtx, waveColor);\n\n        if (this.hasProgressCanvas) {\n            this.progressCtx.fillStyle = this.getFillStyle(this.progressCtx, progressColor);\n        }\n    }\n\n    /**\n     * Utility function to handle wave color arguments\n     *\n     * When the color argument type is a string or CanvasGradient instance,\n     * it will be returned as is. Otherwise, it will be treated as an array,\n     * and a new CanvasGradient will be returned\n     *\n     * @since 6.0.0\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {string|string[]|CanvasGradient} color Either a single fill color\n     *     for the wave canvas, an existing CanvasGradient instance, or an array\n     *     of colors to apply as a gradient\n     * @returns {string|CanvasGradient} Returns a string fillstyle value, or a\n     *     canvas gradient\n     */\n    getFillStyle(ctx, color) {\n        if (typeof color == 'string' || color instanceof CanvasGradient) {\n            return color;\n        }\n\n        const waveGradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\n        color.forEach((value, index) => waveGradient.addColorStop((index / color.length), value));\n\n        return waveGradient;\n    }\n\n    /**\n     * Set the canvas transforms for wave and progress\n     *\n     * @param {boolean} vertical Whether to render vertically\n     */\n    applyCanvasTransforms(vertical) {\n        if (vertical) {\n            // Reflect the waveform across the line y = -x\n            this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n\n            if (this.hasProgressCanvas) {\n                this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n            }\n        }\n    }\n\n    /**\n     * Draw a rectangle for wave and progress\n     *\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRects(x, y, width, height, radius) {\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n\n        if (this.hasProgressCanvas) {\n            this.fillRectToContext(\n                this.progressCtx,\n                x,\n                y,\n                width,\n                height,\n                radius\n            );\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRectToContext(ctx, x, y, width, height, radius) {\n        if (!ctx) {\n            return;\n        }\n\n        if (radius) {\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\n        } else {\n            ctx.fillRect(x, y, width, height);\n        }\n    }\n\n    /**\n     * Draw a rounded rectangle on Canvas\n     *\n     * @param {CanvasRenderingContext2D} ctx Canvas context\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     *\n     * @return {void}\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n     */\n    drawRoundedRect(ctx, x, y, width, height, radius) {\n        if (height === 0) {\n            return;\n        }\n        // peaks are float values from -1 to 1. Use absolute height values in\n        // order to correctly calculate rounded rectangle coordinates\n        if (height < 0) {\n            height *= -1;\n            y -= height;\n        }\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(\n            x + width,\n            y + height,\n            x + width - radius,\n            y + height\n        );\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Render the actual wave and progress lines\n     *\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\n        this.drawLineToContext(\n            this.waveCtx,\n            peaks,\n            absmax,\n            halfH,\n            offsetY,\n            start,\n            end\n        );\n\n        if (this.hasProgressCanvas) {\n            this.drawLineToContext(\n                this.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        }\n    }\n\n    /**\n     * Render the actual waveform line on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const first = Math.round(length * this.start);\n\n        // use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas\n        const last = Math.round(length * this.end) + 1;\n\n        const canvasStart = first;\n        const canvasEnd = last;\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n        // optimization\n        const halfOffset = halfH + offsetY;\n        const absmaxHalf = absmax / halfH;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\n        );\n\n        let i, peak, h;\n        for (i = canvasStart; i < canvasEnd; i++) {\n            peak = peaks[2 * i] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        // draw the bottom edge going backwards, to make a single\n        // closed hull to fill\n        let j = canvasEnd - 1;\n        for (j; j >= canvasStart; j--) {\n            peak = peaks[2 * j + 1] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset -\n            Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\n        );\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Destroys this entry\n     */\n    destroy() {\n        this.waveCtx = null;\n        this.wave = null;\n\n        this.progressCtx = null;\n        this.progress = null;\n    }\n\n    /**\n     * Return image data of the wave `canvas` element\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise` that\n     * resolves with a `Blob` instance.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\n     * returns a data URL. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with a `Blob` instance.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return new Promise(resolve => {\n                this.wave.toBlob(resolve, format, quality);\n            });\n        } else if (type === 'dataURL') {\n            return this.wave.toDataURL(format, quality);\n        }\n    }\n}\n","import * as util from './util';\n\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n\n        this.container = util.withOrientation(container, params.vertical);\n        /**\n         * @type {WavesurferParams}\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = util.withOrientation(\n            this.container.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                cursor: this.params.hideCursor ? 'none' : 'auto',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = util.withOrientation(\n            e.targetTouches ? e.targetTouches[0] : e,\n            this.params.vertical\n        ).clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n        const progressPixels = this.getProgressPixels(bbox, clientX);\n\n        let progress;\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress = progressPixels *\n                (this.params.pixelRatio / nominalWidth) || 0;\n        } else {\n            progress = (progressPixels + this.wrapper.scrollLeft) /\n                this.wrapper.scrollWidth || 0;\n        }\n\n        return util.clamp(progress, 0, 1);\n    }\n\n    getProgressPixels(wrapperBbox, clientX) {\n        if (this.params.rtl) {\n            return wrapperBbox.right - clientX;\n        } else {\n            return clientX - wrapperBbox.left;\n        }\n    }\n\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const orientedEvent = util.withOrientation(e, this.params.vertical);\n            const scrollbarHeight = this.wrapper.offsetHeight -\n                  this.wrapper.clientHeight;\n\n            if (scrollbarHeight !== 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('dblclick', e => {\n            if (this.params.interact) {\n                this.fireEvent('dblclick', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth\n            ? this.drawBars(peaks, 0, start, end)\n            : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the view-port at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the view-port on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // set rate at which waveform is centered\n            let rate = this.params.autoCenterRate;\n\n            // make rate depend on width of view and length of waveform\n            rate /= half;\n            rate *= maxScroll;\n\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number} Horizontal scroll position in pixels\n     */\n    getScrollX() {\n        let x = 0;\n        if (this.wrapper) {\n            const pixelRatio = this.params.pixelRatio;\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n            // In cases of elastic scroll (safari with mouse wheel) you can\n            // scroll beyond the limits of the container\n            // Calculate and floor the scrollable extent to make sure an out\n            // of bounds value is not returned\n            // Ticket #1312\n            if (this.params.scrollParent) {\n                const maxScroll = ~~(\n                    this.wrapper.scrollWidth * pixelRatio -\n                    this.getWidth()\n                );\n                x = Math.min(maxScroll, Math.max(0, x));\n            }\n        }\n        return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number} The width of the container\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width The new width of the container\n     * @return {boolean} Whether the width of the container was updated or not\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            const newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\n            this.style(this.wrapper, {\n                width: newWidth\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height The new height of the container.\n     * @return {boolean} Whether the height of the container was updated or not\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be rendered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(\n                    newPos,\n                    this.params.autoCenterImmediately\n                );\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container.domElement) {\n                this.container.removeChild(this.wrapper.domElement);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n","import Drawer from './drawer';\nimport * as util from './util';\nimport CanvasEntry from './drawer.canvasentry';\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is rendered. If the `waveColor`\n         * and `progressColor` are the same color it is not.\n         *\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n        /**\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n\n        /**\n         * List of `CanvasEntry` instances.\n         *\n         * @type {Array}\n         */\n        this.canvases = [];\n\n        /**\n         * @type {HTMLElement}\n         */\n        this.progressWave = null;\n\n        /**\n         * Class used to generate entries.\n         *\n         * @type {function}\n         */\n        this.EntryClass = CanvasEntry;\n\n        /**\n         * Canvas 2d context attributes.\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = params.drawingContextAttributes;\n\n        /**\n         * Overlap added between entries to prevent vertical white stripes\n         * between `canvas` elements.\n         *\n         * @type {number}\n         */\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n\n        /**\n         * The radius of the wave bars. Makes bars rounded\n         *\n         * @type {number}\n         */\n        this.barRadius = params.barRadius || 0;\n\n        /**\n         * Whether to render the waveform vertically. Defaults to false.\n         *\n         * @type {boolean}\n         */\n        this.vertical = params.vertical;\n    }\n\n    /**\n     * Initialize the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     */\n    createElements() {\n        this.progressWave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n        this.style(this.progressWave, {\n            position: 'absolute',\n            zIndex: 3,\n            left: 0,\n            top: 0,\n            bottom: 0,\n            overflow: 'hidden',\n            width: '0',\n            display: 'none',\n            boxSizing: 'border-box',\n            borderRightStyle: 'solid',\n            pointerEvents: 'none'\n        });\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\n        );\n\n        // add required canvases\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        // remove older existing canvases, if any\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\n        const lastCanvas = this.canvases.length - 1;\n        this.canvases.forEach((entry, i) => {\n            if (i == lastCanvas) {\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\n            }\n            this.updateDimensions(entry, canvasWidth, this.height);\n\n            entry.clearWave();\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     */\n    addCanvas() {\n        const entry = new this.EntryClass();\n        entry.canvasContextAttributes = this.canvasContextAttributes;\n        entry.hasProgressCanvas = this.hasProgressCanvas;\n        entry.halfPixel = this.halfPixel;\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        // wave\n        let wave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('canvas')),\n            this.params.vertical\n        );\n        this.style(wave, {\n            position: 'absolute',\n            zIndex: 2,\n            left: leftOffset + 'px',\n            top: 0,\n            bottom: 0,\n            height: '100%',\n            pointerEvents: 'none'\n        });\n        entry.initWave(wave);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            let progress = util.withOrientation(\n                this.progressWave.appendChild(document.createElement('canvas')),\n                this.params.vertical\n            );\n            this.style(progress, {\n                position: 'absolute',\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0,\n                height: '100%'\n            });\n            entry.initProgress(progress);\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop single canvas from the list\n     *\n     */\n    removeCanvas() {\n        let lastEntry = this.canvases[this.canvases.length - 1];\n\n        // wave\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n        }\n\n        // cleanup\n        if (lastEntry) {\n            lastEntry.destroy();\n            lastEntry = null;\n        }\n\n        this.canvases.pop();\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // update canvas dimensions\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n        // style element\n        this.style(this.progressWave, { display: 'block' });\n    }\n\n    /**\n     * Clear the whole multi-canvas\n     */\n    clearWave() {\n        util.frame(() => {\n            this.canvases.forEach(entry => entry.clearWave());\n        })();\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex: ch }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap =\n                    this.params.barGap === null\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\n                        : Math.max(\n                            this.params.pixelRatio,\n                            this.params.barGap * this.params.pixelRatio\n                        );\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let peakIndex = first;\n                for (peakIndex; peakIndex < last; peakIndex += step) {\n\n                    // search for the highest peak in the range this bar falls into\n                    let peak = 0;\n                    let peakIndexRange = Math.floor(peakIndex * scale) * peakIndexScale; // start index\n                    const peakIndexEnd = Math.floor((peakIndex + step) * scale) * peakIndexScale;\n                    do { // do..while makes sure at least one peak is always evaluated\n                        const newPeak = Math.abs(peaks[peakIndexRange]); // for arrays starting with negative values\n                        if (newPeak > peak) {\n                            peak = newPeak; // higher\n                        }\n                        peakIndexRange += peakIndexScale; // skip every other value for negatives\n                    } while (peakIndexRange < peakIndexEnd);\n\n                    // calculate the height of this bar according to the highest peak found\n                    let h = Math.round((peak / absmax) * halfH);\n\n                    // raise the bar height to the specified minimum height\n                    // Math.max is used to replace any value smaller than barMinHeight (not just 0) with barMinHeight\n                    if (this.params.barMinHeight) {\n                        h = Math.max(h, this.params.barMinHeight);\n                    }\n\n                    this.fillRect(\n                        peakIndex + this.halfPixel,\n                        halfH - h + offsetY,\n                        bar + this.halfPixel,\n                        h * 2,\n                        this.barRadius,\n                        ch\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i = 0;\n                    for (i; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                }\n\n                // always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel,\n                    this.barRadius,\n                    channelIndex\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @param {number[]} peaks Peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     * @param {channelIndex} channelIndex The channel index of the line drawn\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n        const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n        this.canvases.forEach((entry, i) => {\n            this.setFillStyles(entry, waveColor, progressColor);\n            this.applyCanvasTransforms(entry, this.params.vertical);\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Draw a rectangle on the multi-canvas\n     *\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     * @param {channelIndex} channelIndex The channel index of the bar drawn\n     */\n    fillRect(x, y, width, height, radius, channelIndex) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i = startCanvas;\n        for (i; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.wave.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n                this.setFillStyles(entry, waveColor, progressColor);\n                this.applyCanvasTransforms(entry, this.params.vertical);\n\n                entry.fillRects(\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1,\n                    radius\n                );\n            }\n        }\n    }\n\n    /**\n     * Returns whether to hide the channel from being drawn based on params.\n     *\n     * @param {number} channelIndex The index of the current channel.\n     * @returns {bool} True to hide the channel, false to draw.\n     */\n    hideChannel(channelIndex) {\n        return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by `drawBars`\n     * and `drawWave`\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n     * split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered. If this isn't set only a flat line is rendered\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call, e.g. `drawWave`\n     * @param {number} drawIndex The index of the current channel after filtering.\n     * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\n     * @returns {void}\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n\n                if (this.params.splitChannels) {\n                    const filteredChannels = channels.filter((c, i) => !this.hideChannel(i));\n                    if (!this.params.splitChannelsOptions.overlay) {\n                        this.setHeight(\n                            Math.max(filteredChannels.length, 1) *\n                                this.params.height *\n                                this.params.pixelRatio\n                        );\n                    }\n\n                    let overallAbsMax;\n                    if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.relativeNormalization) {\n                        // calculate maximum peak across channels to use for normalization\n                        overallAbsMax = util.max(channels.map((channelPeaks => util.absMax(channelPeaks))));\n                    }\n\n\n                    return channels.forEach((channelPeaks, i) =>\n                        this.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax)\n                    );\n                }\n                peaks = channels[0];\n            }\n\n            // Return and do not draw channel peaks if hidden.\n            if (this.hideChannel(channelIndex)) {\n                return;\n            }\n\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const halfH = height / 2;\n\n            let offsetY = height * drawIndex || 0;\n\n            // Override offsetY if overlay is true\n            if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.overlay) {\n                offsetY = 0;\n            }\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks,\n                channelIndex: channelIndex\n            });\n        })();\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {string} waveColor Wave color to draw this entry\n     * @param {string} progressColor Progress color to draw this entry\n     */\n    setFillStyles(entry, waveColor = this.params.waveColor, progressColor = this.params.progressColor) {\n        entry.setFillStyles(waveColor, progressColor);\n    }\n\n    /**\n     * Set the canvas transforms for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {boolean} vertical Whether to render the waveform vertically\n     */\n    applyCanvasTransforms(entry, vertical = false) {\n        entry.applyCanvasTransforms(vertical);\n    }\n\n    /**\n     * Return image data of the multi-canvas\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise`.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\n     * `type` this returns a single data URL or an array of data URLs,\n     * one for each canvas. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with an array of `Blob` instances, one for each\n     * canvas.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return Promise.all(\n                this.canvases.map(entry => {\n                    return entry.getImage(format, quality, type);\n                })\n            );\n        } else if (type === 'dataURL') {\n            let images = this.canvases.map(entry =>\n                entry.getImage(format, quality, type)\n            );\n            return images.length > 1 ? images : images[0];\n        }\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n","import MediaElement from './mediaelement';\n\n/**\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\n * of the webaudio API.\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\n *\n * @since 3.2.0\n */\nexport default class MediaElementWebAudio extends MediaElement {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.sourceMediaElement = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n    }\n    /**\n     * Private method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @private\n     */\n    _load(media, peaks, preload) {\n        super._load(media, peaks, preload);\n        this.createMediaElementSource(media);\n    }\n\n    /**\n     * Create MediaElementSource node\n     *\n     * @since 3.2.0\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n     */\n    createMediaElementSource(mediaElement) {\n        this.sourceMediaElement = this.ac.createMediaElementSource(\n            mediaElement\n        );\n        this.sourceMediaElement.connect(this.analyser);\n    }\n\n    play(start, end) {\n        this.resumeAudioContext();\n        return super.play(start, end);\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        super.destroy();\n\n        this.destroyWebAudio();\n    }\n}\n","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        /**\n         * Initially a dummy media element to catch errors. Once `_load` is\n         * called, this will contain the actual `HTMLMediaElement`.\n         * @private\n         */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {},\n            volume: 0\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.volume = 1;\n        /** @private */\n        this.isMuted = false;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n        /** @private */\n        this.mediaListeners = {};\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Attach event listeners to media element.\n     */\n    _setupMediaListeners() {\n        this.mediaListeners.error = () => {\n            this.fireEvent('error', 'Error loading media element');\n        };\n        this.mediaListeners.waiting = () => {\n            this.fireEvent('waiting');\n        };\n        this.mediaListeners.canplay = () => {\n            this.fireEvent('canplay');\n        };\n        this.mediaListeners.ended = () => {\n            this.fireEvent('finish');\n        };\n        // listen to and relay play, pause and seeked events to enable\n        // playback control from the external media element\n        this.mediaListeners.play = () => {\n            this.fireEvent('play');\n        };\n        this.mediaListeners.pause = () => {\n            this.fireEvent('pause');\n        };\n        this.mediaListeners.seeked = event => {\n            this.fireEvent('seek');\n        };\n        this.mediaListeners.volumechange = event => {\n            this.isMuted = this.media.muted;\n            if (this.isMuted) {\n                this.volume = 0;\n            } else {\n                this.volume = this.media.volume;\n            }\n            this.fireEvent('volume');\n        };\n\n        // reset event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            this.media.removeEventListener(id, this.mediaListeners[id]);\n            this.media.addEventListener(id, this.mediaListeners[id]);\n        });\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            util.frame(onAudioProcess)();\n        };\n\n        this.on('play', onAudioProcess);\n\n        // Update the progress one more time to prevent it from being stuck in\n        // case of lower framerates\n        this.on('pause', () => {\n            this.fireEvent('audioprocess', this.getCurrentTime());\n        });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `url` argument is not a valid media\n     * element.\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks, preload);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks, elt.preload);\n    }\n\n    /**\n     * Method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `media` argument is not a valid media\n     * element.\n     * @private\n     */\n    _load(media, peaks, preload) {\n        // verify media element is valid\n        if (\n            !(media instanceof HTMLMediaElement) ||\n            typeof media.addEventListener === 'undefined'\n        ) {\n            throw new Error('media parameter is not a valid media element');\n        }\n\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        //\n        // note that we avoid calling media.load here when given peaks and preload == 'none'\n        // as this almost always triggers some browser fetch of the media.\n        if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            media.load();\n        }\n\n        this.media = media;\n        this._setupMediaListeners();\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.isMuted = media.muted;\n        this.setPlaybackRate(this.playbackRate);\n        this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Media paused or not\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} Current time\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Current position\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number} Playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value Playback rate\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null && !isNaN(start)) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise} Result\n     */\n    play(start, end) {\n        this.seekTo(start);\n        const promise = this.media.play();\n        end && this.setPlayEnd(end);\n\n        return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise} Result\n     */\n    pause() {\n        let promise;\n\n        if (this.media) {\n            promise = this.media.pause();\n        }\n        this.clearPlayEnd();\n\n        return promise;\n    }\n\n    /**\n     * Set the play end\n     *\n     * @param {number} end Where to end\n     */\n    setPlayEnd(end) {\n        this.clearPlayEnd();\n\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            if (!this.media.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            return this.media.setSinkId(deviceId);\n        }\n\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.volume = value;\n        // no need to change when it's already at that volume\n        if (this.media.volume !== this.volume) {\n            this.media.volume = this.volume;\n        }\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @since 4.0.0\n     * @param {boolean} muted Specify `true` to mute audio.\n     */\n    setMute(muted) {\n        // This causes a volume change to be emitted too through the\n        // volumechange event listener.\n        this.isMuted = this.media.muted = muted;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n        this.destroyed = true;\n\n        // cleanup media event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            if (this.media) {\n                this.media.removeEventListener(id, this.mediaListeners[id]);\n            }\n        });\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n","/**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n","import utilMax from './max';\r\nimport utilmin from './min';\r\n\r\n/**\r\n * Get the largest absolute value in an array\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n * @since 4.3.0\r\n */\r\nexport default function absMax(values) {\r\n    const max = utilMax(values);\r\n    const min = utilmin(values);\r\n    return -min > max ? -min : max;\r\n}\r\n","/**\n * Returns a number limited to the given range.\n *\n * @param {number} val The number to be limited to a range\n * @param {number} min The lower boundary of the limit range\n * @param {number} max The upper boundary of the limit range\n * @returns {number} A number in the range [min, max]\n */\nexport default function clamp(val, min, max) {\n    return Math.min(Math.max(min, val), max);\n}\n","/**\n * @since 3.0.0\n */\n\nimport Observer from './observer';\n\nclass ProgressHandler {\n    /**\n     * Instantiate ProgressHandler\n     *\n     * @param {Observer} instance The `fetchFile` observer instance.\n     * @param {Number} contentLength Content length.\n     * @param {Response} response Response object.\n     */\n    constructor(instance, contentLength, response) {\n        this.instance = instance;\n        this.instance._reader = response.body.getReader();\n\n        this.total = parseInt(contentLength, 10);\n        this.loaded = 0;\n    }\n\n    /**\n     * A method that is called once, immediately after the `ReadableStream``\n     * is constructed.\n     *\n     * @param {ReadableStreamDefaultController} controller Controller instance\n     *     used to control the stream.\n     */\n    start(controller) {\n        const read = () => {\n            // instance._reader.read() returns a promise that resolves\n            // when a value has been received\n            this.instance._reader\n                .read()\n                .then(({ done, value }) => {\n                    // result objects contain two properties:\n                    // done  - true if the stream has already given you all its data.\n                    // value - some data. Always undefined when done is true.\n                    if (done) {\n                        // ensure onProgress called when content-length=0\n                        if (this.total === 0) {\n                            this.instance.onProgress.call(this.instance, {\n                                loaded: this.loaded,\n                                total: this.total,\n                                lengthComputable: false\n                            });\n                        }\n                        // no more data needs to be consumed, close the stream\n                        controller.close();\n                        return;\n                    }\n\n                    this.loaded += value.byteLength;\n                    this.instance.onProgress.call(this.instance, {\n                        loaded: this.loaded,\n                        total: this.total,\n                        lengthComputable: !(this.total === 0)\n                    });\n                    // enqueue the next data chunk into our target stream\n                    controller.enqueue(value);\n                    read();\n                })\n                .catch(error => {\n                    controller.error(error);\n                });\n        };\n\n        read();\n    }\n}\n\n/**\n * Load a file using `fetch`.\n *\n * @param {object} options Request options to use. See example below.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     url: undefined,\n *     method: 'GET',\n *     mode: 'cors',\n *     credentials: 'same-origin',\n *     cache: 'default',\n *     responseType: 'json',\n *     requestHeaders: [],\n *     redirect: 'follow',\n *     referrer: 'client'\n * };\n *\n * // override some options\n * options.url = '../media/demo.wav';\n\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n * options.responseType = 'arraybuffer';\n *\n * // make fetch call\n * let request = util.fetchFile(options);\n *\n * // listen for events\n * request.on('progress', e => {\n *     console.log('progress', e);\n * });\n *\n * request.on('success', data => {\n *     console.log('success!', data);\n * });\n *\n * request.on('error', e => {\n *     console.warn('fetchFile error: ', e);\n * });\n */\nexport default function fetchFile(options) {\n    if (!options) {\n        throw new Error('fetch options missing');\n    } else if (!options.url) {\n        throw new Error('fetch url missing');\n    }\n    const instance = new Observer();\n    const fetchHeaders = new Headers();\n    const fetchRequest = new Request(options.url);\n\n    // add ability to abort\n    instance.controller = new AbortController();\n\n    // check if headers have to be added\n    if (options && options.requestHeaders) {\n        // add custom request headers\n        options.requestHeaders.forEach(header => {\n            fetchHeaders.append(header.key, header.value);\n        });\n    }\n\n    // parse fetch options\n    const responseType = options.responseType || 'json';\n    const fetchOptions = {\n        method: options.method || 'GET',\n        headers: fetchHeaders,\n        mode: options.mode || 'cors',\n        credentials: options.credentials || 'same-origin',\n        cache: options.cache || 'default',\n        redirect: options.redirect || 'follow',\n        referrer: options.referrer || 'client',\n        signal: instance.controller.signal\n    };\n\n    fetch(fetchRequest, fetchOptions)\n        .then(response => {\n            // store response reference\n            instance.response = response;\n\n            let progressAvailable = true;\n            if (!response.body) {\n                // ReadableStream is not yet supported in this browser\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                progressAvailable = false;\n            }\n\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n            const contentLength = response.headers.get('content-length');\n            if (contentLength === null) {\n                // Content-Length server response header missing.\n                // Don't evaluate download progress if we can't compare against a total size\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                progressAvailable = false;\n            }\n\n            if (!progressAvailable) {\n                // not able to check download progress so skip it\n                return response;\n            }\n\n            // fire progress event when during load\n            instance.onProgress = e => {\n                instance.fireEvent('progress', e);\n            };\n\n            return new Response(\n                new ReadableStream(\n                    new ProgressHandler(instance, contentLength, response)\n                ),\n                fetchOptions\n            );\n        })\n        .then(response => {\n            let errMsg;\n            if (response.ok) {\n                switch (responseType) {\n                    case 'arraybuffer':\n                        return response.arrayBuffer();\n\n                    case 'json':\n                        return response.json();\n\n                    case 'blob':\n                        return response.blob();\n\n                    case 'text':\n                        return response.text();\n\n                    default:\n                        errMsg = 'Unknown responseType: ' + responseType;\n                        break;\n                }\n            }\n            if (!errMsg) {\n                errMsg = 'HTTP error status: ' + response.status;\n            }\n            throw new Error(errMsg);\n        })\n        .then(response => {\n            instance.fireEvent('success', response);\n        })\n        .catch(error => {\n            instance.fireEvent('error', error);\n        });\n\n    // return the fetch request\n    instance.fetchRequest = fetchRequest;\n    return instance;\n}\n","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n","/**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */\nexport default function getId(prefix) {\n    if (prefix === undefined) {\n        prefix = 'wavesurfer_';\n    }\n    return (\n        prefix +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n","export { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as absMax } from './absMax';\nexport { default as Observer } from './observer';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\nexport { default as preventClick } from './prevent-click';\nexport { default as fetchFile } from './fetch';\nexport { default as clamp } from './clamp';\nexport { default as withOrientation } from './orientation';\nexport { default as ignoreSilenceMode } from './silence-mode';\n","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this._disabledEventEmissions = [];\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Disable firing a list of events by name. When specified, event handlers for any event type\n     * passed in here will not be called.\n     *\n     * @since 4.0.0\n     * @param {string[]} eventNames an array of event names to disable emissions for\n     * @example\n     * // disable seek and interaction events\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n     */\n    setDisabledEventEmissions(eventNames) {\n        this._disabledEventEmissions = eventNames;\n    }\n\n    /**\n     * plugins borrow part of this class without calling the constructor,\n     * so we have to be careful about _disabledEventEmissions\n     */\n\n    _isDisabledEventEmission(event) {\n        return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers || this._isDisabledEventEmission(event)) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n","const verticalPropMap = {\n    width: 'height',\n    height: 'width',\n\n    overflowX: 'overflowY',\n    overflowY: 'overflowX',\n\n    clientWidth: 'clientHeight',\n    clientHeight: 'clientWidth',\n\n    clientX: 'clientY',\n    clientY: 'clientX',\n\n    scrollWidth: 'scrollHeight',\n    scrollLeft: 'scrollTop',\n\n    offsetLeft: 'offsetTop',\n    offsetTop: 'offsetLeft',\n    offsetHeight: 'offsetWidth',\n    offsetWidth: 'offsetHeight',\n\n    left: 'top',\n    right: 'bottom',\n    top: 'left',\n    bottom: 'right',\n\n    borderRightStyle: 'borderBottomStyle',\n    borderRightWidth: 'borderBottomWidth',\n    borderRightColor: 'borderBottomColor'\n};\n\n/**\n * Convert a horizontally-oriented property name to a vertical one.\n *\n * @param {string} prop A property name\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {string} prop, converted appropriately\n */\nfunction mapProp(prop, vertical) {\n    if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\n        return vertical ? verticalPropMap[prop] : prop;\n    } else {\n        return prop;\n    }\n}\n\nconst isProxy = Symbol(\"isProxy\");\n\n/**\n * Returns an appropriately oriented object based on vertical.\n * If vertical is true, attribute getting and setting will be mapped through\n * verticalPropMap, so that e.g. getting the object's .width will give its\n * .height instead.\n * Certain methods of an oriented object will return oriented objects as well.\n * Oriented objects can't be added to the DOM directly since they are Proxy objects\n * and thus fail typechecks. Use domElement to get the actual element for this.\n *\n * @param {object} target The object to be wrapped and oriented\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n * @since 5.0.0\n */\nexport default function withOrientation(target, vertical) {\n    if (target[isProxy]) {\n        return target;\n    } else {\n        return new Proxy(\n            target, {\n                get: function(obj, prop, receiver) {\n                    if (prop === isProxy) {\n                        return true;\n                    } else if (prop === 'domElement') {\n                        return obj;\n                    } else if (prop === 'style') {\n                        return withOrientation(obj.style, vertical);\n                    } else if (prop === 'canvas') {\n                        return withOrientation(obj.canvas, vertical);\n                    } else if (prop === 'getBoundingClientRect') {\n                        return function(...args) {\n                            return withOrientation(obj.getBoundingClientRect(...args), vertical);\n                        };\n                    } else if (prop === 'getContext') {\n                        return function(...args) {\n                            return withOrientation(obj.getContext(...args), vertical);\n                        };\n                    } else {\n                        let value = obj[mapProp(prop, vertical)];\n                        return typeof value == 'function' ? value.bind(obj) : value;\n                    }\n                },\n                set: function(obj, prop, value) {\n                    obj[mapProp(prop, vertical)] = value;\n                    return true;\n                }\n            }\n        );\n    }\n}\n","/**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */\nfunction preventClickHandler(event) {\n    event.stopPropagation();\n    document.body.removeEventListener('click', preventClickHandler, true);\n}\n\n/**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */\nexport default function preventClick(values) {\n    document.body.addEventListener('click', preventClickHandler, true);\n}\n","/* eslint-disable valid-jsdoc */\n/**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n","/**\n * Ignores device silence mode when using the `WebAudio` backend.\n *\n * Many mobile devices contain a hardware button to mute the ringtone for incoming\n * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n * when muting the device ringer.\n *\n * @since 5.2.0\n */\nexport default function ignoreSilenceMode() {\n    // Set webaudio context with 1 second silent audio 44100 bit rate buffer to allow playing audio even if silent switch is on the device\n    const silentAC = new AudioContext();\n    const silentBS = silentAC.createBufferSource();\n    silentBS.buffer = silentAC.createBuffer(1, 1, 44100);\n    silentBS.connect(silentAC.destination);\n    silentBS.start();\n\n    // Set the src to a short bit of url encoded as a silent mp3\n    // NOTE The silence MP3 must be high quality, when web audio sounds are played\n    // in parallel the web audio sound is mixed to match the bitrate of the html sound\n    // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n    const audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\n\n    // disable iOS Airplay (setting the attribute in js doesn't work)\n    let tmp = document.createElement(\"div\");\n    tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n\n    let audioSilentMode = tmp.children.item(0);\n    audioSilentMode.src = audioData;\n    audioSilentMode.preload = \"auto\";\n    audioSilentMode.type = \"audio/mpeg\";\n    audioSilentMode.disableRemotePlayback = true;\n\n    // play\n    audioSilentMode.play();\n\n    // cleanup\n    audioSilentMode.remove();\n    tmp.remove();\n}\n","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\nimport MediaElementWebAudio from './mediaelement-webaudio';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform on current progress\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n * waveform is centered\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n * center waveform on current progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n * also with audio with big duration. For example:\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n *   wavesurfer.play();\n *   wavesurfer.setFilter(customFilter);\n * `\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave bars.\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {number} barWidth=null Draw the waveform using bars.\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n * eliminating waveform gaps\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n * attributes.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} hideCursor=false Whether to hide the mouse cursor\n * when one would normally be shown by default.\n * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n * when using the `WebAudio` backend.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * `'audio'|'video'` ('video' only for `MediaElement`)\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options. For example:\n * `let xhr = {\n *     cache: 'default',\n *     mode: 'cors',\n *     method: 'GET',\n *     credentials: 'same-origin',\n *     redirect: 'follow',\n *     referrer: 'client',\n *     requestHeaders: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ]\n * };`\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @typedef {Object} SplitChannelOptions\n * @desc parameters applied when splitChannels option is true\n * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n * @property {object} channelColors={} object describing color for each channel. Example:\n * {\n *     0: {\n *         progressColor: 'green',\n *         waveColor: 'pink'\n *     },\n *     1: {\n *         progressColor: 'orange',\n *         waveColor: 'purple'\n *     }\n * }\n * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n * @property {boolean} relativeNormalization=false determines whether\n * normalization is done per channel or maintains proportionality between\n * channels. Only applied when normalize and splitChannels are both true.\n * @property {boolean} splitDragSelection=false determines if drag selection in regions\n * plugin works separately on each channel or only one selection for all channels\n * @since 4.3.0\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     * @param {Object} ws The wavesurfer instance\n     */\n    constructor(params, ws) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioScriptProcessor: null,\n        audioRate: 1,\n        autoCenter: true,\n        autoCenterRate: 5,\n        autoCenterImmediately: false,\n        backend: 'WebAudio',\n        backgroundColor: null,\n        barHeight: 1,\n        barRadius: 0,\n        barGap: null,\n        barMinHeight: null,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        drawingContextAttributes: {\n            // Boolean that hints the user agent to reduce the latency\n            // by desynchronizing the canvas paint cycle from the event\n            // loop\n            desynchronized: false\n        },\n        duration: null,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        hideCursor: false,\n        ignoreSilenceMode: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        rtl: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        splitChannelsOptions: {\n            overlay: false,\n            channelColors: {},\n            filterChannels: [],\n            relativeNormalization: false,\n            splitDragSelection: false\n        },\n        vertical: false,\n        waveColor: '#999',\n        xhr: {}\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio,\n        MediaElementWebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n    static VERSION = __VERSION__;\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this} Wavesurfer instance\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = Object.assign({}, this.defaultParams, params);\n        this.params.splitChannelsOptions = Object.assign(\n            {},\n            this.defaultParams.splitChannelsOptions,\n            params.splitChannelsOptions\n        );\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        if (this.params.rtl === true) {\n            if (this.params.vertical === true) {\n                util.style(this.container, { transform: 'rotateX(180deg)' });\n            } else {\n                util.style(this.container, { transform: 'rotateY(180deg)' });\n            }\n        }\n\n        if (this.params.backgroundColor) {\n            this.setBackgroundColor(this.params.backgroundColor);\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * canceled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentRequest = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            (this.params.backend == 'WebAudio' ||\n                this.params.backend === 'MediaElementWebAudio') &&\n            !WebAudio.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n\n        /**\n         * Get the current ready status.\n         *\n         * @example const isReady = wavesurfer.isReady;\n         * @return {boolean}\n         */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(\n            () => {\n                if (\n                    this.drawer.wrapper &&\n                    prevWidth != this.drawer.wrapper.clientWidth &&\n                    !this.params.scrollParent\n                ) {\n                    prevWidth = this.drawer.wrapper.clientWidth;\n                    if (prevWidth) {\n                        // redraw only if waveform container is rendered and has a width\n                        this.drawer.fireEvent('redraw');\n                    }\n                }\n            },\n            typeof this.params.responsive === 'number'\n                ? this.params.responsive\n                : 100\n        );\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this} The wavesurfer instance\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this} The wavesurfer instance\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Get a map of plugin names that are currently initialised\n     *\n     * @example wavesurfer.getPlugins();\n     * @return {Object} Object with plugin names\n     */\n    getActivePlugins() {\n        return this.initialisedPluginList;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this} The wavesurfer instance\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this} The wavesurfer instance\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this} The wavesurfer instance\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n\n        // Relay the dblclick event from the drawer\n        this.drawer.on('dblclick', (e, progress) => {\n            this.fireEvent('dblclick', e, progress);\n        });\n\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('finish');\n        });\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n\n        // only needed for MediaElement and MediaElementWebAudio backend\n        if (\n            this.params.backend === 'MediaElement' ||\n            this.params.backend === 'MediaElementWebAudio'\n        ) {\n            this.backend.on('seek', () => {\n                this.drawer.progress(this.backend.getPlayedPercents());\n            });\n\n            this.backend.on('volume', () => {\n                let newVolume = this.getVolume();\n                this.fireEvent('volume', newVolume);\n\n                if (this.backend.isMuted !== this.isMuted) {\n                    this.isMuted = this.backend.isMuted;\n                    this.fireEvent('mute', this.isMuted);\n                }\n            });\n        }\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (seconds >= this.getDuration()) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise} Result of the backend play method\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        if (this.params.ignoreSilenceMode) {\n            // ignores device hardware silence mode\n            util.ignoreSilenceMode();\n        }\n\n        this.fireEvent('interaction', () => this.play(start, end));\n        return this.backend.play(start, end);\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} position Position (in seconds) to stop at\n     * @version 3.3.0\n     */\n    setPlayEnd(position) {\n        this.backend.setPlayEnd(position);\n    }\n\n    /**\n     * Stops and pauses playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise} Result of the backend pause method\n     */\n    pause() {\n        if (!this.backend.isPaused()) {\n            return this.backend.pause();\n        }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise} Result of the backend play or pause method\n     */\n    playPause() {\n        return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            throw new Error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const isWebAudioBackend = this.params.backend === 'WebAudio';\n        const paused = this.backend.isPaused();\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.pause();\n        }\n\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.play();\n        }\n\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Sets the ID of the audio device to use for output and returns a Promise.\n     *\n     * @param {string} deviceId String value representing underlying output\n     * device\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\n     * no errors detected.\n     */\n    setSinkId(deviceId) {\n        return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n    setVolume(newVolume) {\n        if (this.isMuted === true) {\n            this.savedVolume = newVolume;\n            return;\n        }\n        this.backend.setVolume(newVolume);\n        this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number} The current playback rate.\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. If not currently muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute Specify `true` to mute audio.\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     * console.log(wavesurfer.getMute()) // logs false\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            this.fireEvent('mute', this.isMuted);\n            return;\n        }\n\n        if (this.backend.setMute) {\n            // Backends such as the MediaElement backend have their own handling\n            // of mute, let them handle it.\n            this.backend.setMute(mute);\n            this.isMuted = mute;\n        } else {\n            if (mute) {\n                // If currently not muted then save current volume,\n                // turn off the volume and update the mute properties\n                this.savedVolume = this.backend.getVolume();\n                this.backend.setVolume(0);\n                this.isMuted = true;\n                this.fireEvent('volume', 0);\n            } else {\n                // If currently muted then restore to the saved volume\n                // and update the mute properties\n                this.backend.setVolume(this.savedVolume);\n                this.isMuted = false;\n                this.fireEvent('volume', this.savedVolume);\n            }\n        }\n        this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean} Current mute status\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array} List of enabled filters\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @param {?number} channelIdx Optional index of the channel to get its wave color if splitChannels is true\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\n     */\n    getWaveColor(channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            return this.params.splitChannelsOptions.channelColors[channelIdx].waveColor;\n        }\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\n     * @param {?number} channelIdx Optional index of the channel to set its wave color if splitChannels is true\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color, channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            this.params.splitChannelsOptions.channelColors[channelIdx].waveColor = color;\n        } else {\n            this.params.waveColor = color;\n        }\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @param {?number} channelIdx Optional index of the channel to get its progress color if splitChannels is true\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\n     */\n    getProgressColor(channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            return this.params.splitChannelsOptions.channelColors[channelIdx].progressColor;\n        }\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\n     * @param {?number} channelIdx Optional index of the channel to set its progress color if splitChannels is true\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color, channelIdx) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            this.params.splitChannelsOptions.channelColors[channelIdx].progressColor = color;\n        } else {\n            this.params.progressColor = color;\n        }\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the background color of the waveform container.\n     *\n     * @return {string} A CSS color string.\n     */\n    getBackgroundColor() {\n        return this.params.backgroundColor;\n    }\n\n    /**\n     * Set the background color of the waveform container.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\n     */\n    setBackgroundColor(color) {\n        this.params.backgroundColor = color;\n        util.style(this.container, { background: this.params.backgroundColor });\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Hide channels from being drawn on the waveform if splitting channels.\n     *\n     * For example, if we want to draw only the peaks for the right stereo channel:\n     *\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n     * wavesurfer.load('stereo_audio.mp3');\n     *\n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n     *\n     * @param {array} channelIndices Channels to be filtered out from drawing.\n     * @version 4.0.0\n     */\n    setFilteredChannels(channelIndices) {\n        this.params.splitChannelsOptions.filterChannels = channelIndices;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave view-port and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() *\n                this.params.minPxPerSec *\n                this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        // always start at 0 after zooming for scrolling : issue redraw left part\n        let start = 0;\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (\n            this.params.fillParent &&\n            (!this.params.scrollParent || nominalWidth < parentWidth)\n        ) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(\n                width,\n                start,\n                end\n            );\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n                this.drawer.drawPeaks(\n                    peaks,\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n            }\n        } else {\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer Buffer to process\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer Buffer to process\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.isReady = true;\n        this.fireEvent('ready');\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current `minPxPerSec` and zoom value) without having to decode\n     * the audio.\n     * @returns {void}\n     * @throws Will throw an error if the `url` argument is empty.\n     * @example\n     * // uses fetch or media element to load file (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * // peaks\n     * wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        if (!url) {\n            throw new Error('url parameter cannot be empty');\n        }\n        this.empty();\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\n                        this.params.backend\n                    ) === -1,\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        // loadBuffer(url, peaks, duration) requires that url is a string\n        // but users can pass in a HTMLMediaElement to WaveSurfer\n        if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\n            url = url.src;\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n            case 'MediaElementWebAudio':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string} url URL of audio file\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Optional duration of audio file\n     * @returns {void}\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration Optional duration of audio file\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                // ignore when backend was already destroyed\n                if (!this.backend.destroyed) {\n                    this.drawBuffer();\n                    this.isReady = true;\n                    this.fireEvent('ready');\n                }\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If peaks are provided, render them and fire the `waveform-ready` event.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n        }\n\n        // If no pre-decoded peaks are provided, or are provided with\n        // forceDecode flag, attempt to download the audio file and decode it\n        // with Web Audio.\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        if (!this.isDestroyed) {\n            this.arraybuffer = arraybuffer;\n            this.backend.decodeArrayBuffer(\n                arraybuffer,\n                data => {\n                    // Only use the decoded data if we haven't been destroyed or\n                    // another decode started in the meantime\n                    if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                        callback(data);\n                        this.arraybuffer = null;\n                    }\n                },\n                () => this.fireEvent('error', 'Error decoding audiobuffer')\n            );\n        }\n    }\n\n    /**\n     * Load an array buffer using fetch and pass the result to a callback\n     *\n     * @param {string} url The URL of the file object\n     * @param {function} callback The function to call on complete\n     * @returns {util.fetchFile} fetch call\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        let options = Object.assign(\n            {\n                url: url,\n                responseType: 'arraybuffer'\n            },\n            this.params.xhr\n        );\n        const request = util.fetchFile(options);\n\n        this.currentRequest = request;\n\n        this.tmpEvents.push(\n            request.on('progress', e => {\n                this.onProgress(e);\n            }),\n            request.on('success', data => {\n                callback(data);\n                this.currentRequest = null;\n            }),\n            request.on('error', e => {\n                this.fireEvent('error', e);\n                this.currentRequest = null;\n            })\n        );\n\n        return request;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e Progress event\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and optionally opens in a new window\n     * as valid JSON Blob instance.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks\n     * @param {number} accuracy=10000\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start Start index\n     * @param {number} end End index\n     * @return {Promise} Promise that resolves with array of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start, end) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start, end);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n\n        return new Promise((resolve, reject) => {\n            if (!noWindow){\n                const blobJSON = new Blob(\n                    [JSON.stringify(arr)],\n                    {type: 'application/json;charset=utf-8'}\n                );\n                const objURL = URL.createObjectURL(blobJSON);\n                window.open(objURL);\n                URL.revokeObjectURL(objURL);\n            }\n            resolve(arr);\n        });\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `image/png`. Other supported types are\n     * `image/jpeg` and `image/webp`.\n     *\n     * @param {string} format='image/png' A string indicating the image format.\n     * The default format type is `image/png`.\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\n     * quality to use for image formats that use lossy compression such as\n     * `image/jpeg` and `image/webp`.\n     * @param {string} type Image data type to return. Either `dataURL` (default)\n     * or `blob`.\n     * @return {string|string[]|Promise} When using `dataURL` type this returns\n     * a single data URL or an array of data URLs, one for each canvas. When using\n     * `blob` type this returns a `Promise` resolving with an array of `Blob`\n     * instances, one for each canvas.\n     */\n    exportImage(format, quality, type) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n        if (!type) {\n            type = 'dataURL';\n        }\n\n        return this.drawer.getImage(format, quality, type);\n    }\n\n    /**\n     * Cancel any fetch request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentRequest && this.currentRequest.controller) {\n            // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n            // See: Wavesurfer issue #2042\n            // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n            if (this.currentRequest._reader) {\n                // Ignoring exceptions thrown by call to cancel()\n                this.currentRequest._reader.cancel().catch(err => {});\n            }\n\n            this.currentRequest.controller.abort();\n            this.currentRequest = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.isReady = false;\n        this.cancelAjax();\n        this.clearTmpEvents();\n\n        // empty drawer\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        if (this.backend) {\n            this.backend.destroy();\n            // clears memory usage\n            this.backend = null;\n        }\n        if (this.drawer) {\n            this.drawer.destroy();\n        }\n        this.isDestroyed = true;\n        this.isReady = false;\n        this.arraybuffer = null;\n    }\n}\n","import * as util from './util';\n\n// using constants to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {util.Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** audioContext: allows to process audio with WebAudio API */\n    audioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext} Existing audio context, or creates a new one\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate The sample rate to use\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\n     * a new one\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** ac: Audio Context instance */\n        this.ac =\n            params.audioContext ||\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** gainNode: allows to control audio volume */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** analyser: provides audio analysis information */\n        this.analyser = null;\n        /** scriptNode: allows processing audio */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = params.duration;\n        /** @private */\n        this.sinkStreamDestination = null;\n        /** @private */\n        this.sinkAudioElement = null;\n        /**\n         * Boolean indicating if the backend was destroyed.\n         */\n        this.destroyed = false;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {string} state The new state\n     */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters One or more filters to set\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n    /** Create ScriptProcessorNode to process audio */\n    createScriptNode() {\n        if (this.params.audioScriptProcessor) {\n            this.scriptNode = this.params.audioScriptProcessor;\n            this.scriptNode.connect(this.ac.destination);\n        }\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        const loop = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration() && this.state !== this.states[FINISHED]) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause && this.state !== this.states[PAUSED]) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n                util.frame(loop)();\n            }\n        };\n\n        loop();\n    }\n\n    /** Create analyser node to perform audio analysis */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            /**\n             * The webaudio API doesn't currently support setting the device\n             * output. Here we create an HTMLAudioElement, connect the\n             * webaudio stream to that element and setSinkId there.\n             */\n            if (!this.sinkAudioElement) {\n                this.sinkAudioElement = new window.Audio();\n                // autoplay is necessary since we're not invoking .play()\n                this.sinkAudioElement.autoplay = true;\n            }\n            if (!this.sinkAudioElement.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            if (!this.sinkStreamDestination) {\n                this.sinkStreamDestination = this.ac.createMediaStreamDestination();\n            }\n            this.gainNode.disconnect();\n            this.gainNode.connect(this.sinkStreamDestination);\n            this.sinkAudioElement.srcObject = this.sinkStreamDestination.stream;\n\n            return this.sinkAudioElement.setSinkId(deviceId);\n        } else {\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n        }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete.\n     * @param {function} errback The function to call on error.\n     */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\n            );\n        }\n        if ('webkitAudioContext' in window) {\n            // Safari: no support for Promise-based decodeAudioData enabled\n            // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n            this.offlineAc.decodeAudioData(\n                arraybuffer,\n                data => callback(data),\n                errback\n            );\n        } else {\n            this.offlineAc.decodeAudioData(arraybuffer).then(\n                (data) => callback(data)\n            ).catch(\n                (err) => errback(err)\n            );\n        }\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Explicit duration\n     */\n    setPeaks(peaks, duration) {\n        if (duration != null) {\n            this.explicitDuration = duration;\n        }\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio)\n     *\n     * @param {number} length The rendered length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n        if (!this.buffer) {\n            return [];\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        if (!this.buffer) {\n            return this.params.splitChannels\n                ? this.splitPeaks\n                : this.mergedPeaks;\n        }\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                /**\n                 * Initialize the max and min to the first sample of this\n                 * subrange, so that even if the samples are entirely\n                 * on one side of zero, we still return the true max and\n                 * min values in the subrange.\n                 */\n                let min = chan[start];\n                let max = min;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Position\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n    /**\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n     */\n    destroyWebAudio() {\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode && this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n\n        // disconnect resources used by setSinkId\n        if (this.sinkStreamDestination) {\n            this.sinkAudioElement.pause();\n            this.sinkAudioElement.srcObject = null;\n            this.sinkStreamDestination.disconnect();\n            this.sinkStreamDestination = null;\n        }\n    }\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.destroyed = true;\n\n        this.destroyWebAudio();\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer Decoded audio buffer to load\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        // adjust for old browsers\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.setPlaybackRate(this.playbackRate);\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * @private\n     *\n     * some browsers require an explicit call to #resume before they will play back audio\n     */\n    resumeAudioContext() {\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Whether or not this backend is currently paused\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration of loaded buffer\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}} Object containing start and end\n     * positions\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number} The playback position in seconds\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start);\n\n        this.resumeAudioContext();\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        try {\n            this.source && this.source.stop(0);\n        } catch (err) {\n            // Calling stop can throw the following 2 errors:\n            // - RangeError (The value specified for when is negative.)\n            // - InvalidStateNode (The node has not been started by calling start().)\n            // We can safely ignore both errors, because:\n            // - The range is surely correct\n            // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n        }\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} The current time in seconds\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number} The current playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value The playback rate to use\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.source && this.source.playbackRate.setValueAtTime(\n            this.playbackRate,\n            this.ac.currentTime\n        );\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} end Position to end at\n     * @version 3.3.0\n     */\n    setPlayEnd(end) {\n        this.scheduledPause = end;\n    }\n}\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n",""],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}